{"version":3,"sources":["background/HexaBackground.tsx","hooks/useField.tsx","reducers/userReducer.tsx","components/Menu.tsx","reducers/notificationReducer.tsx","services/loginService.tsx","services/cvService.tsx","utils/serviceHelper.tsx","components/MyCVForm/MyCVFormLanguageLevelSelector.tsx","reducers/cvReducer.tsx","components/Login.tsx","components/Footer.tsx","components/UsersRow.tsx","services/usersService.tsx","components/Toolbar.tsx","components/UsersForm.tsx","components/Users.tsx","components/About.tsx","components/MyCVForm/MyCVFormPanelButtons.tsx","components/MyCVForm/MyCVFormDateSelector.tsx","components/MyCVForm/MyCVFormPanel.tsx","components/MyCVForm.tsx","components/Home.tsx","components/MyCV.tsx","components/NotificationMessage.tsx","components/NotificationArea.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Color","FieldType","Background","props","cos30","Math","sqrt","hexaRow","x","y","hexaSize","spacing","colors","rowIndex","dx","key","map","color","index","EMPTY","strokeColor","LIGHT","STROKE_LIGHT","STROKE_HIGHLIGHT","point1","point2","point3","point4","point5","point6","points","concat","style","stroke","strokeWidth","fill","hexagon","transformToColorArray","numbers","result","forEach","push","GREY","BLUE","DARK","drawHexaGrid","numberGrid","dy","height","width","viewBox","preserveAspectRatio","bottom","className","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","token","username","name","userReducer","state","action","type","data","removeItem","mapDispatchToProps","logoutUser","connect","lastOpenedCV","cv","lastOpened","location","useLocation","showLogout","length","showRoutes","src","alt","to","pathname","includes","onClick","disabled","Type","useField","useState","value","setValue","onChange","event","currentTarget","password","credentials","axios","post","then","response","ServiceType","guidGenerator","S4","random","toString","substring","initState","visible","messages","showNotification","message","lifeTime","dispatch","a","async","id","text","setTimeout","notificationReducer","newMessages","newState","filter","getConfigHeader","headers","ILevel","createObject","object","field","newObjectWithoutIdAndOwner","Object","fromEntries","entries","console","log","catch","error","modifyObject","changes","put","deleteObject","request","delete","getAllCV","get","communication","skills","info","attachments","experience","exp","timeFrame","startDate","Date","endDate","education","edu","createEmptyCV","CV","contact","firstname","lastname","duplicateCV","duplicateContact","address","company","email","phone","phoneAvailable","pictureUrl","duplicateProfile","profile","content","duplicateProjects","projects","project","description","githubUrl","showcaseUrl","thumbnailUrl","duplicateReference","reference","duplicateExperience","duplicateEducation","duplicateCommunication","languages","language","level","duplicateSkills","duplicateInfo","dupliaceAttachments","github","techlist","cvId","PROFILE","PROJECT","CONTACT","EXPERIENCE","COMMUNICATION","INFO","setCVDefault","defaultCommand","cvid","baseUrl","cvs","owner","created","updateCVs","cvService","cvReducer","find","cvObject","emptyExperience","floor","Array","emptyContact","emptyProject","emptyProfile","emptyCommunication","emptyInfo","objectId","undefined","setUser","TEXT","PASSWORD","onSubmit","preventDefault","loginService","setItem","stringify","SUCCESS","ERROR","UsersRow","expires","handleUserDelete","Toolbar","children","CalcDate","setName","setUsername","setExpires","setPassword","passwordConfirm","setPasswordConfirm","now","passwordMatch","setPasswordMatch","checkPasswordMatch","password1","password2","usersService","reloadUsers","closeForm","WARNING","autoComplete","target","TWO_WEEKS","ONE_MONTH","backgroundColor","textAlign","marginTop","users","setUsers","useEffect","updateUsers","showAddUser","setShowAddUser","display","About","href","DeleteButton","isSubmitting","handleDelete","ClearButton","values","clearActionValues","setValues","CancelButton","formValues","SaveButton","from","i","months","MyCVFormDateSelector","dateProp","date","getFullYear","year","setYear","getMonth","month","setMonth","getDate","day","setDay","lastDayOfTheMonth","setLastDayOfTheMonth","newYear","parseInt","handleChange","yearNumber","newMonth","monthNumber","newDay","dayNumber","levels","Elementary","EveryDay","Working","Advanced","Professional","Native","MyCVFormLanguageLevelSelector","initLevel","setLevel","stringToArray","split","addEmptyCVObject","removeTempCVObject","serviceType","initialValues","setSubmitting","placeholder","component","render","newLevel","newValues","entry","as","CVid","join","enableReinitialize","newDate","MyCVForm","renderInfoForm","renderContactForm","renderExperienceForm","renderProjectForm","ref","renderCommunicationForm","renderTimeFrame","duration","valueOf","preview","paragraph","marginRight","sort","b","getTime","skill","attachment","setPreviousCV","formActive","myCVs","exact","path","match","params","zIndex","NotificationMessage","hovered","setHovered","onMouseEnter","onMouseLeave","deleteNotification","opacity","notification","hideLogin","setHeight","document","getElementById","clientHeight","Boolean","hostname","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","renderApp","ReactDOM","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.586007b8.chunk.js","sourcesContent":["import React from 'react'\nimport './HexaBackground.css'\n// import useWindowDimensions from '../hooks/useWindowDimensions'\n\ninterface Props {\n    height: number,\n    bottom?: boolean\n}\n\n// TODO: move this to css\nenum Color {\n    EMPTY = '',\n    LIGHT = 'rgb(219, 223, 224)',\n    GREY = 'rgb(195,202,209)',\n    BLUE = 'rgb(189,205,219)',\n    DARK = 'rgb(172,176,187)',\n    STROKE_LIGHT = 'rgb(212, 213, 214)',\n    STROKE_HIGHLIGHT = 'rgb(184, 191, 204)', \n}\n\nconst Background: React.FC<Props> = (props: Props) => {\n\n    // const { height } = props\n\n    const hexaSize = 46\n    const spacing = 7\n    const cos30 = 1.5/Math.sqrt(3)\n\n    const hexagon = (x: number, y: number, hexaSize: number, color: Color, index: string) => {\n        if ( color === Color.EMPTY ) {\n            return ''\n        }\n        const strokeColor = color === Color.LIGHT ? Color.STROKE_LIGHT : Color.STROKE_HIGHLIGHT\n        const point1 = `${ x - hexaSize }, ${ y } `\n        const point2 = `${x - hexaSize * .5}, ${y - hexaSize * cos30 } `\n        const point3 = `${x + hexaSize * .5}, ${y - hexaSize * cos30 } `\n        const point4 = `${ x + hexaSize },${ y } `\n        const point5 = `${x + hexaSize * .5}, ${y + hexaSize * cos30 } `\n        const point6 = `${x - hexaSize * .5}, ${y + hexaSize * cos30 } `\n        const points = point1.concat(point2,point3,point4,point5,point6)\n        return <polygon key={index} points={points} style={{ stroke: strokeColor, strokeWidth: 3, fill: color }}/>\n    }\n\n    const hexaRow = (x: number, y: number, hexaSize: number, spacing: number, colors: Color[], rowIndex:number) => {\n        const dx = hexaSize * 3 + spacing * 2 * cos30\n        return <g key={`hexaRow${rowIndex}`}>\n            {colors.map((color,index)=>{\n                return hexagon(x + dx * index, y, hexaSize, color, `r${rowIndex}h${index}`)\n            })}\n        </g>\n    }\n\n    const transformToColorArray = ( numbers:number[] ) => {\n        let result:Color[] = []\n        numbers.forEach((color, index) => {\n            if ( color < 1 ) {\n                result.push(Color.EMPTY)\n            } else if ( color < 2) {\n                result.push(Color.LIGHT)\n            } else if (color < 3) {\n                result.push(Color.GREY)\n            } else if (color < 4) {\n                result.push(Color.BLUE)\n            } else {\n                result.push(Color.DARK)\n            }\n        });\n        return result\n    }\n\n    const drawHexaGrid = (numberGrid: number[][]) => {\n        const dy = hexaSize * 2 * cos30 + spacing\n        return (\n            <svg height='100%' width='100%' viewBox='0 0 1200 1200' preserveAspectRatio={props.bottom ? \"xMidYMin slice\" : \"xMidYMin slice\"} className={props.bottom ? 'bottom-hexa' : 'top-hexa'}>\n                {numberGrid.map( (numbers:number[], index) => {\n                        if ( index%2 === 0 ) {\n                            return hexaRow( 0, 0 + dy * index/2, hexaSize, spacing, transformToColorArray(numbers), index)\n                        } else {\n                            return hexaRow(0 + hexaSize * 1.5 + spacing * cos30, 0 + hexaSize * cos30 + spacing * .5 + dy * (index - 1) / 2,\n                                hexaSize, spacing, transformToColorArray(numbers), index)\n                        }\n                    })}\n                {/* <text x='4' y='50%'>{height}</text> */}\n            </svg>\n        )\n    } \n\n    if (props.bottom) {\n        return <div>\n            {drawHexaGrid(\n                [\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n                    [1, 0, 1, 0, 0, 0, 0, 0],\n                    [1, 0, 1, 0, 0, 0, 0, 0, 1],\n                    [1, 0, 0, 1, 1, 0, 1, 1],\n                    [3, 1, 1, 0, 0, 1, 1, 1, 2],\n                    [2, 1, 1, 1, 1, 1, 1, 2],\n                    [3, 2, 2, 1, 1, 1, 1, 2, 4],\n                    [4, 3, 2, 1, 1, 1, 2, 4],\n                    [3, 3, 3, 3, 2, 2, 3, 3, 2],\n                    [2, 2, 4, 4, 2, 2, 4, 3],\n                    [2, 2, 3, 2, 3, 3, 3, 2, 3],\n                ]\n            )\n        }</div>\n    } else {\n        return <div>\n            {drawHexaGrid(\n                [\n                    [3, 2, 3, 2, 3, 3, 3, 2, 3],\n                    [3, 2, 4, 2, 2, 2, 2, 4],\n                    [3, 2, 3, 2, 3, 4, 3, 2, 3],\n                    [4, 2, 4, 2, 3, 4, 2, 4],\n                    [3, 2, 2, 2, 2, 1, 1, 2, 4],\n                    [2, 1, 1, 1, 1, 1, 2, 2],\n                    [3, 1, 1, 1, 1, 1, 1, 1, 2],\n                    [1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 1, 1, 0, 1, 0, 1, 1],\n                    [1, 1, 0, 1, 0, 1, 0, 1, 1],\n                    [1, 0, 0, 0, 0, 0, 1, 1],\n                ]\n            )}\n        </div>\n    }\n    \n}\n\nexport default Background\n","import { useState } from 'react'\n\nexport enum FieldType {\n    TEXT = 'text',\n    PASSWORD = 'password'\n}\n\nconst useField = (type: FieldType) => {\n    const [value, setValue] = useState('')\n\n    const onChange = (event: React.FormEvent<HTMLInputElement> ):void => {\n        setValue(event.currentTarget.value)\n    }\n\n    // const reset = ():string => {\n    //     setValue('')\n    //     return 'null'\n    // }\n\n    return {\n        type,\n        value,\n        onChange,\n    }\n}\n\nexport default useField\n","export interface UserState {\n    token: string,\n    username: string,\n    name: string,\n}\n\ninterface SetUserAction {\n    type: string\n    data: UserState\n}\n\nconst loggedUserJSON = window.localStorage.getItem('loggedUser')\nconst user:UserState = loggedUserJSON ? JSON.parse(loggedUserJSON) : { token: '', username: '', name:'' }\n\nconst userReducer = (state: UserState | undefined = user, action: SetUserAction ) => {\n    switch (action.type) {\n        case 'SET_USER': {\n            return action.data\n        }\n        case 'LOGOUT_USER': {\n            window.localStorage.removeItem('loggedUser')\n            return { token: '', username: '', name: '' }\n        }\n        default: return state\n    }\n}\n\nexport const setUser = (user: UserState) => {\n    const action:SetUserAction = {\n        type: 'SET_USER',\n        data: user\n    }\n    return action\n}\n\nexport const logoutUser = () => {\n    const action = {\n        type: 'LOGOUT_USER',\n    }\n    return action\n}\n\nexport default userReducer","import React from 'react'\nimport './Menu.css'\nimport { Link, useLocation } from 'react-router-dom'\nimport { UserState, logoutUser } from '../reducers/userReducer'\nimport { AppState } from '..'\nimport { connect } from 'react-redux'\n\ninterface OwnProps {\n    showRoutes: boolean\n}\nexport interface StateProps { user: UserState, lastOpenedCV: string }\nexport interface DispatchProps { logoutUser: Function }\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n    return {\n        user: state.user,\n        lastOpenedCV: state.cv.lastOpened\n    }\n}\n\nconst mapDispatchToProps:DispatchProps = {\n    logoutUser\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Menu: React.FC<Props> = (props) => {\n\n    const location = useLocation()\n\n    const showLogout = props.user && props.user.token.length > 2\n    const renderLogout = () => {\n        if (showLogout) {\n            return (<button className='setting-item logout-button' onClick={() => props.logoutUser()}>logout</button>)\n        }\n        return (<button disabled className='setting-item logout-button'>logout</button>)\n    }\n    if (!props.showRoutes) {\n        return (\n            <div className='Menu'>\n                <div className='cv-app-logo'>\n                    <img src='./logo.svg' width='38px' height='38px' alt='logo'/>\n                </div>\n                <div className='menu-items'>\n                    <Link to='/' >\n                        <div className={location.pathname === '/' ? 'menu-item selected' : 'menu-item'}>Curriculum Vitae</div>\n                    </Link>\n                    <Link to='/users'>\n                        <div className={location.pathname === '/users' ? 'menu-item selected' : 'menu-item'}>Users</div>\n                    </Link>\n                    <Link to={`/mycv${props.lastOpenedCV.length > 1 ? '/' + props.lastOpenedCV : ''}`}>\n                        <div className={location.pathname.includes('/mycv') ? 'menu-item selected' : 'menu-item'}>MyCV</div>\n                    </Link>\n                    <Link to='/about'>\n                        <div className={location.pathname === '/about' ? 'menu-item selected' : 'menu-item'}>About</div>\n                    </Link>\n                </div>\n                <div className='settings'>\n                    {/* <div className='setting-item'>language</div> */}\n                    {renderLogout()}\n                </div>\n            </div>\n        )\n    }\n    return(\n        <div className='Menu'>\n            <div className='cv-app-logo'>\n                <img src='logo.svg' width='38px' height='38px' alt='logo'/>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Menu)","export enum Type {\n    ERROR = 'error',\n    SUCCESS = 'success',\n    WARNING = 'warning'\n}\n\nexport interface Message {\n    text: string,\n    id: string,\n    type: Type\n}\n\nexport interface NotificationState {\n    visible: boolean,\n    messages: Message[]\n}\n\ninterface NotificationAction {\n    type: string,\n    id?: string,\n    data: Message[]\n}\n\n// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id\nconst guidGenerator = () => {\n    var S4 = function () {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n}\n\nconst initState: NotificationState = {\n    visible: true,\n    messages: []\n} \n\nconst notificationReducer = (state: NotificationState = initState, action: NotificationAction) => {\n    switch (action.type) {\n        case 'SHOW_NOTIFICATION': {\n            const newMessages = state.messages.concat(action.data)\n            const newState = {\n                visible: true,\n                messages: newMessages\n            }\n            return newState\n        }\n        case 'DELETE_NOTIFICATION': {\n            const newMessages:Message[] = state.messages.filter(message => message.id !== action.id)\n            const newState = {\n                visible: (newMessages.length > 0),\n                messages: newMessages\n            }\n            return newState\n        }\n        default: return state\n    }\n}\n\n\nexport const showNotification = (message:string, type:Type, lifeTime?:number ) => {\n    return async (dispatch:any) => {\n        const id = guidGenerator()\n        const action: NotificationAction = {\n            type: 'SHOW_NOTIFICATION',\n            data: [{ text: message, id: id, type: type }]\n        }\n        dispatch(action)\n        if ( lifeTime ) {\n            setTimeout(() => {\n                const deleteAfterTimeoutAction: NotificationAction = {\n                    type: 'DELETE_NOTIFICATION',\n                    id: id,\n                    data: []\n                }\n                dispatch(deleteAfterTimeoutAction)\n            }, lifeTime * 1000)\n        }\n    }\n    \n}\n\nexport const deleteNotification = (id: string) => {\n    const action:NotificationAction = {\n        type: 'DELETE_NOTIFICATION',\n        id: id,\n        data: []\n    }\n    return action\n}\n\nexport default notificationReducer\n","import axios, { AxiosResponse } from 'axios'\nconst baseUrl = '/api/login'\n\ninterface loginResponse extends AxiosResponse {\n    data: {\n        token: string,\n        username: string,\n        name: string\n    }\n}\n\nexport interface loginError {\n    response: {\n        data:{\n            error: string\n        }\n    }\n}\n\nconst login = (username:string, password:string) => {\n    const credentials = { 'username':username, 'password':password }\n    const request = axios.post(baseUrl, credentials)\n    return request.then((response: loginResponse) => response.data)\n}\n\nexport default { login }\n","import axios, { AxiosResponse } from 'axios'\nimport { IUser } from './usersService'\nimport { getConfigHeader } from '../utils/serviceHelper'\nconst baseUrl = '/api/cv'\n\nexport interface IContact {\n    owner: IUser,\n    address: string,\n    company: string,\n    email: string,\n    firstname: string,\n    lastname: string,\n    phone: string,\n    phoneAvailable: string,\n    pictureUrl: string,\n    id: string\n}\n\nexport interface IExperience {\n    description: string,\n    name: string,\n    owner: IUser,\n    timeFrame: {\n        startDate: Date,\n        endDate: Date,\n    },\n    id: string,\n}\n\nexport interface IInfo {\n    name: string,\n    id: string,\n    content: string[],\n    owner: IUser,\n}\n\nexport interface ICommunication extends IInfo {\n    languages: {\n        language: string,\n        level: string,\n    }[],\n}\n\nexport interface IProfile {\n    name: string,\n    id: string,\n    content: string[],\n    owner?: IUser,\n}\n\nexport interface IProject {\n    description: string,\n    githubUrl: string,\n    name: string,\n    owner: IUser,\n    showcaseUrl: string,\n    thumbnailUrl: string,\n    id: string,\n}\n\nexport interface ICV extends ICVEmpty {\n    owner: IUser,\n    contact: IContact, // single\n    id: string,\n}\n\ninterface IContactEmpty {\n    address?: string,\n    company?: string,\n    email?: string,\n    firstname: string,\n    lastname: string,\n    phone?: string,\n    phoneAvailable?: string,\n    pictureUrl?: string,\n}\n\ninterface ICVEmpty {\n    name: string,\n    github?: string,\n    techlist?: string,\n    contact: IContactEmpty, // single\n    profile?: IProfile, // single\n    projects?: IProject[],\n    reference?: IContact[],\n    experience?: IExperience[],\n    education?: IExperience[],\n    communication?: ICommunication, // single\n    skills?: IInfo, // single\n    info?: IInfo, // single\n    attachments?: IInfo, // single\n}\n\nexport enum ServiceType {\n    CV = '',\n    CONTACT = '/contact',\n    PROFILE = '/profile',\n    EXPERIENCE = '/experience',\n    COMMUNICATION = '/communication',\n    INFO = '/info',\n    PROJECT = '/project'\n}\n\ninterface getAllCVResponse extends AxiosResponse {\n    data: ICV[]\n    // | IContact[] | IProfile[] | IExperience[] | ICommunication[] | IInfo[]  \n}\n\nconst createEmptyCV = () => {\n    const emptyCV: ICVEmpty = {\n        name: 'name-required',\n        contact: {\n            firstname: 'firstname-required',\n            lastname: 'lastname-required'\n        }\n    }\n    const request = axios.post(baseUrl + ServiceType.CV, emptyCV, getConfigHeader())\n    return request.then((response:any) => {\n        return response.data\n    })\n}\n\nconst duplicateCV = (cv: ICV) => {\n    const duplicateContact: IContactEmpty = {\n        address: cv.contact.address,\n        company: cv.contact.company,\n        email: cv.contact.email,\n        firstname: cv.contact.firstname,\n        lastname: cv.contact.lastname,\n        phone: cv.contact.phone,\n        phoneAvailable: cv.contact.phoneAvailable,\n        pictureUrl: cv.contact.pictureUrl, \n    }\n\n    const duplicateProfile: any = cv.profile ? {\n            content: cv.profile.content,\n            name: cv.profile.name + ' duplicate'\n        } : null\n\n    const duplicateProjects: any = cv.projects ?\n        cv.projects.map((project) => { return {\n            description: project.description,\n            githubUrl: project.githubUrl,\n            name: project.name + ' duplicate',\n            showcaseUrl: project.showcaseUrl,\n            thumbnailUrl: project.thumbnailUrl,\n        }}) : null\n\n    const duplicateReference: any = cv.reference ?\n        cv.reference.map((contact: any) => {\n            return {\n                address: contact.address,\n                company: contact.company,\n                email: contact.email,\n                firstname: contact.firstname,\n                lastname: contact.lastname,\n                phone: contact.phone,\n                phoneAvailable: contact.phoneAvailable,\n                pictureUrl: contact.pictureUrl, \n            }\n        }) : null\n\n    const duplicateExperience: any = cv.experience ?\n        cv.experience.map((experience: any) => {\n            return {\n                description: experience.description,\n                name: experience.name + ' duplicate',\n                timeFrame: {\n                    startDate: experience.timeFrame.startDate,\n                    endDate: experience.timeFrame.endDate,\n                }\n            }\n        }) : null\n\n    const duplicateEducation: any = cv.education ?\n        cv.education.map((experience: any) => {\n            return {\n                description: experience.description,\n                name: experience.name + ' duplicate',\n                timeFrame: {\n                    startDate: experience.timeFrame.startDate,\n                    endDate: experience.timeFrame.endDate,\n                }\n            }\n        }) : null\n\n    const duplicateCommunication: any = cv.communication ? {\n        name: cv.communication.name + 'duplicate',\n        content: cv.communication.content,\n        languages: cv.communication.languages.map( (language: any) => { return {\n            language: language.language,\n            level: language.level\n        }})\n    } : null\n\n    const duplicateSkills: any = cv.skills ? {\n        name: cv.skills.name + ' duplicate',\n        content: cv.skills.content\n    } : null\n\n    const duplicateInfo: any = cv.info ? {\n        name: cv.info.name + ' duplicate',\n        content: cv.info.content\n    } : null\n\n    const dupliaceAttachments: any = cv.attachments ? {\n        name: cv.attachments.name + ' duplicate',\n        content: cv.attachments.content\n    } : null\n\n    const duplicateCV: any = {\n        name: cv.name,\n        contact: duplicateContact,\n        github: cv.github,\n        techlist: cv.techlist\n    }\n\n    const request = axios.post(baseUrl + ServiceType.CV, duplicateCV, getConfigHeader())\n    return request.then( async (response: any) => {\n        console.log('succesful duplicate cv response', response)\n\n        const cvId = response.data.id\n\n        createObject(ServiceType.PROFILE, duplicateProfile, cvId, 'profile')\n\n        duplicateProjects.map((project: any) => \n            createObject(ServiceType.PROJECT, project, cvId, 'projects')\n        )\n\n        duplicateReference.map( async (reference: any) => {\n            await createObject(ServiceType.CONTACT, reference, cvId, 'reference')\n        })\n\n        duplicateExperience.map( async (experience: any) => {\n            await createObject(ServiceType.EXPERIENCE, experience, cvId, 'experience')\n        })\n\n        duplicateEducation.map( async (experience: any) => {\n            await createObject(ServiceType.EXPERIENCE, experience, cvId, 'education')\n        })\n        \n        await createObject(ServiceType.COMMUNICATION, duplicateCommunication, cvId, 'communication')\n\n        await createObject(ServiceType.INFO, duplicateSkills, cvId, 'skills')\n\n        await createObject(ServiceType.INFO, dupliaceAttachments, cvId, 'attachments')\n\n        await createObject(ServiceType.INFO, duplicateInfo, cvId, 'info')\n\n        return response.data\n    })\n}\n\nconst createObject = (type: ServiceType, object: any, id:string, field?:string) => {\n    const newObjectWithoutIdAndOwner = Object.fromEntries(Object.entries(object).filter(([key, value]) => key !== 'id' && key !== 'owner' && value !== '') )\n    const request = axios.post(baseUrl + type, { ...newObjectWithoutIdAndOwner, cv: { id, field: field ? field : ''} }, getConfigHeader())\n    return request.then((response:any) => {\n        console.log('successful createObject response: ', response)\n        return response.data\n    }).catch(error => {\n     console.log('create object error:', error.response.data.error)\n    })\n}\n\nconst modifyObject = (type: ServiceType, id: string, object: any ) => {\n    const changes = Object.fromEntries(Object.entries(object).filter(([key, value]) => key !== 'id'))\n    const request = axios.put(baseUrl + type, { changes, id },getConfigHeader())\n    return request.then((response:any) => {\n        return response.data\n    }).catch(error => {\n     console.log('modify object error:',error.response.data.error)\n    })\n}\n\nconst deleteObject = (type: ServiceType, id: string) => {\n    const request = axios.delete(baseUrl + type + '/' + id, getConfigHeader())\n    console.log('delete ' + baseUrl + type + '/' + id)\n    return request.then((response:any) => {\n        return response.data\n    })\n}\n\ninterface IExperienceNoDate {\n    description: string,\n    name: string,\n    timeFrame: {\n        startDate: string,\n        endDate: string,\n    },\n    id: string,\n}\n\ninterface ISetDefaultCV {\n    cvid: string,\n    userid?: string,\n}\n\ninterface defaultResponse extends AxiosResponse {\n    data: {\n        message: string\n    }\n}\n\nconst setCVDefault = (cv: string) => {\n    const defaultCommand: ISetDefaultCV = {\n        cvid: cv\n    }\n\n    const request = axios.post(baseUrl + '/default', defaultCommand, getConfigHeader())\n    return request.then((response: defaultResponse) => {\n        return response.data\n    })\n}\n\nconst getAllCV = () => {\n    // TODO: prevent request if there is no Authorization\n    const request = axios.get(baseUrl, getConfigHeader())\n    return request.then((response: getAllCVResponse) => {\n        // console.log('formatted data will be handling this:',response.data)\n        // format data to match ICV interface (mongoose wiggles the non required values to arrays)\n        const formattedData = response.data.map((cv:any) => {\n            return { ...cv,\n                communication: cv.communication ? cv.communication[0] : null,\n                skills: cv.skills ? cv.skills[0] : null,\n                info: cv.info ? cv.info[0] : null,\n                attachments: cv.attachments ? cv.attachments[0] : null,\n                experience: cv.experience.map((exp: IExperienceNoDate) => ({\n                    ...exp, \n                    timeFrame: {\n                        startDate: new Date(exp.timeFrame.startDate),\n                        endDate: new Date(exp.timeFrame.endDate)\n                    }\n                })),\n                education: cv.education.map((edu: IExperienceNoDate) => ({\n                    ...edu,\n                    timeFrame: {\n                        startDate: new Date(edu.timeFrame.startDate),\n                        endDate: new Date(edu.timeFrame.endDate)\n                    }\n                }))\n            }\n        })\n        return formattedData\n    })\n}\n\nexport default { createObject, modifyObject, deleteObject, getAllCV, createEmptyCV, duplicateCV, setCVDefault }\n","const getConfigHeader = () => {\n    const user = window.localStorage.getItem('loggedUser')\n    const userToken = user ? JSON.parse(user).token : ''\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'bearer ' + userToken\n        }\n    }\n    return config\n}\n\nexport { getConfigHeader }","import React, { useState, useEffect } from 'react'\n\ninterface OwnProps {\n    initLevel: string,\n    handleChange(newLevel: string): void,\n}\n\nexport enum ILevel {\n    Elementary = 'Elementary',\n    EveryDay = 'Every day proficiency',\n    Working = 'Working proficiency',\n    Advanced = 'Advanced',\n    Professional = 'Professional',\n    Native = 'Native speaker'\n}\n\nconst levels = [ILevel.Elementary, ILevel.EveryDay, ILevel.Working, ILevel.Advanced, ILevel.Professional, ILevel.Native]\n\nconst MyCVFormLanguageLevelSelector: React.FC<OwnProps> = (props) => {\n\n    const [level, setLevel] = useState(props.initLevel)\n\n    useEffect(() => {\n        setLevel(props.initLevel)\n    }, [props.initLevel])\n\n    const handleLevelChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        event.preventDefault()\n\n        setLevel(event.target.value)\n        props.handleChange(event.target.value.toString())\n    }\n\n    return(\n        <div>\n            <select onChange={handleLevelChange} value={level} className='language-level-selector'>\n                    {levels.map(level => <option key={level} value={level}>{level}</option>)}\n            </select>\n        </div>\n    )\n}\n\nexport default MyCVFormLanguageLevelSelector\n","import cvService, { ICV, IExperience, IContact, IProject, IProfile, ICommunication, IInfo } from \"../services/cvService\"\n\ninterface cvState {\n  cvs: ICV[],\n  lastOpened: string\n}\n\nexport interface CVAction {\n  type: string,\n  data: any\n}\n\nconst initState: cvState = {\n  cvs: [\n    {\n      attachments: {\n        content: [\n          '...',\n          '...',\n          '...'\n        ],\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        id: '...'\n      },\n      communication: {\n        content: [\n          '...'\n        ],\n        languages: [\n          {\n            'language': '...',\n            'level': '...'\n          },\n          {\n            'language': '...',\n            'level': '...'\n          }\n        ],\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        id: '...'\n        },\n      education: [\n        {\n          timeFrame: {\n            endDate: new Date('2020-01-14T12:34:33.498Z'),\n            startDate: new Date('2020-01-14T12:34:33.498Z')\n          },\n          description: '...',\n          name: '...',\n          owner: {\n            created: new Date('2020-01-13T13:18:58.111Z'),\n            name: '...',\n            username: '...',\n            id: '...'\n          },\n          id: '...'\n        }\n      ],\n      experience: [{\n        timeFrame: {\n          endDate: new Date('2020-01-14T12:34:33.498Z'),\n          startDate: new Date('2020-01-14T12:34:33.498Z')\n        },\n        description: '...',\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        id: '...'\n      }],\n      info: {\n        content: [\n          '...',\n          '...'\n        ],\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        }, \n        id: '...'\n      },\n      projects: [\n        {\n          description: '...',\n          githubUrl: '',\n          name: '...',\n          owner: {\n            created: new Date('2020-01-13T13:18:58.111Z'),\n            name: '...',\n            username: '...',\n            id: '...'\n          }, \n          showcaseUrl: '...',\n          thumbnailUrl: '',\n          id: '...'\n        }\n      ],\n      reference: [],\n      skills: {\n          content: [\n            '...'\n          ],\n          name: '...',\n          owner: {\n            created: new Date('2020-01-13T13:18:58.111Z'),\n            name: '...',\n            username: '...',\n            id: '...'\n          }, \n        id: '...'\n      },\n      contact: {\n        address: '...',\n        email: '...',\n        firstname: '...',\n        lastname: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        phone: '...',\n        phoneAvailable: '...',\n        company: '...',\n        pictureUrl: '',\n        id: '...'\n      },\n      github: '',\n      name: '...',\n      owner: { \n        created: new Date('2020-01-13T13:18:58.111Z'),\n        name: '...',\n        username: '...',\n        id: '...'\n      },\n      profile: {\n        content: [\n          '...',\n          '...'\n        ],\n        name: '...',\n        owner: {\n          created: new Date('...'),\n          name: '...',\n          username: '...',\n          id: '...'\n        }, \n        id: '...'\n      },\n      techlist: '...',\n      id: '...'\n    }\n  ],\n  lastOpened: ''\n}\n\n// TODO: save last visited cv and open it automaticly for the CV selector\n\nconst cvReducer = (state: cvState = initState, action: CVAction) => {\n  switch (action.type) {\n    case 'UPDATE_CVS': {\n      return { cvs:action.data.cvs, lastOpened: action.data.cvs.includes((cv:ICV) => cv.id === state.lastOpened) ? state.lastOpened : ''}\n    }\n    case 'SET_PREVIOUS_CV': {\n      return { cvs: state.cvs, lastOpened: action.data.id }\n    }\n    case 'ADD_EMPTY_OBJECT': {\n      const cv = state.cvs.find((cv:ICV) => cv.id === action.data.id )\n      if (!cv) return state\n\n      switch(action.data.field) {\n        case 'experience':\n          return { lastOpened: state.lastOpened, cvs: state.cvs.map((cvObject: ICV) => {\n            const emptyExperience: IExperience = {\n              description: '',\n              name: '',\n              owner: cv.owner,\n              timeFrame: {\n                startDate: new Date(),\n                endDate: new Date(),\n              },\n              id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n            }\n            if ( cvObject.id === cv.id ) {\n              return { ...cv, experience: cv.experience ? cv.experience.concat(emptyExperience) : new Array(emptyExperience) }\n            } else {\n              return cvObject\n            }\n          }) }\n        case 'education':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyExperience: IExperience = {\n                  description: '',\n                  name: '',\n                  owner: cv.owner,\n                  timeFrame: {\n                    startDate: new Date(),\n                    endDate: new Date(),\n                  },\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, education: cv.education ? cv.education.concat(emptyExperience) : new Array(emptyExperience) }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'reference':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyContact: IContact = {\n                  owner: cv.owner,\n                  address: '',\n                  company: '',\n                  email: '',\n                  firstname: '',\n                  lastname: '',\n                  phone: '',\n                  phoneAvailable: '',\n                  pictureUrl: '',\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, reference: cv.reference ? cv.reference.concat(emptyContact) : new Array(emptyContact) }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'projects':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyProject: IProject = {\n                  description: '',\n                  githubUrl: '',\n                  name: '',\n                  owner: cv.owner,\n                  showcaseUrl: '',\n                  thumbnailUrl: '',\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, projects: cv.projects ? cv.projects.concat(emptyProject) : new Array(emptyProject) }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'profile':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyProfile: IProfile = {\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, profile: emptyProfile }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'contact':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyContact: IContact = {\n                  owner: cv.owner,\n                  address: '',\n                  company: '',\n                  email: '',\n                  firstname: '',\n                  lastname: '',\n                  phone: '',\n                  phoneAvailable: '',\n                  pictureUrl: '',\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, contact: emptyContact }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'communication':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyCommunication: ICommunication = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  languages: [],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, communication: emptyCommunication }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'skills':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyInfo: IInfo = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, skills: emptyInfo }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'info':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyInfo: IInfo = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, info: emptyInfo }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'attachments':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyInfo: IInfo = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, attachments: emptyInfo }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        default:\n          return state\n      }\n    }\n    case 'REMOVE_TEMP_OBJECT': {\n      const cv = state.cvs.find((cv: ICV) => cv.id === action.data.id)\n      if (!cv) return state\n\n      switch (action.data.field) {\n        case 'experience':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, experience: cv.experience ? cv.experience.filter((experience: IExperience) => experience.id !== action.data.objectId) : [] }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'education':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, education: cv.education ? cv.education.filter((education: IExperience) => education.id !== action.data.objectId) : [] }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'reference':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, reference: cv.reference ? cv.reference.filter((reference: IContact) => reference.id !== action.data.objectId) : [] }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'projects':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, projects: cv.projects ? cv.projects.filter((project: IProject) => project.id !== action.data.objectId) : [] }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'profile':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, profile: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'contact':\n          return state // cannot delete contact field\n        case 'communication':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, communication: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'skills':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, skills: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'info':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, info: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'attachments':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, attachments: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        default:\n          return state\n      }\n    }\n    // case 'UPDATE_CV': {\n    //   const id = action.data.id\n    //   const changes = action.data.changes\n    //   const newState = { cvs: state.cvs.map( (cv: ICV) => {\n    //     if (cv.id === id) {\n    //       return { ...cv, ...changes }\n    //     } else {\n    //       return cv\n    //     }\n    //   }) }\n    // }\n    default: return state\n  }\n}\n\nexport const updateCVs = () => {\n  return async (dispatch:any) => {\n    const action: CVAction = {\n      type: 'UPDATE_CVS',\n      data: { cvs: await cvService.getAllCV() }\n    }\n    dispatch(action)\n  }\n}\n\nexport const addEmptyCVObject = (id:string, field:string) => {\n  const action: CVAction = {\n    type: 'ADD_EMPTY_OBJECT',\n    data: { id, field }\n  }\n  return action\n}\n\nexport const removeTempCVObject = (id:string, field:string, objectId: string) => {\n  const action: CVAction = {\n    type: 'REMOVE_TEMP_OBJECT',\n    data: {id, field, objectId}\n  }\n  return action\n}\n\nexport const setPreviousCV = (id:string) => {\n  const action: CVAction = {\n    type: 'SET_PREVIOUS_CV',\n    data: {id}\n  }\n  return action\n}\n\n// export const modifyCV = (id:string, changes:any) => {\n//   const action: CVAction = {\n//     type: 'UPDATE_CV',\n//     data: { id, changes }\n//   }\n//   return action\n// }\n\nexport default cvReducer","import React from 'react'\nimport './Login.css'\nimport useField, { FieldType } from '../hooks/useField'\nimport loginService, { loginError } from '../services/loginService'\nimport { setUser } from '../reducers/userReducer'\nimport { showNotification, Type } from '../reducers/notificationReducer'\nimport { updateCVs } from '../reducers/cvReducer'\nimport { connect } from 'react-redux'\n\ninterface OwnProps {}\ninterface StateProps {}\ninterface DispatchProps { showNotification: Function, setUser: Function, updateCVs: Function }\n\n// const mapStateToProps = {}\nconst mapDispatchToProps: DispatchProps = {\n    showNotification,\n    setUser,\n    updateCVs\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Login: React.FC<Props> = (props) => {\n\n    const username = useField( FieldType.TEXT )\n    const password = useField( FieldType.PASSWORD )\n\n    const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        loginService.login(username.value, password.value)\n            .then(response => {\n                window.localStorage.setItem(\n                    'loggedUser', JSON.stringify(response)\n                )\n                props.setUser(response)\n                props.showNotification('Login successful', Type.SUCCESS, 4)\n                props.updateCVs()\n            }).catch((error:loginError) => {\n                if (error.response.data.error ) {\n                    props.showNotification(`Error ${error.response.data.error}`, Type.ERROR, 4)\n                } else {\n                    props.showNotification(`Error no response from server`, Type.ERROR, 4)\n                }\n            })\n    }\n\n    return(\n        <div className='Login'>\n            <form onSubmit={handleLogin} className='loginBox'>\n                <div>Username: <input className='login-input' id='username' name='username' value='' {...username}></input></div>\n                <div>Password: <input className='login-input' id='password' name='password' value='' {...password}></input></div>\n                <button type='submit' className='login-button'>Login</button>\n            </form>\n        </div>\n    )\n}\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react'\nimport './Footer.css'\nimport { connect } from 'react-redux'\nimport { UserState } from '../reducers/userReducer'\nimport { AppState } from '..'\n\ninterface OwnProps {}\nexport interface StateProps { user?: UserState }\nexport interface DispatchProps {}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n    return {\n        user: state.user\n    }\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Footer: React.FC<Props> = (props) => {\n    const showUserInfo = props.user && props.user.name.length > 2\n\n    if (showUserInfo && props.user) {\n        return (\n            <div className='Footer'>Logged in as {props.user.name}</div>\n        )\n    }\n    return (\n        <div className='Footer'>You are not logged in</div> \n    )\n    \n}\n\nexport default connect(mapStateToProps,null)(Footer)\n","import React from 'react'\nimport { IUser } from '../services/usersService'\nimport { Link } from 'react-router-dom'\n\ninterface Props {\n    user: IUser,\n    handleUserDelete: Function\n}\n\nconst UsersRow: React.FC<Props> = (props) => {\n    const { name, username, id, created, expires } = props.user\n\n    return (\n        <tr key={'usertr' + id}>\n            <td><Link to={`/users/${username}`}>{username}</Link></td>\n            <td>{name}</td>\n            <td>{created.toString().substring(0, 10)} / {expires ? expires.toString().substring(0, 10) : '-never-'}</td>\n            <td>{username === 'rampemus' ? 'Admin' : 'User'}</td>\n            <td><button onClick={()=>props.handleUserDelete()}>Delete</button></td>\n        </tr>\n    )\n}\n\nexport default UsersRow","import axios, { AxiosResponse } from 'axios'\nimport { getConfigHeader } from '../utils/serviceHelper'\nconst baseUrl = '/api/users'\n\nexport interface IUser {\n    name: string,\n    username: string,\n    id: string,\n    created: Date,\n    expires?: Date,\n    owner?: string,\n    password?: string\n}\n\ninterface getAllUsersResponse extends AxiosResponse {\n    data: IUser[]\n}\n\ninterface createUsersResponse extends AxiosResponse {\n    data: IUser\n}\n\nexport interface usersError {\n    response: {\n        data: {\n            error: string\n        }\n    }\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl, getConfigHeader())\n    return request.then((response: getAllUsersResponse) => response.data)\n}\n\nconst createUser = (username?: string, name?: string, password?: string, expires?: Date | null) => {\n    const data = username || name || password ? { username, name, password, expires } : {}\n    const request = axios.post(`${baseUrl}`, data, getConfigHeader())\n    return request.then((response: createUsersResponse) => response)\n}\n\nconst deleteUser = (id:string) => {\n    const request = axios.delete(`${baseUrl}/${id}`, getConfigHeader())\n    return request.then( response => response)\n}\n\nexport default { getAll, createUser, deleteUser }\n","import React from 'react'\nimport './Toolbar.css'\n\nconst Toolbar: React.FC = (props) => {\n    return(\n        <div className='toolbar'>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Toolbar\n","import React, { useState } from 'react'\nimport { showNotification, Type } from '../reducers/notificationReducer'\nimport { connect } from 'react-redux'\nimport usersService, { usersError } from '../services/usersService'\n\ninterface OwnProps {\n    closeForm: Function,\n    reloadUsers: Function\n}\nexport interface StateProps {}\nexport interface DispatchProps {\n    showNotification: Function\n}\n\nconst mapDispatchToProps: DispatchProps = {\n    showNotification\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst UsersForm: React.FC<Props> = (props) => {\n    const [name, setName] = useState('')\n    const [username, setUsername] = useState('')\n    const [expires, setExpires] = useState<Date | null>(null)\n    const [password, setPassword] = useState('')\n    const [passwordConfirm, setPasswordConfirm] = useState('')\n\n    enum CalcDate {\n        TWO_WEEKS = Date.now() + 1000 * 60 * 60 * 24 * 14,\n        ONE_MONTH = Date.now() + 1000 * 60 * 60 * 24 * 30\n    }\n\n    const handleCreateUser = (event: any) => {\n        event.preventDefault()\n\n        if ( password === passwordConfirm ) {\n            usersService.createUser(username, name, password, expires).then(\n                response => {\n                    setName('')\n                    setUsername('')\n                    setExpires(null)\n                    setPassword('')\n                    setPasswordConfirm('')\n                    props.showNotification(`User ${response.data.name} was created`, Type.SUCCESS, 4)\n                    props.reloadUsers()\n                    props.closeForm()\n                }\n            ).catch((error: usersError) => props.showNotification(error.response.data.error, Type.ERROR, 5))\n        } else {\n            props.showNotification('Password and password confirmation does not match', Type.WARNING, 4)\n        }\n    }\n\n    const [passwordMatch, setPasswordMatch] = useState(true)\n\n    const checkPasswordMatch = (password1: string, password2:string) => {\n        setPasswordMatch(password1 === password2)\n    }\n\n    return(\n        <form onSubmit={handleCreateUser} autoComplete='off'>\n            Create new custom user\n            <p>Full name</p> \n            <input\n                type='text'\n                value={name}\n                onChange={\n                    ({ target }) => setName(target.value)\n                }\n            />\n            <p>Username</p> \n            <input\n                type='text'\n                value={username}\n                onChange={\n                    ({ target }) => setUsername(target.value)\n                }\n            />\n            <p>User is valid</p>\n            <div>\n                <input type=\"radio\" name=\"expires\" onClick={ () => setExpires(new Date(CalcDate.TWO_WEEKS)) }/> a fortnight\n                <input type=\"radio\" name=\"expires\" onClick={ () => setExpires(new Date(CalcDate.ONE_MONTH)) } /> a month\n                <input type=\"radio\" name=\"expires\" onClick={ () => setExpires(null) } /> forever\n            </div>\n            <p>Password for new user</p> \n            <input\n                type='password'\n                value={password}\n                onChange={\n                    ({ target }) => {\n                        setPassword(target.value)\n                        if (passwordConfirm.length > 0) {\n                            checkPasswordMatch(target.value, passwordConfirm)\n                        }\n                    }\n                }\n                style={{ backgroundColor: passwordMatch ? 'white' : 'yellow' }}\n            />\n            <p>Confirm password</p>\n            <input\n                type='password'\n                value={passwordConfirm}\n                onChange={\n                    ({ target }) => {\n                        setPasswordConfirm(target.value)\n                        checkPasswordMatch(password,target.value)\n                    }\n                }\n                style={{ backgroundColor: passwordMatch ? 'white' : 'yellow'}}\n            />\n            <div style={{ textAlign: 'right', marginTop: '10px' }}>\n                <button className='toolbar-button' onClick={(event)=>{\n                    event.preventDefault()\n                    props.closeForm()\n                }}>Cancel</button>\n                <button className='toolbar-button' type='submit'>Create user</button>                \n            </div>\n        </form>\n    )\n}\n\nexport default connect(null,mapDispatchToProps)(UsersForm)","import React, { useState, useEffect } from 'react'\nimport './Users.css'\nimport UsersRow from './UsersRow'\nimport usersService, { IUser, usersError } from '../services/usersService'\nimport { showNotification, Type } from '../reducers/notificationReducer'\nimport { connect } from 'react-redux'\nimport Toolbar from './Toolbar'\nimport UsersForm from './UsersForm'\n\ninterface OwnProps { }\nexport interface StateProps { }\nexport interface DispatchProps {\n  showNotification: Function\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  showNotification\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Users: React.FC<Props> = (props) => {\n  const [users, setUsers] = useState<IUser[]>([])\n  \n  useEffect(()=>{\n    updateUsers()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const updateUsers = () => {\n    usersService.getAll().then(response => {\n      setUsers(response)\n    }).catch((error: usersError) => {\n      props.showNotification('Request for retrieving users was denied. ' + error.response.data.error, Type.ERROR, 4)\n    })\n  }\n\n  const handleUserDelete = (id: string) => {\n    const user:IUser | undefined = users.find(user => user.id === id)\n    if ( user ) {\n      usersService.deleteUser(id).then(\n        response => {\n          setUsers(users.filter(user => user.id !== id))\n          props.showNotification(`User ${user.name} was deleted`, Type.SUCCESS, 3)\n        }\n      ).catch((error) => props.showNotification(error.response.data.error, Type.ERROR, 5))\n    } else {\n      props.showNotification('User does not exist', Type.ERROR, 5)\n    }\n  }\n\n  const handleAddRandomUser = () => {\n    usersService.createUser().then(\n      response => {\n        props.showNotification(`User ${response.data.name} created. Username/password is ${response.data.username}/${response.data.password}`, Type.SUCCESS)\n        updateUsers()\n      }\n    ).catch((error) => props.showNotification(error.response.data.error, Type.ERROR, 5))\n  }\n\n  const [showAddUser, setShowAddUser] = useState(false) \n\n  return(\n    <div>\n      <Toolbar>\n        <div>\n          <button className='toolbar-button' onClick={()=>handleAddRandomUser()}>add random user</button>\n          <button className='toolbar-button' onClick={()=>{\n            setShowAddUser(!showAddUser)\n          }}>add user...</button>\n        </div>\n        <div className='formContainer' style={{ display: showAddUser ? 'block' : 'none' }}>\n          <UsersForm closeForm={()=>setShowAddUser(false)} reloadUsers={()=>updateUsers()}/>\n        </div>\n      </Toolbar>\n      <h1>Users</h1>\n      <table>\n        <tbody>\n          <tr>\n            <th>Username</th>\n            <th>Name</th>\n            <th>Created/Expires</th>\n            <th>Status</th>\n            <th></th>\n          </tr>\n          {users.map(user => {\n            return (\n              <UsersRow\n                key={'usersrow' + user.id}\n                user={user}\n                handleUserDelete={()=>handleUserDelete(user.id)}\n              />\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default connect(null,mapDispatchToProps)(Users)\n\n","import React from 'react'\n\nconst About: React.FC = (props) => {\n\n    return(\n        <div>\n            <h1>About this site</h1>\n            <p>This single-page-app will show my CV information and also deliver a simple graphical UI for creating and modifying CV data.</p>\n            <p>Almost everything in this site is crafted from scratch (all the way from user authentication to datePicker-components). \n                To make things more simple I have added ready made libraries to help organize things. \n                Biggest impact was done by Formik to make forms on the page to be a bit less painful.</p>\n            <p>Please take a look of my source code in my <a href='https://github.com/rampemus/cvapp'>github</a></p>\n            <h3>Version 0.2 - 2020/2/26</h3>\n            <p>Fixed most of bugs away and bunch tests created for <a href='https://github.com/rampemus/cvapp/tree/master/backend'>backend</a>.</p>\n            <h4>Known issues</h4>\n            <ul>\n                <li>Written values are only validated in backend, and no error handling</li>\n                <li>Static server stuff and other resources should be hidden behind login</li>\n            </ul>\n            <h3>Version 0.1 - 2020/2/5</h3>\n            <p>For now, some of the code is not yet nicely organized but things will get better.\n                Other bigger changes will be that the tests will be implemented in the future for creating a automated pipeline.\n                Many changes will be done for the deployment and for the backend. Therefore, I wish you visit my github for changes.</p>\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\n\ninterface DeleteProps {\n  isSubmitting: boolean,\n  handleDelete(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void,\n}\n\nconst DeleteButton: React.FC<DeleteProps> = (props) => {\n  const { isSubmitting } = props\n  return(\n    <button className='form-delete-button form-button' type='submit' onClick={props.handleDelete} disabled={isSubmitting}>\n      Delete\n    </button>\n  )\n}\n\ninterface ClearProps {\n  isSubmitting: boolean,\n  values: any,\n  clearActionValues: any,\n  setValues(values: any): void,\n}\n\nconst ClearButton: React.FC<ClearProps> = (props) => {\n  const { isSubmitting, values, clearActionValues, setValues } = props\n  return(\n    <button\n      className='form-clear-button form-button'\n      type='submit'\n      disabled={isSubmitting}\n      onClick={(event) => {\n        event.preventDefault()\n        setValues({ ...values, ...clearActionValues })\n      }}\n    >\n      Clear\n    </button>\n  )\n}\n\ninterface CancelProps {\n  isSubmitting: boolean,\n  setValues(values: any): void,\n  formValues: any,\n}\n\nconst CancelButton: React.FC<CancelProps> = (props) => {\n  const { isSubmitting, setValues, formValues } = props\n  return(\n    <button\n      className='form-cancel-button form-button'\n      type='submit'\n      disabled={isSubmitting}\n      onClick={(event) => {\n        event.preventDefault()\n        setValues({ ...formValues })\n      }}\n    >\n      Cancel\n    </button>\n  )\n}\n\ninterface SaveProps {\n  isSubmitting: boolean,\n}\n\nconst SaveButton: React.FC<SaveProps> = (props) => {\n  const { isSubmitting } = props\n  return(\n    <button\n      className='form-save-button form-button'\n      type='submit' disabled={isSubmitting}\n    >\n      Save\n    </button>\n  )\n}\n\nexport { DeleteButton, ClearButton, CancelButton, SaveButton}\n","import React, { useState, useEffect } from 'react'\n\ninterface OwnProps {\n    date: Date,\n    handleChange(newDate:Date): void,\n}\n\nconst numbers = (from:number, to:number) => {\n    let result = []\n    for ( let i = 0; i < to-from; i++) {\n        result.push(from+i)\n    }\n    return result\n}\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nconst MyCVFormDateSelector: React.FC<OwnProps> = (props) => {\n\n    const dateProp = new Date(props.date)\n\n    const [year, setYear] = useState(dateProp.getFullYear())\n    const [month, setMonth] = useState(dateProp.getMonth())\n    const [day, setDay] = useState(dateProp.getDate())\n    const [lastDayOfTheMonth, setLastDayOfTheMonth] = useState(31)\n\n    useEffect(()=>{\n        setLastDayOfTheMonth(new Date(year, month + 1, 0).getDate())\n    },[year,month])\n\n    const handleYearChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        event.preventDefault()\n        const newYear = parseInt(event.target.value)\n        setYear(newYear)\n        props.handleChange(new Date(newYear,month,day))\n    }\n\n    const handleMonthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        event.preventDefault()\n        const newMonth = parseInt(event.target.value)\n        setMonth(newMonth)\n        props.handleChange(new Date(year, newMonth, day))\n    }\n\n    const handleDayChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        event.preventDefault()\n        const newDay = parseInt(event.target.value)\n        setDay(newDay)\n        props.handleChange(new Date(year, month, newDay))\n    }\n\n    return(\n        <div>\n            <select onChange={handleYearChange} value={year} className='year-selector'>\n                {numbers(2000,2030).map((yearNumber) => {\n                    return (<option key={yearNumber} value={yearNumber}>{yearNumber}</option>)\n                })}\n            </select>\n            <select onChange={handleMonthChange} value={month} className='month-selector'>\n                {numbers(0, 12).map((monthNumber) => {\n                    return (<option key={monthNumber} value={monthNumber}>{months[monthNumber]}</option>)\n                })}\n            </select>\n            <select onChange={handleDayChange} value={day} className='day-selector'>\n                {numbers(1, lastDayOfTheMonth+1).map((dayNumber) => {\n                    return (<option key={dayNumber} value={dayNumber}>{dayNumber}</option>)\n                })}\n            </select> \n        </div>\n    )\n}\n\nexport default MyCVFormDateSelector\n","import React from 'react'\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik'\nimport { DeleteButton, ClearButton, CancelButton, SaveButton } from './MyCVFormPanelButtons'\nimport cvService, { ServiceType } from '../../services/cvService'\nimport { useLocation } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { updateCVs, addEmptyCVObject, removeTempCVObject, CVAction } from '../../reducers/cvReducer'\nimport MyCVFormDateSelector from './MyCVFormDateSelector'\nimport MyCVFormLanguageLevelSelector, { ILevel } from './MyCVFormLanguageLevelSelector'\n\ninterface OwnProps {\n  formValues?: Object,\n  field: string,\n  serviceType: ServiceType,\n  children?: any,\n}\nexport interface StateProps { }\nexport interface DispatchProps {\n  updateCVs: Function,\n  addEmptyCVObject(id: string, field: string): CVAction,\n  removeTempCVObject(id: string, field: string, objectId: string): CVAction\n}\n\n// const mapStateToProps = (state: AppState, props: OwnProps) => { }\n\nconst stringToArray = (data:string) => {\n  return data.split('\\n')\n}\n\nconst arrayToString = (data:string[]) => {\n  return data.join('\\n')\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  updateCVs, addEmptyCVObject, removeTempCVObject\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst MyCVFormPanel: React.FC<Props> = (props) => {\n\n  const formValues = props.formValues ? Object.fromEntries(Object.entries(props.formValues).map(([key, value]) => [key, value ? value : ''])) : null\n  \n  const showPanelId = false\n\n  const serviceType = props.serviceType\n  const location = useLocation()\n  const field = props.field\n\n  if (formValues && ( field === 'experience' || field === 'education')) { \n    const clearActionValues = { description: '', name: '', timeFrame: { startDate: new Date(), endDate: new Date() } }\n    const experience = formValues\n    return (\n      <Formik\n        initialValues={{ ...experience }}\n        onSubmit={(values, { setSubmitting }) => {\n          if (values.id.includes('temp')) {\n            const path = location.pathname\n            const id = path.substring('/myCV/'.length)\n            cvService.createObject(serviceType, values, id, field).then(response => {\n              props.updateCVs()\n              setSubmitting(false)\n            })\n          } else {\n            const changes = Object.fromEntries(Object.entries(values).filter(([key, value]) => formValues[key] !== value))\n            cvService.modifyObject(serviceType, values.id, changes).then(response => {\n              props.updateCVs()\n              setSubmitting(false)\n            })\n          }\n        }}\n      >\n        {({ isSubmitting, values, setValues }) => (\n          <Form className='form-component'>\n            {showPanelId && values.id}\n\n            {/* replaces FormPanel children props */}\n            <div className='form-label'>Name</div>\n            <Field className='form-input' placeholder='Name' type='text' name='name' disabled={isSubmitting} />\n            <ErrorMessage name='name' component='div' />\n            <div className='form-label'>Time duration</div>\n            <div className='timeFrameContainer'>\n              <div>\n                <MyCVFormDateSelector date={values.timeFrame.startDate} handleChange={(newDate) => {\n                  setValues({\n                    ...values, timeFrame: {\n                      startDate: newDate,\n                      endDate: values.timeFrame.endDate,\n                    }\n                  })\n                }} />\n              </div>\n              <div className='time-divider'>-</div>\n              <div>\n                <MyCVFormDateSelector date={values.timeFrame.endDate} handleChange={(newDate) => {\n                  setValues({\n                    ...values, timeFrame: {\n                      startDate: values.timeFrame.startDate,\n                      endDate: newDate,\n                    }\n                  })\n                }} />\n              </div>\n            </div>\n            <div className='form-label'>Content</div>\n            <Field className='form-textarea' placeholder='Content' as='textarea' type='text' name='description' disabled={isSubmitting} />\n            <ErrorMessage name='description' component='div' />\n\n            <DeleteButton isSubmitting={isSubmitting} handleDelete={(event: any) => {\n              event.preventDefault()\n              if (values.id.includes('temp')) {\n                const path = location.pathname\n                const CVid = path.substring('/myCV/'.length)\n                props.removeTempCVObject(CVid, field, values.id)\n              } else {\n                cvService.deleteObject(serviceType, values.id)\n              }\n            }} />\n            <ClearButton isSubmitting={isSubmitting} values={values} clearActionValues={clearActionValues} setValues={setValues} />\n            <CancelButton isSubmitting={isSubmitting} setValues={setValues} formValues={experience} />\n            <SaveButton isSubmitting={isSubmitting} />\n          </Form>\n        )}\n      </Formik>\n    )\n  } else if (formValues && field === 'communication') {\n    const clearActionValues = { name: '', languages: [{ language: '', level: '' }], content: [''] }\n    const communication = formValues\n\n    return (\n      <Formik\n        initialValues={{ ...communication }}\n        onSubmit={(values, { setSubmitting }) => {\n          if (values.id.includes('temp')) {\n            const path = location.pathname\n            const id = path.substring('/myCV/'.length)\n            cvService.createObject(serviceType, values, id, field).then(response => {\n              props.updateCVs()\n              setSubmitting(false)\n            })\n          } else {\n            const changes = Object.fromEntries(Object.entries(values).filter(([key, value]) => formValues[key] !== value))\n            cvService.modifyObject(serviceType, values.id, changes).then(response => {\n              props.updateCVs()\n              setSubmitting(false)\n            })\n          }\n        }}\n      >\n        {({ values, isSubmitting, setValues }) => (\n          <Form className='form-component'>\n            {showPanelId && values.id}\n\n            {/* replaces FormPanel children props */}\n            <div className='form-label'>Name</div>\n            <Field className='form-input' placeholder='Name' type='text' name='name' disabled={isSubmitting} />\n            <ErrorMessage name='name' component='div' />\n            <div className='form-label'>Languages</div>\n            <FieldArray name=\"languages\" render={() => (\n              <div className='language-panel' key={values.id+'languagepanel'}>\n                {values.languages && values.languages.map((language: any, index: number) => {\n                  return (<div className='language-pair' key={index + 'language-pair'}>\n                    <Field className='form-input' name={`languages.${index}.language`} placeholder='Language name' />\n                    <MyCVFormLanguageLevelSelector\n                      initLevel={language.level}\n                      handleChange={(newLevel)=>{\n                        const newValues = {...values,\n                          languages: values.languages.map((entry: {language:string, level:string}) =>\n                          entry.language === language.language ? {language: entry.language, level: newLevel} : entry )\n                        } \n                        setValues(newValues)\n                      }\n                    }/>\n                    <button className='form-button' onClick={(event) => {\n                      event.preventDefault()\n                      const newValues = {\n                        ...values,\n                        languages: values.languages.filter((entry: { language: string, level: string }) =>\n                          entry.language !== language.language)\n                      }\n                      setValues(newValues)\n                    }}>delete</button>\n                  </div>)\n                })}\n                <button\n                  className='add-language-button form-button'\n                  disabled={isSubmitting}\n                  onClick={(event) => {\n                    event.preventDefault()\n                    const newValues = {\n                      ...values,\n                      languages: values.languages.concat({ language: '', level: ILevel.Elementary })\n                    }\n                    setValues(newValues)\n                  }}\n                >\n                  add language\n                </button>\n              </div>\n            )} />\n            <div className='form-label'>Content</div>\n            <Field className='form-textarea' placeholder='Content' as='textarea' type='text' name='content' disabled={isSubmitting} />\n            <ErrorMessage name='content' component='div' />\n\n            <DeleteButton isSubmitting={isSubmitting} handleDelete={(event: any) => {\n              event.preventDefault()\n              if (values.id.includes('temp')) {\n                const path = location.pathname\n                const CVid = path.substring('/myCV/'.length)\n                props.removeTempCVObject(CVid, field, values.id)\n              } else {\n                cvService.deleteObject(serviceType, values.id)\n              }\n            }} />\n            <ClearButton isSubmitting={isSubmitting} values={values} clearActionValues={clearActionValues} setValues={setValues} />\n            <CancelButton isSubmitting={isSubmitting} setValues={setValues} formValues={communication} />\n            <SaveButton isSubmitting={isSubmitting} />\n          </Form>\n        )}\n      </Formik>)\n  } else if (formValues) {\n    const clearActionValues = props.formValues\n      ? Object.fromEntries(Object.entries(props.formValues).map(([key, value]) => key === 'id' ? [key, value] : [key, ''])) \n      : null\n    \n    return(\n      <Formik\n        initialValues={Object.fromEntries(\n          Object.entries(formValues)\n            .map(([key, value]) => key === 'content' ? [key, arrayToString(value)] : [key, value])\n        )}\n        enableReinitialize\n        onSubmit={(values, { setSubmitting }) => {\n          if ( values.id.includes('temp')) {\n            const path = location.pathname\n            const id = path.substring('/myCV/'.length)\n            const newValues = Object.fromEntries(\n              Object.entries(values)\n                .filter(([key, value]) => formValues[key] !== value)\n                .map(([key, value]) => key === 'content' ? [key, stringToArray(value)] : [key, value])\n            )\n            cvService.createObject(serviceType, newValues, id, field).then(response => {\n              props.updateCVs()\n              setSubmitting(false)\n            })\n          } else {\n            const changes = Object.fromEntries(\n              Object.entries(values)\n                .filter(([key, value]) => formValues[key] !== value)\n                .map(([key, value]) => key === 'content' ? [key,stringToArray(value)] : [key, value])\n            )\n            cvService.modifyObject(serviceType, values.id, changes).then(response => {\n              props.updateCVs()\n              setSubmitting(false)\n            })\n          }\n        }}\n        key={formValues.id + field }\n      >\n        {({ isSubmitting, values, setValues }) => (\n          <Form className='form-component'>\n            {showPanelId && values.id}\n\n            {props.children}\n\n            <DeleteButton isSubmitting={isSubmitting || field === 'contact' || field === ''} handleDelete={(event:any)=>{\n              event.preventDefault()\n              if ( values.id.includes('temp') ) {\n                const path = location.pathname\n                const CVid = path.substring('/myCV/'.length)\n                props.removeTempCVObject(CVid, field, values.id)\n              } else {\n                cvService.deleteObject(serviceType, values.id)\n                props.updateCVs()\n              }\n            }}/>\n            <ClearButton isSubmitting={isSubmitting} values={values} clearActionValues={clearActionValues} setValues={setValues}/>\n            <CancelButton isSubmitting={isSubmitting} setValues={setValues} formValues={formValues}/>\n            <SaveButton isSubmitting={isSubmitting}/>\n          </Form>\n        )}\n      </Formik>\n    )\n  } else { return (\n    <div\n      className='form-component-empty'\n      key={props.field+'-empty'}\n      onClick={()=>{\n        const path = location.pathname\n        const CVid = path.substring('/myCV/'.length)\n        props.addEmptyCVObject(CVid, field)\n      }}>\n        <img src='plus.svg' width='100px' height='100px' alt='add' />\n      </div>\n  )}\n}\n\nexport default connect(null,mapDispatchToProps)(MyCVFormPanel)\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport { ICV, IProfile, ICommunication, IInfo, IContact, IProject, IExperience } from '../services/cvService'\nimport FormPanel from './MyCVForm/MyCVFormPanel'\nimport { ServiceType } from '../services/cvService'\n\ninterface OwnProps {\n  cv: ICV | undefined\n}\n\nconst MyCVForm: React.FC<OwnProps> = (props) => {\n\n  const cv = props.cv\n\n  const renderProfileForm = (profile:IProfile, field: string) => (\n    <FormPanel\n      formValues={{\n        id: profile.id,\n        name: profile.name,\n        content: profile.content,\n      }}\n      serviceType={ServiceType.PROFILE}\n      field={field}\n      key={profile.id}\n    >\n      <div className='form-label'>Name</div>\n      <Field className='form-input' placeholder='Name' type='text' name='name' />\n      <ErrorMessage name='name' component='div' />\n      <div className='form-label'>Content</div>\n      <Field className='form-textarea' placeholder='Content' as='textarea' type='text' name='content' />\n      <ErrorMessage name='content' component='div' />\n    </FormPanel>\n  )\n\n  const renderCommunicationForm = (communication:ICommunication, field: string) => { return (\n    <FormPanel\n      formValues={{\n        id: communication.id,\n        name: communication.name,\n        content: communication.content,\n        languages: communication.languages\n      }}\n      field={field}\n      serviceType={ServiceType.COMMUNICATION}\n      key={communication.id}\n    />\n    )\n  }\n\n  const renderInfoForm = (info: IInfo, field: string) => {\n    return(\n      <FormPanel\n        formValues={{\n          id: info.id,\n          name: info.name,\n          content: info.content\n        }}\n        serviceType={ServiceType.INFO}\n        field={field}\n        key={info.id}\n      >\n        <div className='form-label'>Name</div>\n        <Field className='form-input' placeholder='Name' type='text' name='name'/>\n        <ErrorMessage name='name' component='div' />\n        <div className='form-label'>Content</div>\n        <Field className='form-textarea' placeholder='Content' as='textarea' type='text' name='content'/>\n        <ErrorMessage name='content' component='div' />\n      </FormPanel>\n    )\n  }\n\n  const renderContactForm = (contact: IContact, field: string) => {\n    return(\n      <FormPanel\n      formValues={{\n          id: contact.id,\n          address: contact.address,\n          company: contact.company,\n          email: contact.email,\n          firstname: contact.firstname,\n          lastname: contact.lastname,\n          phone: contact.phone,\n          phoneAvailable: contact.phoneAvailable,\n          pictureUrl: contact.pictureUrl\n        }}\n        serviceType={ServiceType.CONTACT}\n        field={field}\n        key={contact.id}\n      >\n        <div className='form-label'>Firstname</div>\n        <Field className='form-input' placeholder='Firstname' type='text' name='firstname'/>\n        <ErrorMessage name='fistname' component='div' />\n        <div className='form-label'>Lastname</div>\n        <Field className='form-input' placeholder='LastName' type='text' name='lastname'/>\n        <ErrorMessage name='lastname' component='div' />\n        <div className='form-label'>E-mail</div>\n        <Field className='form-input' placeholder='mailto@mail.com' type='text' name='email'/>\n        <ErrorMessage name='email' component='div' />\n        <div className='form-label'>Phone</div>\n        <Field className='form-input' placeholder='+358000000000' type='text' name='phone'/>\n        <ErrorMessage name='phone' component='div' />\n        <div className='form-label'>Available</div>\n        <Field className='form-input' placeholder='Available during 9 am -  4 pm' type='text' name='phoneAvailable'/>\n        <ErrorMessage name='phoneAvailable' component='div' />\n        <div className='form-label'>Address</div>\n        <Field className='form-input' placeholder='Streetname 1 A 1, 00100 Cityname' type='text' name='address'/>\n        <ErrorMessage name='address' component='div' />\n        <div className='form-label'>Company</div>\n        <Field className='form-input' placeholder='Company name' type='text' name='company'/>\n        <ErrorMessage name='company' component='div' />\n        <div className='form-label'>Picture</div>\n        <Field className='form-input' placeholder='Picture Url' type='text' name='pictureUrl'/>\n        <ErrorMessage name='pictureUrl' component='div' />\n      </FormPanel>\n    )\n  }\n\n  const renderProjectForm = (project: IProject, field: string) => {\n    return (\n      <FormPanel\n        formValues={{\n          id: project.id,\n          description: project.description,\n          githubUrl: project.githubUrl,\n          name: project.name,\n          showcaseUrl: project.showcaseUrl,\n          thumbnailUrl: project.thumbnailUrl\n        }}\n        serviceType={ServiceType.PROJECT}\n        field={field}\n        key={project.id}\n      >\n        <div className='form-label'>Name</div>\n        <Field className='form-input' placeholder='Name' type='text' name='name'/>\n        <ErrorMessage name='name' component='div' />\n        <div className='form-label'>Description</div>\n        <Field className='form-textarea' placeholder='Description' as='textarea' type='text' name='description'/>\n        <ErrorMessage name='description' component='div' />\n        <div className='form-label'>Github</div>\n        <Field className='form-input' placeholder='Github url' type='text' name='githubUrl'/>\n        <ErrorMessage name='name' component='div' />\n        <div className='form-label'>Showcase</div>\n        <Field className='form-input' placeholder='Showcase url' type='text' name='showcaseUrl'/>\n        <ErrorMessage name='name' component='div' />\n        <div className='form-label'>Thumbnail</div>\n        <Field className='form-input' placeholder='Thumbnail url' type='text' name='thumbnailUrl'/>\n        <ErrorMessage name='name' component='div' />\n      </FormPanel>\n    )\n  }\n\n  const renderExperienceForm = (experience: IExperience, field: string) => {\n    return(\n      <FormPanel\n        formValues={{\n          id: experience.id,\n          description: experience.description,\n          name: experience.name,\n          timeFrame: experience.timeFrame,\n        }}\n        serviceType={ServiceType.EXPERIENCE}\n        field={field}\n        key={experience.id}\n      /> \n    )\n  }\n\n  if (cv) { return (\n    <div className='cvFormContainer'>\n      <div className='form-component-container'>\n        <FormPanel\n          formValues={{\n            id: cv.id,\n            name: cv.name,\n            github: cv.github,\n            techlist: cv.techlist\n          }}\n          serviceType={ServiceType.CV}\n          field=''\n        >\n          <div className='form-label'>Name</div>\n          <Field className='form-input' placeholder='CV name' type='text' name='name' />\n          <ErrorMessage name='name' component='div' />\n          <div className='form-label'>Github</div>\n          <Field className='form-input' placeholder='Github url' type='text' name='github'/>\n          <ErrorMessage name='github' component='div' />\n          <div className='form-label'>Techlist</div>\n          <Field className='form-input' placeholder='Java, CSS, Python, ...' type='text' name='techlist'/>\n          <ErrorMessage name='techlist' component='div' />\n        </FormPanel>\n      </div>\n        \n      <h3>Contact</h3>\n      <div className='form-component-container'>\n        {renderContactForm(cv.contact, 'contact')}\n      </div>\n      <h3>Profile</h3>\n      <div className='form-component-container'>\n        {cv.profile ? renderProfileForm(cv.profile, 'profile') : <FormPanel serviceType={ServiceType.PROFILE} field='profile' />}\n      </div>\n      <h3>Projects</h3>\n      <div className='form-component-container'>\n        {cv.projects && cv.projects.map((project) => renderProjectForm(project, 'projects'))}\n        <FormPanel serviceType={ServiceType.PROJECT} field='projects'/>\n      </div>\n      <h3>References</h3>\n      <div className='form-component-container'>\n        {cv.reference && cv.reference.map((ref) => renderContactForm(ref, 'reference'))}\n        <FormPanel serviceType={ServiceType.CONTACT} field='reference'/>\n      </div>\n      <h3>Work experience</h3>\n      <div className='form-component-container'>\n        {cv.experience && cv.experience.map((exp) => renderExperienceForm(exp, 'experience'))}\n        <FormPanel serviceType={ServiceType.EXPERIENCE} field='experience'/>\n      </div>\n      <h3>Education</h3>\n      <div className='form-component-container'>\n        {cv.education && cv.education.map((edu) => renderExperienceForm(edu, 'education'))}\n        <FormPanel serviceType={ServiceType.EXPERIENCE} field='education'/>\n      </div>\n      <h3>Communication</h3>\n      <div className='form-component-container'>\n        {cv.communication ? renderCommunicationForm(cv.communication, 'communication') : <FormPanel serviceType={ServiceType.COMMUNICATION} field='communication'/>}\n      </div>\n      <h3>Other skills</h3>\n      <div className='form-component-container'>\n        {cv.skills ? renderInfoForm(cv.skills, 'skills') : <FormPanel serviceType={ServiceType.INFO} field='skills' />}\n      </div>\n      <h3>Info</h3>\n      <div className='form-component-container'>\n        {cv.info ? renderInfoForm(cv.info, 'info') : <FormPanel serviceType={ServiceType.INFO} field='info' />}\n      </div>\n      <h3>Attachments</h3>\n      <div className='form-component-container'>\n        {cv.attachments ? renderInfoForm(cv.attachments, 'attachments') : <FormPanel serviceType={ServiceType.INFO} field='attachments' />}\n        {!cv.attachments && <p style={{height: '110px'}}/>}\n      </div>\n    </div>\n  )\n} else {\n    return (\n      <div>CV not found</div>\n    )\n  }\n}\n\nexport default MyCVForm\n","import React from 'react'\nimport './Preview.css'\nimport { connect } from 'react-redux'\nimport { AppState } from '..'\nimport { ICV, IContact, IExperience, ICommunication } from '../services/cvService'\n\nconst renderTimeFrame = (timeFrame: {startDate: Date, endDate: Date}) => {\n    const { startDate, endDate } = timeFrame\n    const duration = endDate.valueOf() - startDate.valueOf()\n    const month = 1000 * 60 * 60 * 24 * 30\n    const year = 1000 * 60 * 60 * 24 * 365\n    if (duration < month) \n            return <p>{startDate.getFullYear()}/{startDate.getMonth() + 1}/{startDate.getDate()+1} – {endDate.getFullYear()}/{endDate.getMonth() + 1}/{endDate.getDate()+1}</p>\n    if (duration < year) \n        return <p>{startDate.getFullYear()}/{startDate.getMonth()+1} – {endDate.getFullYear()}/{endDate.getMonth()+1}</p>\n    return <p>{startDate.getFullYear()} – {endDate.getFullYear()}</p>\n}\n\ninterface OwnProps {\n    preview?: ICV\n}\nexport interface StateProps {\n    cv?: ICV\n}\nexport interface DispatchProps { }\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n    return {\n        cv: state.cv.cvs[0]\n    }\n}\n\n// const mapDispatchToProps: DispatchProps = { functionName }\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Home: React.FC<Props> = (props) => {\n    const cv = props.preview || props.cv\n    if (!cv) {\n        return <div>No default cv</div>\n    } \n    const contact = cv.contact\n    const reference: IContact[] | undefined = cv.reference\n    const experience: IExperience[] | undefined = cv.experience\n    const education: IExperience[] | undefined = cv.education\n    const communication: ICommunication | undefined = cv.communication\n\n    return(\n        <div className='cv-container'>\n            <div className='cv-container-item contact-container'>\n                <div>\n                    <p>{contact.firstname} {contact.lastname}</p>\n                    <p>{contact.address}</p>\n                    <p>Phone num. {contact.phone}</p>\n                    <p>{contact.email}</p>\n                </div>\n                <div>\n                    <img src={contact.pictureUrl} width='120px' alt='mypicture' />\n                </div>\n            </div>\n            <h1>Curriculum Vitae</h1>\n            <div className='cv-container-item cv-container-item-first'>\n                {cv.github && <p>Github: <a href={cv.github}>{cv.github}</a></p>}\n                {cv.techlist && <p>{cv.techlist}</p>}\n            </div>\n            {cv.profile && \n                <div className='cv-container-item cv-container-item-left'>\n                    <h3><img src='profile.svg' width='45px' height='45px' alt='profileimage'/>Profile</h3>\n                    <hr />\n                    {cv.profile.content.map((paragraph, index) => <p key={`profile-p-${index}`} >{paragraph}</p>)}\n                </div>\n            }\n            {cv.projects && cv.projects.length > 0 &&\n                <div className='cv-container-item cv-container-item-right'>\n                    <h3><img src='project.svg' width='50px' height='45px' alt='icon'/>Projects</h3>\n                    <hr />\n                    {cv.projects.map((project, index) => \n                        <div className='project-card' key={index + 'project'}>\n                            <div style={{\n                                width: '140px',\n                                marginRight: '10px'\n                            }}>\n                                <img src={project.thumbnailUrl} width=\"100%\" alt='mypicture' />\n                            </div>\n                            <div>\n                                <h4>{project.name}</h4>\n                                <p>{project.description}</p>\n                                <p className='project-card-links'><a href={project.githubUrl}>github</a> - <a href={project.showcaseUrl}>showcase</a></p>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            }\n            {reference && reference.length > 0 &&\n                <div className='cv-container-item'>\n                    <h3><img src='reference.svg' width='45px' height='45px' alt='icon'/>References</h3>\n                    <hr />\n                    <div className='key-value-container'>\n                        {reference.map((ref: IContact, index) => [\n                            <div className='key-value-container-left' key={index+'-reference-left'}>\n                                <p>{ref.firstname} {ref.lastname} {ref.company && '- ' + ref.company}</p> \n                            </div>,\n                            <div className='key-value-container-right' key={index+'-reference-right'}>\n                                <p>Phone num. {ref.phone} ({ref.phoneAvailable})</p>\n                                <p>{ref.email}</p>    \n                            </div>\n                        ])}\n                    </div>\n                </div>\n            }\n            {experience && experience.length > 0 &&\n                <div className='cv-container-item'>\n                    <h3><img src='work.svg' width='45px' height='45px' alt='icon'/>Work Experience</h3>\n                    <hr />\n                    <div className='key-value-container'>\n                        {experience.sort((a: IExperience, b: IExperience) => b.timeFrame.endDate.getTime() - a.timeFrame.endDate.getTime()).map((exp:IExperience, index) => [\n                            <div className='key-value-container-left' key={index + '-experience-left'}>\n                                {renderTimeFrame(exp.timeFrame)}\n                            </div>,\n                            <div className='key-value-container-right' key={index + '-experience-right'}>\n                                <p>{exp.description}</p>\n                            </div>\n                        ])}\n                    </div>\n                </div>\n            }\n            {education && education.length > 0 &&\n                <div className='cv-container-item'>\n                    <h3><img src='education.svg' width='45px' height='45px' alt='icon'/>Education</h3>\n                    <hr />\n                    <div className='key-value-container'>\n                        {education.sort((a: IExperience, b: IExperience) => b.timeFrame.endDate.getTime() - a.timeFrame.endDate.getTime()).map((edu: IExperience, index) => [\n                            <div className='key-value-container-left' key={index + '-education-left'}>\n                                {renderTimeFrame(edu.timeFrame)}\n                            </div>,\n                            <div className='key-value-container-right' key={index + '-education-right'}>\n                                <p>{edu.description}</p>\n                            </div>\n                        ])}\n                    </div>\n                </div>\n            }\n            {communication &&\n                <div className='cv-container-item'>\n                    <h3><img src='communication.svg' width='45px' height='45px' alt='icon'/>Communication</h3>\n                    <hr />\n                    <div className='language-container'>\n                        {communication.languages.map((language,index) => <div key={index + 'language-container'}><p>{language.language}</p><p>:</p><p>{language.level}</p></div>)}\n                    </div>\n                    {communication && communication.content.map((skill, index) =>\n                        <p key={index + 'skill'}>{skill}</p>\n                    )}\n                </div>\n            }\n            {cv.skills &&\n                <div className='cv-container-item'>\n                    <h3><img src='skills.svg' width='45px' height='45px' alt='icon'/>Other Skills</h3>\n                    <hr />\n                    {cv.skills.content.map((skill, index) =>\n                        <p key={index + 'skill'}>{skill}</p>\n                        )}\n                </div>\n            }\n            {cv.attachments &&\n                <div className='cv-container-item'>\n                    <h3><img src='attachment.svg' width='45px' height='45px' alt='icon'/>Attachments</h3>\n                    <hr />\n                    {cv.attachments.content.map((attachment, index) =>\n                        <p key={index + 'attachment'}>{attachment}</p>\n                        )}\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, null)(Home)\n\n","import React from 'react'\nimport Toolbar from './Toolbar'\nimport { AppState } from '..'\nimport { connect } from 'react-redux'\nimport './MyCV.css'\nimport cvService, { ICV, ServiceType } from '../services/cvService'\nimport { Link, Route, useLocation } from 'react-router-dom'\nimport MyCVForm from './MyCVForm'\nimport { UserState } from '../reducers/userReducer'\nimport { updateCVs, setPreviousCV } from '../reducers/cvReducer'\nimport Home from './Home'\nimport { showNotification, Type } from '../reducers/notificationReducer'\n\ninterface OwnProps {}\nexport interface StateProps { user?: UserState, cvs?: ICV[] }\nexport interface DispatchProps {\n    updateCVs: Function,\n    setPreviousCV: Function,\n    showNotification: Function\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n    return {\n        user: state.user,\n        cvs: state.cv.cvs\n    }\n}\n\nconst mapDispatchToProps: DispatchProps = {\n    updateCVs,\n    setPreviousCV,\n    showNotification\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst MyCV: React.FC<Props> = (props) => {\n\n    const location = useLocation()\n    const formActive = location.pathname.includes('/mycv/') ? false : true\n    const myCVs = props.cvs ? props.cvs : []\n\n    console.log(myCVs)\n\n    const renderForm = (cvs: ICV[]) => {\n        return (\n            <Route exact path=\"/mycv/:id\" render={({ match }) => \n                <MyCVForm cv={cvs.find(cv => { return cv.id === match.params.id })}/>\n            }/>\n        )\n    }\n\n    console.log(props.cvs)\n\n    return(\n        <div>\n            <Route exact path=\"/preview/:id\" render={({ match }) => \n            <div>\n                <Toolbar>\n                    <div>\n                        <Link to={`/mycv/${match.params.id}`}>\n                            <button className='toolbar-button'>\n                                Return to editor\n                            </button>\n                        </Link>\n                    </div>\n                </Toolbar>\n                <Home preview={props.cvs?.find(cv => cv.id + '' === match.params.id)}/>\n            </div>\n            }/>\n            <Route path=\"/mycv\" render={({ match }) =>\n                <div>\n                    <Toolbar>\n                        <div>\n                            <button className='toolbar-button' disabled={formActive}>Clear CV</button>\n                            <button className='toolbar-button' onClick={(event) => {\n                                event.preventDefault()\n                                myCVs[0] && cvService.duplicateCV(myCVs[0])\n                                    .then((response) => {\n                                        props.updateCVs()\n                                    })\n                            }}>Duplicate Default</button>\n                            <Route exact path=\"/mycv/:id\" render={({ match }) =>\n                                [\n                                    <button className='toolbar-button' disabled={formActive} onClick={(event) => {\n                                        event.preventDefault()\n                                        cvService.setCVDefault(match.params.id)\n                                            .then((response) => {\n                                                props.updateCVs()\n                                            })\n                                            .catch((error) => {\n                                                if (error.response.data.error) {\n                                                    props.showNotification(error.response.data.error, Type.ERROR, 5)\n                                                }\n                                            })\n                                    }}>Set As Default CV</button>,\n                                    <Link to={`/preview/${match.params.id}`}>\n                                        <button className='toolbar-button'>Preview</button>\n                                    </Link>\n                                ]\n                            }/> \n                            <Route exact path=\"/mycv\" render={({ match }) => [\n                                <button className='toolbar-button' disabled> Set As Default CV</button>,\n                                <button className='toolbar-button' disabled>Preview</button>\n                            ]} /> \n                        </div>\n                    </Toolbar>\n                    <h1>My CV's</h1>\n                    <div className='cv-selector'>\n                        {myCVs.map((cv:ICV) => \n                            <div className='cv-item' key={cv.id}>\n                                <Link to={`/mycv/${cv.id}`} onClick={()=>{props.setPreviousCV(cv.id)}}>\n                                    <img src='emptycv.svg' width='150px' height='180px' alt='document'/>\n                                    <div style={{zIndex: 1}}>\n                                        {cv.name}\n                                        {Object.entries(cv).map(([key, value]) => value ? <p key={key}>{key + ': ' + value}</p> : '')}\n                                    </div>\n                                </Link> \n                                <button\n                                    onClick={(event) => {\n                                        event.preventDefault()\n                                        cvService.deleteObject(ServiceType.CV, cv.id)\n                                            .then((response) => {\n                                                props.updateCVs()\n                                            })\n                                        }}\n                                        >Delete</button>\n                            </div>\n                        )}\n                        <img\n                            src='emptycvplus.svg'\n                            width='150px'\n                            height='180px'\n                            alt='document'\n                            onClick={(event)=>{\n                                event.preventDefault()\n                                cvService.createEmptyCV().then(response => {\n                                    props.updateCVs()\n                                })\n                            }}\n                            /> \n                    </div>\n                    {renderForm(myCVs)}\n                </div>\n            }/>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCV)\n\n","import React, { useState } from 'react'\nimport { Message } from '../reducers/notificationReducer'\n\ninterface Props {\n    message: Message,\n    deleteNotification: Function\n}\n\nconst NotificationMessage: React.FC<Props> = (props) => {\n    const message = props.message\n\n\n    const [hovered, setHovered] = useState<boolean>(false)\n\n    return(\n        <div key={message.id} className={`notification ${message.type}`} onMouseEnter={() => setHovered(true)} onMouseLeave={() => setHovered(false)}>\n            <div className='notification-text'>{message.text}</div>\n            <button\n                className='notification-close-button'\n                onClick={() => props.deleteNotification()}\n                style={{ opacity: hovered ? 1 : 0 }}\n            >X</button>\n        </div>\n    )\n}\n\nexport default NotificationMessage\n","import React from 'react'\nimport './NotificationArea.css'\nimport { connect } from 'react-redux'\nimport { Message, deleteNotification } from '../reducers/notificationReducer'\nimport NotificationMessage from './NotificationMessage'\nimport { AppState } from '../index'\n\ninterface OwnProps {}\nexport interface StateProps {visible?: boolean, messages?: Message[]}\nexport interface DispatchProps { deleteNotification: Function }\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n    return {\n        visible: state.notification.visible,\n        messages: state.notification.messages\n    }\n}\n\nconst mapDispatchToProps:DispatchProps = {\n    deleteNotification\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst NotificationArea: React.FC<Props> = (props) => {\n    const { visible, messages } = props\n\n    if ( messages ) {\n        return (\n            <div className='notificationContainer' style={{opacity: visible ? 1 : 0}}>\n                {messages.map( message => {\n                    return (<NotificationMessage key={message.id} message={message} deleteNotification={() => props.deleteNotification(message.id)}></NotificationMessage>)\n                })}\n            </div>\n        )\n    }\n    return (\n        <div className='notificationContainer'></div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationArea)\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Background from './background/HexaBackground'\nimport Menu from './components/Menu'\nimport Login from './components/Login'\nimport Footer from './components/Footer'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// import { ReactHeight } from './utils/react-height'\nimport Users from './components/Users'\nimport About from './components/About'\nimport MyCV from './components/MyCV'\nimport NotificationArea from './components/NotificationArea'\nimport { connect } from 'react-redux'\nimport { AppState } from '.'\nimport { UserState } from './reducers/userReducer'\nimport { updateCVs } from './reducers/cvReducer'\nimport Home from './components/Home'\n\ninterface OwnProps { }\nexport interface StateProps { user?: UserState }\nexport interface DispatchProps {\n  updateCVs: Function\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  updateCVs\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst App: React.FC<Props> = (props) => {\n  const { user } = props\n  const hideLogin = user && user.token.length > 2\n  const [ height, setHeight ] = useState(800)\n\n  useEffect(()=>{\n    const content = document.getElementById('content')\n    if ( content ) {\n      setHeight(content.clientHeight)\n    }\n    if (props.user && props.user.token.length > 0) {\n      props.updateCVs().catch((error: any) => {\n        console.log('Data retrieving error', error)\n        console.log('Trying again')\n        props.updateCVs()\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  const content = () => {\n    if (!hideLogin) {\n      return (\n        <div className='content'>\n          <Login />\n        </div>\n      )\n    }\n    return (\n      <div className='content'>\n        <Route exact path='/'><Home /></Route>\n        <Route path='/users'><Users /></Route>\n        <Route path='/mycv'><MyCV /></Route>\n        <Route path='/preview'><MyCV /></Route> \n        <Route exact path='/about'><About /></Route>\n      </div>\n    )\n  }\n\n  return ( \n    <div className=\"App\" id=\"App\">\n      <Router>\n      <Menu showRoutes={!hideLogin}/>\n      <Background height={height}/>\n        {/* <ReactHeight onHeightReady={(h:any) => setHeight(h)}> */}\n        {content()}\n        {/* </ReactHeight> */}\n      <NotificationArea/>\n      <Footer/>\n      <Background height={height} bottom/>\n      </Router>\n    </div>\n  )\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\nimport thunk from 'redux-thunk'\nimport cvReducer from './reducers/cvReducer';\n\nexport const rootReducer = combineReducers({\n    notification: notificationReducer,\n    user: userReducer,\n    cv: cvReducer\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nconst store = createStore(\n    rootReducer, composeWithDevTools(\n        applyMiddleware(thunk)\n    )\n)\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}