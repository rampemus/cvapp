{"version":3,"sources":["background/HexaBackground.tsx","reducers/notificationReducer.tsx","utils/serviceHelper.tsx","services/cvService.tsx","hooks/useField.tsx","reducers/loadingReducer.tsx","reducers/cvReducer.tsx","reducers/userReducer.tsx","components/Menu.tsx","components/Users/UsersForm.tsx","services/loginService.tsx","components/Login.tsx","components/Footer.tsx","components/Users/UsersRow.tsx","services/usersService.tsx","components/Toolbar.tsx","utils/validators.tsx","components/MyCVForm/MyCVFormLanguageLevelSelector.tsx","components/Users/User.tsx","components/Users/Users.tsx","components/About.tsx","components/MyCVForm/MyCVFormPanelButtons.tsx","components/MyCVForm/MyCVFormDateSelector.tsx","components/MyCVForm/MyCVFormPanel.tsx","components/MyCVForm/MyCVForm.tsx","components/Home.tsx","components/MyCVForm/MyCV.tsx","components/NotificationMessage.tsx","components/Notification.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Color","Type","Background","props","cos30","Math","sqrt","hexaRow","x","y","hexaSize","spacing","colors","rowIndex","dx","transform","bottom","key","map","color","index","EMPTY","strokeColor","LIGHT","STROKE_LIGHT","STROKE_HIGHLIGHT","point1","point2","point3","point4","point5","point6","points","concat","style","stroke","strokeWidth","fill","hexagon","transformToColorArray","numbers","result","forEach","push","GREY","BLUE","DARK","drawHexaGrid","numberGrid","dy","height","width","viewBox","preserveAspectRatio","className","getConfigHeader","user","headers","token","ServiceType","guidGenerator","S4","random","toString","substring","initState","visible","messages","showNotification","message","type","lifeTime","dispatch","a","id","data","text","duration","setTimeout","notificationReducer","state","action","newMessages","newState","filter","length","FieldType","createObject","object","field","newObjectWithoutIdAndOwner","Object","fromEntries","entries","value","axios","post","cv","then","response","catch","error","console","log","modifyObject","changes","put","deleteObject","delete","getAllCV","get","communication","skills","info","attachments","experience","exp","timeFrame","startDate","Date","endDate","education","edu","createEmptyCV","CV","name","contact","firstname","lastname","duplicateCV","duplicateContact","address","company","email","linkedin","phone","phoneAvailable","pictureUrl","duplicateProfile","profile","content","duplicateProjects","projects","project","description","githubUrl","showcaseUrl","thumbnailUrl","duplicateReference","reference","duplicateExperience","duplicateEducation","duplicateCommunication","languages","language","level","duplicateSkills","duplicateInfo","dupliaceAttachments","github","techlist","cvId","PROFILE","PROJECT","CONTACT","SUCCESS","EXPERIENCE","COMMUNICATION","INFO","setCVDefault","defaultCommand","cvid","baseUrl","isFetching","setLoading","loading","loadingReducer","cvs","owner","created","username","lastOpened","updateCVs","cvService","loaderAction","cvReducer","includes","find","cvObject","emptyExperience","floor","Array","emptyContact","emptyProject","emptyProfile","emptyCommunication","emptyInfo","objectId","undefined","loggedUserJSON","window","localStorage","getItem","JSON","parse","userReducer","removeItem","mapDispatchToProps","logoutUser","clearCVS","connect","lastOpenedCV","loader","location","useLocation","showLogout","showRoutes","src","alt","to","pathname","onClick","disabled","CalcDateAfter","useField","useState","setValue","onChange","event","currentTarget","password","credentials","setUser","TEXT","PASSWORD","remember","setRemember","submitLock","setSubmitLock","onSubmit","handleLogin","persist","preventDefault","loginService","setItem","stringify","cooldown","cooldownEnd","WARNING","lock","clearTimeout","ERROR","defaultChecked","UsersRow","expires","handleUserDelete","Toolbar","children","Joi","require","contentString","string","regex","max","empty","nameString","alphanum","min","CVSchema","keys","any","uri","InfoSchema","CommunicationSchema","array","items","ExperienceSchema","ProfileSchema","ProjectSchema","ContactSchema","minDomainSegments","tlds","allow","UserSchema","oldPassword","passwordConfirm","now","ILevel","setExpires","initialValues","formValues","enableReinitialize","validate","values","validationResult","errorArray","details","detail","context","setSubmitting","setValues","newUser","usersService","reloadUsers","closeForm","newPassword","isSubmitting","isValid","errors","placeholder","TWO_WEEKS","ONE_MONTH","textAlign","marginTop","userForHeaders","setOwner","showEditUser","setShowEditUser","useEffect","timeleftMillisecs","valueOf","display","updateUser","getFullYear","getMonth","getDay","users","setUsers","updateUsers","showAddUser","setShowAddUser","exact","path","render","match","params","About","href","DeleteButton","handleDelete","ClearButton","clearActionValues","CancelButton","SaveButton","from","i","months","MyCVFormDateSelector","dateProp","date","year","setYear","month","setMonth","getDate","day","setDay","lastDayOfTheMonth","setLastDayOfTheMonth","newYear","parseInt","target","handleChange","yearNumber","newMonth","monthNumber","newDay","dayNumber","levels","Elementary","EveryDay","Working","Advanced","Professional","Native","MyCVFormLanguageLevelSelector","initLevel","setLevel","stringToArray","split","addEmptyCVObject","removeTempCVObject","serviceType","join","newValues","newDate","as","newLevel","entry","renderChildren","CVid","renderInfoForm","renderContactForm","renderExperienceForm","MyCVForm","renderProjectForm","ref","renderCommunicationForm","renderTimeFrame","preview","paragraph","marginRight","sort","b","getTime","skill","attachment","setPreviousCV","formActive","myCVs","selected","substr","transition","marginBottom","zIndex","NotificationMessage","alive","setAlive","animation","setAnimation","timer","deleted","maxHeight","paddingTop","paddingBottom","overflow","opacity","minHeight","minWidth","deleteNotification","version","position","backgroundColor","strokeDasharray","r","notification","setMessages","propsmessage","findIndex","newMessagesAndTaggedDeleted","tempId","hideLogin","setHeight","process","document","getElementById","clientHeight","updateStatus","Boolean","hostname","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","appStatus","appStore","renderApp","ReactDOM","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acc1efa6.chunk.js","sourcesContent":["import React from 'react'\nimport './HexaBackground.css'\n\ninterface Props {\n    height: number,\n    bottom?: boolean\n}\n\n// TODO: move this to css\nenum Color {\n    EMPTY = '',\n    LIGHT = 'rgb(219, 223, 224)',\n    GREY = 'rgb(195,202,209)',\n    BLUE = 'rgb(189,205,219)',\n    DARK = 'rgb(172,176,187)',\n    STROKE_LIGHT = 'rgb(212, 213, 214)',\n    STROKE_HIGHLIGHT = 'rgb(184, 191, 204)', \n}\n\nconst Background: React.FC<Props> = (props: Props) => {\n\n    const hexaSize = 46\n    const spacing = 7\n    const cos30 = 1.5/Math.sqrt(3)\n\n    const hexagon = (x: number, y: number, hexaSize: number, color: Color, index: string) => {\n        if ( color === Color.EMPTY ) {\n            return ''\n        }\n        const strokeColor = color === Color.LIGHT ? Color.STROKE_LIGHT : Color.STROKE_HIGHLIGHT\n        const point1 = `${ x - hexaSize }, ${ y } `\n        const point2 = `${x - hexaSize * .5}, ${y - hexaSize * cos30 } `\n        const point3 = `${x + hexaSize * .5}, ${y - hexaSize * cos30 } `\n        const point4 = `${ x + hexaSize },${ y } `\n        const point5 = `${x + hexaSize * .5}, ${y + hexaSize * cos30 } `\n        const point6 = `${x - hexaSize * .5}, ${y + hexaSize * cos30 } `\n        const points = point1.concat(point2,point3,point4,point5,point6)\n        return <polygon key={index} points={points} style={{ stroke: strokeColor, strokeWidth: 3, fill: color }}/>\n    }\n\n    const hexaRow = (x: number, y: number, hexaSize: number, spacing: number, colors: Color[], rowIndex:number) => {\n        const dx = hexaSize * 3 + spacing * 2 * cos30\n        const transform = `rotate(-15) translate(${props.bottom ? '-100,220' : '-100,0'})`\n        return <g\n                    key={`hexaRow${rowIndex}`}\n                    transform={transform}\n                >\n            {colors.map((color,index)=>{\n                return hexagon(x + dx * index, y, hexaSize, color, `r${rowIndex}h${index}`)\n            })}\n        </g>\n    }\n\n    const transformToColorArray = ( numbers:number[] ) => {\n        let result:Color[] = []\n        numbers.forEach((color, index) => {\n            if ( color < 1 ) {\n                result.push(Color.EMPTY)\n            } else if ( color < 2) {\n                result.push(Color.LIGHT)\n            } else if (color < 3) {\n                result.push(Color.GREY)\n            } else if (color < 4) {\n                result.push(Color.BLUE)\n            } else {\n                result.push(Color.DARK)\n            }\n        });\n        return result\n    }\n\n    const drawHexaGrid = (numberGrid: number[][]) => {\n        const dy = hexaSize * 2 * cos30 + spacing\n        return (\n            <svg \n                height='100%'\n                width='100%'\n                viewBox='0 0 1200 1200'\n                preserveAspectRatio={props.bottom ? \"xMidYMin slice\" : \"xMidYMin slice\"}\n                className={props.bottom ? 'bottom-hexa' : 'top-hexa'}\n            >\n                {numberGrid.map( (numbers:number[], index) => {\n                        if ( index%2 === 0 ) {\n                            return hexaRow( 0, 0 + dy * index/2, hexaSize, spacing, transformToColorArray(numbers), index)\n                        } else {\n                            return hexaRow(0 + hexaSize * 1.5 + spacing * cos30, 0 + hexaSize * cos30 + spacing * .5 + dy * (index - 1) / 2,\n                                hexaSize, spacing, transformToColorArray(numbers), index)\n                        }\n                    })}\n                {/* <text x='4' y='50%'>{height}</text> */}\n            </svg>\n        )\n    } \n\n    if (props.bottom) {\n        return <div className='background-bottom'>\n            {drawHexaGrid(\n                [\n                    [1, 0, 0, 0, 0, 0, 0, 0, 0],\n                    [1, 0, 0, 0, 0, 0, 0, 0],\n                    [2, 1, 0, 0, 0, 0, 0, 0, 0],\n                    [2, 1, 0, 0, 0, 0, 0, 0],\n                    [3, 1, 0, 0, 0, 0, 0, 0, 0],\n                    [2, 1, 1, 0, 0, 0, 0, 0],\n                    [3, 2, 1, 1, 0, 0, 0, 0, 1],\n                    [2, 2, 1, 1, 1, 0, 1, 1],\n                    [3, 2, 2, 1, 1, 1, 1, 1, 1],\n                    [4, 3, 2, 2, 1, 1, 1, 3],\n                    [3, 3, 3, 3, 2, 2, 3, 3, 2],\n                    [2, 2, 4, 4, 2, 2, 4, 3],\n                    [2, 2, 3, 2, 3, 3, 3, 2, 3],\n                    [2, 4, 3, 3, 2, 3, 3, 3],\n                    [2, 2, 3, 2, 3, 3, 3, 2, 3],\n                ]\n            )\n        }</div>\n    } else {\n        return <div className='background-top'>\n            {drawHexaGrid(\n                [\n                    [3, 2, 3, 2, 3, 3, 3, 2, 3],\n                    [3, 2, 4, 2, 3, 2, 2, 4],\n                    [3, 2, 3, 2, 2, 4, 4, 3, 3],\n                    [4, 2, 4, 2, 3, 2, 3, 2],\n                    [3, 2, 2, 2, 3, 3, 2, 3, 3],\n                    [2, 1, 1, 1, 2, 4, 2, 4],\n                    [3, 1, 1, 1, 1, 4, 2, 2, 2],\n                    [1, 1, 1, 1, 1, 1, 4, 4, 3],\n                    [1, 1, 1, 1, 1, 1, 1, 2, 4],\n                    [1, 0, 0, 0, 1, 1, 1, 2, 2],\n                    [1, 0, 0, 0, 0, 1, 1, 1, 2],\n                    [0, 0, 0, 0, 0, 0, 1, 2],\n                    [0, 0, 0, 0, 0, 1, 1, 1, 2],\n                    [0, 0, 0, 0, 0, 0, 1, 1, 1],\n                    [0, 0, 0, 0, 0, 0, 0, 0, 1],\n                ]\n            )}\n        </div>\n    }\n    \n}\n\nexport default Background\n","const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION'\nconst DELETE_NOTIFICATION = 'DELETE_NOTIFICATION'\n\nexport enum Type {\n  ERROR = 'error',\n  SUCCESS = 'success',\n  WARNING = 'warning'\n}\n\nexport interface Message {\n  text: string,\n  id: string,\n  type: Type,\n  duration?: number\n}\n\nexport interface NotificationState {\n  visible: boolean,\n  messages: Message[]\n}\n\ninterface NotificationAction {\n  type: string,\n  id?: string,\n  data: Message[]\n}\n\n// https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id\nconst guidGenerator = () => {\n  var S4 = function () {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  }\n  return (S4() + S4())\n}\n\nconst initState: NotificationState = {\n  visible: true,\n  messages: []\n} \n\nconst notificationReducer = (state: NotificationState = initState, action: NotificationAction) => {\n  switch (action.type) {\n    case SHOW_NOTIFICATION: {\n      const newMessages = state.messages.concat(action.data)\n      const newState = {\n        visible: true,\n        messages: newMessages\n      }\n      return newState\n    }\n    case DELETE_NOTIFICATION: {\n      const newMessages:Message[] = state.messages.filter(message => message.id !== action.id)\n      const newState = {\n        visible: (newMessages.length > 0),\n        messages: newMessages\n      }\n      return newState\n    }\n    default: return state\n  }\n}\n\n\nexport const showNotification = (message:string, type:Type, lifeTime?:number ) => {\n  return async (dispatch:any) => {\n    const id = guidGenerator()\n    const action: NotificationAction = {\n      type: SHOW_NOTIFICATION,\n      data: [{ text: message, id: id, type: type, duration: lifeTime }]\n    }\n    dispatch(action)\n    if ( lifeTime ) {\n      setTimeout(() => {\n        const deleteAfterTimeoutAction: NotificationAction = {\n          type: DELETE_NOTIFICATION,\n          id: id,\n          data: []\n        }\n        dispatch(deleteAfterTimeoutAction)\n      }, lifeTime * 1000 + 700)\n    }\n  }\n}\n\nexport const deleteNotification = (id: string) => {\n  const action:NotificationAction = {\n    type: DELETE_NOTIFICATION,\n    id: id,\n    data: []\n  }\n  return action\n}\n\nexport default notificationReducer\n","import { UserState } from \"../reducers/userReducer\"\n\nconst getConfigHeader = (user: UserState) => {\n  const userToken = user.token\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'bearer ' + userToken\n    }\n  }\n  return config\n}\n\nexport { getConfigHeader }","import axios, { AxiosResponse } from 'axios'\nimport { IUser } from './usersService'\nimport { getConfigHeader } from '../utils/serviceHelper'\nimport { Type } from '../reducers/notificationReducer'\nimport { UserState } from '../reducers/userReducer'\nconst baseUrl = '/api/cv'\n\nexport interface IContact {\n  owner: IUser,\n  address: string,\n  company: string,\n  email: string,\n  firstname: string,\n  lastname: string,\n  linkedin: string\n  phone: string,\n  phoneAvailable: string,\n  pictureUrl: string,\n  id: string\n}\n\nexport interface IExperience {\n  description: string,\n  name: string,\n  owner: IUser,\n  timeFrame: {\n    startDate: Date,\n    endDate: Date,\n  },\n  id: string,\n}\n\nexport interface IInfo {\n  name: string,\n  id: string,\n  content: string[],\n  owner: IUser,\n}\n\nexport interface ICommunication extends IInfo {\n  languages: {\n    language: string,\n    level: string,\n  }[],\n}\n\nexport interface IProfile {\n  name: string,\n  id: string,\n  content: string[],\n  owner?: IUser,\n}\n\nexport interface IProject {\n  description: string,\n  githubUrl: string,\n  name: string,\n  owner: IUser,\n  showcaseUrl: string,\n  thumbnailUrl: string,\n  id: string,\n}\n\nexport interface ICV extends ICVEmpty {\n  owner: IUser,\n  contact: IContact,\n  id: string,\n}\n\ninterface IContactEmpty {\n  address?: string,\n  company?: string,\n  email?: string,\n  firstname: string,\n  lastname: string,\n  linkedin?: string,\n  phone?: string,\n  phoneAvailable?: string,\n  pictureUrl?: string,\n}\n\ninterface ICVEmpty {\n  name: string,\n  github?: string,\n  techlist?: string,\n  contact: IContactEmpty,\n  profile?: IProfile,\n  projects?: IProject[],\n  reference?: IContact[],\n  experience?: IExperience[],\n  education?: IExperience[],\n  communication?: ICommunication,\n  skills?: IInfo,\n  info?: IInfo,\n  attachments?: IInfo,\n}\n\nexport enum ServiceType {\n  CV = '',\n  CONTACT = '/contact',\n  PROFILE = '/profile',\n  EXPERIENCE = '/experience',\n  COMMUNICATION = '/communication',\n  INFO = '/info',\n  PROJECT = '/project'\n}\n\ninterface getAllCVResponse extends AxiosResponse {\n  data: ICV[]\n}\n\nconst createEmptyCV = (user: UserState) => {\n  const emptyCV: ICVEmpty = {\n    name: 'name-required',\n    contact: {\n      firstname: 'firstname-required',\n      lastname: 'lastname-required'\n    }\n  }\n  const request = axios.post(baseUrl + ServiceType.CV, emptyCV, getConfigHeader(user))\n  return request.then((response:any) => {\n    return response.data\n  })\n}\n\nconst duplicateCV = (cv: ICV, user: UserState, showNotification?: Function ) => {\n  const duplicateContact: IContactEmpty = {\n    address: cv.contact.address,\n    company: cv.contact.company,\n    email: cv.contact.email,\n    firstname: cv.contact.firstname,\n    lastname: cv.contact.lastname,\n    linkedin: cv.contact.linkedin,\n    phone: cv.contact.phone,\n    phoneAvailable: cv.contact.phoneAvailable,\n    pictureUrl: cv.contact.pictureUrl, \n  }\n\n  const duplicateProfile: any = cv.profile ? {\n      content: cv.profile.content,\n      name: cv.profile.name + ' duplicate'\n    } : null\n\n  const duplicateProjects: any = cv.projects ?\n    cv.projects.map((project) => { return {\n      description: project.description,\n      githubUrl: project.githubUrl,\n      name: project.name + ' duplicate',\n      showcaseUrl: project.showcaseUrl,\n      thumbnailUrl: project.thumbnailUrl,\n    }}) : null\n\n  const duplicateReference: any = cv.reference ?\n    cv.reference.map((contact: any) => {\n      return {\n        address: contact.address,\n        company: contact.company,\n        email: contact.email,\n        firstname: contact.firstname,\n        lastname: contact.lastname,\n        phone: contact.phone,\n        phoneAvailable: contact.phoneAvailable,\n        pictureUrl: contact.pictureUrl, \n      }\n    }) : null\n\n  const duplicateExperience: any = cv.experience ?\n    cv.experience.map((experience: any) => {\n      return {\n        description: experience.description,\n        name: experience.name + ' duplicate',\n        timeFrame: {\n          startDate: experience.timeFrame.startDate,\n          endDate: experience.timeFrame.endDate,\n        }\n      }\n    }) : null\n\n  const duplicateEducation: any = cv.education ?\n    cv.education.map((experience: any) => {\n      return {\n        description: experience.description,\n        name: experience.name + ' duplicate',\n        timeFrame: {\n          startDate: experience.timeFrame.startDate,\n          endDate: experience.timeFrame.endDate,\n        }\n      }\n    }) : null\n\n  const duplicateCommunication: any = cv.communication ? {\n    name: cv.communication.name + 'duplicate',\n    content: cv.communication.content,\n    languages: cv.communication.languages.map( (language: any) => { return {\n      language: language.language,\n      level: language.level\n    }})\n  } : null\n\n  const duplicateSkills: any = cv.skills ? {\n    name: cv.skills.name + ' duplicate',\n    content: cv.skills.content\n  } : null\n\n  const duplicateInfo: any = cv.info ? {\n    name: cv.info.name + ' duplicate',\n    content: cv.info.content\n  } : null\n\n  const dupliaceAttachments: any = cv.attachments ? {\n    name: cv.attachments.name + ' duplicate',\n    content: cv.attachments.content\n  } : null\n\n  const duplicateCV: any = {\n    name: cv.name,\n    contact: duplicateContact,\n    github: cv.github,\n    techlist: cv.techlist\n  }\n\n  const request = axios.post(baseUrl + ServiceType.CV, duplicateCV, getConfigHeader(user))\n  return request.then( async (response: any) => {\n    const cvId = response.data.id\n\n    await createObject(ServiceType.PROFILE, duplicateProfile, cvId, user, 'profile')\n\n    duplicateProjects.map(async (project: any) => \n      await createObject(ServiceType.PROJECT, project, cvId, user, 'projects')\n    )\n\n    duplicateReference.map( async (reference: any) => {\n      await createObject(ServiceType.CONTACT, reference, cvId, user, 'reference')\n    })\n    showNotification && showNotification('Profile, projects and references duplicated', Type.SUCCESS, 4.2)\n\n    duplicateExperience.map( async (experience: any) => {\n      await createObject(ServiceType.EXPERIENCE, experience, cvId, user, 'experience')\n    })\n\n    duplicateEducation.map( async (experience: any) => {\n      await createObject(ServiceType.EXPERIENCE, experience, cvId, user, 'education')\n    })\n    showNotification && showNotification('Experiences and education duplicated', Type.SUCCESS, 4.4)\n    \n    await createObject(ServiceType.COMMUNICATION, duplicateCommunication, cvId, user, 'communication')\n\n    await createObject(ServiceType.INFO, duplicateSkills, cvId, user, 'skills')\n\n    await createObject(ServiceType.INFO, dupliaceAttachments, cvId, user, 'attachments')\n    showNotification && showNotification('Communication, skills and attachments duplicated', Type.SUCCESS, 4.7)\n\n    await createObject(ServiceType.INFO, duplicateInfo, cvId, user, 'info')\n\n    return response.data\n  })\n}\n\nconst createObject = (type: ServiceType, object: any, id: string, user: UserState, field?: string) => {\n  const newObjectWithoutIdAndOwner = Object.fromEntries(Object.entries(object).filter(([key, value]) => key !== 'id' && key !== 'owner' && value !== '') )\n  const request = axios.post(baseUrl + type, { ...newObjectWithoutIdAndOwner, cv: { id, field: field ? field : '' } }, getConfigHeader(user))\n  return request.then((response:any) => {\n    return response.data\n  }).catch(error => {\n   console.log('create object error:', error.response.data.error)\n  })\n}\n\nconst modifyObject = (type: ServiceType, id: string, object: any, user: UserState ) => {\n  const changes = Object.fromEntries(Object.entries(object).filter(([key, value]) => key !== 'id'))\n  console.log(changes)\n  const request = axios.put(baseUrl + type, { changes, id }, getConfigHeader(user))\n  return request.then((response:any) => {\n    return response.data\n  }).catch(error => {\n   console.log('modify object error:',error.response.data.error)\n  })\n}\n\nconst deleteObject = (type: ServiceType, id: string, user: UserState) => {\n  const request = axios.delete(baseUrl + type + '/' + id, getConfigHeader(user))\n  return request.then((response:any) => {\n    return response.data\n  })\n}\n\ninterface IExperienceNoDate {\n  description: string,\n  name: string,\n  timeFrame: {\n    startDate: string,\n    endDate: string,\n  },\n  id: string,\n}\n\ninterface ISetDefaultCV {\n  cvid: string,\n  userid?: string,\n}\n\ninterface defaultResponse extends AxiosResponse {\n  data: {\n    message: string\n  }\n}\n\nconst setCVDefault = (cv: string, user: UserState) => {\n  const defaultCommand: ISetDefaultCV = {\n    cvid: cv\n  }\n\n  const request = axios.post(baseUrl + '/default', defaultCommand, getConfigHeader(user))\n  return request.then((response: defaultResponse) => {\n    return response.data\n  })\n}\n\nconst getAllCV = (user: UserState) => {\n  const request = axios.get(baseUrl, getConfigHeader(user))\n  return request.then((response: getAllCVResponse) => {\n    const formattedData = response.data.map((cv:any) => {\n      return { ...cv,\n        communication: cv.communication ? cv.communication[0] : null,\n        skills: cv.skills ? cv.skills[0] : null,\n        info: cv.info ? cv.info[0] : null,\n        attachments: cv.attachments ? cv.attachments[0] : null,\n        experience: cv.experience.map((exp: IExperienceNoDate) => ({\n          ...exp, \n          timeFrame: {\n            startDate: new Date(exp.timeFrame.startDate),\n            endDate: new Date(exp.timeFrame.endDate)\n          }\n        })),\n        education: cv.education.map((edu: IExperienceNoDate) => ({\n          ...edu,\n          timeFrame: {\n            startDate: new Date(edu.timeFrame.startDate),\n            endDate: new Date(edu.timeFrame.endDate)\n          }\n        }))\n      }\n    })\n    return formattedData\n  })\n}\n\nexport default { createObject, modifyObject, deleteObject, getAllCV, createEmptyCV, duplicateCV, setCVDefault }\n","import { useState } from 'react'\n\nexport enum FieldType {\n  TEXT = 'text',\n  PASSWORD = 'password'\n}\n\nconst useField = (type: FieldType) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event: React.FormEvent<HTMLInputElement> ):void => {\n    setValue(event.currentTarget.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n  }\n}\n\nexport default useField\n","export const SET_LOADING = 'SET_LOADING'\n\nexport interface loadingReducerAction {\n  type: string,\n  data: boolean\n}\n\nexport interface ILoaderState {\n  isFetching: boolean\n}\n\nconst initState = {\n  isFetching: true\n}\n\nconst loadingReducer = (state: ILoaderState = initState, action: loadingReducerAction) => {\n  switch (action.type) {\n    case SET_LOADING: {\n      return { isFetching: action.data }\n    }\n    default: return state\n  }\n}\n\nexport const setLoading = (loading: boolean) => {\n  const action:loadingReducerAction = {\n    type: SET_LOADING,\n    data: loading\n  }\n  return action\n}\n\nexport default loadingReducer\n","import cvService, { ICV, IExperience, IContact, IProject, IProfile, ICommunication, IInfo } from \"../services/cvService\"\nimport { UserState } from \"./userReducer\"\nimport { loadingReducerAction, SET_LOADING } from \"./loadingReducer\"\n\nexport const UPDATE_CVS = 'UPDATE_CVS'\nexport const ADD_EMPTY_OBJECT = 'ADD_EMPTY_OBJECT'\nexport const SET_PREVIOUS_CV = 'SET_PREVIOUS_CV'\nexport const REMOVE_TEMP_OBJECT = 'REMOVE_TEMP_OBJECT'\n\ninterface cvState {\n  cvs: ICV[],\n  lastOpened: string\n}\n\nexport interface CVAction {\n  type: string,\n  data: any\n}\n\nconst initState: cvState = {\n  cvs: [\n    {\n      attachments: {\n        content: [\n          '...',\n          '...',\n          '...'\n        ],\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        id: '...'\n      },\n      communication: {\n        content: [\n          '...'\n        ],\n        languages: [\n          {\n            'language': '...',\n            'level': '...'\n          },\n          {\n            'language': '...',\n            'level': '...'\n          }\n        ],\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        id: '...'\n        },\n      education: [\n        {\n          timeFrame: {\n            endDate: new Date('2020-01-14T12:34:33.498Z'),\n            startDate: new Date('2020-01-14T12:34:33.498Z')\n          },\n          description: '...',\n          name: '...',\n          owner: {\n            created: new Date('2020-01-13T13:18:58.111Z'),\n            name: '...',\n            username: '...',\n            id: '...'\n          },\n          id: '...'\n        }\n      ],\n      experience: [{\n        timeFrame: {\n          endDate: new Date('2020-01-14T12:34:33.498Z'),\n          startDate: new Date('2020-01-14T12:34:33.498Z')\n        },\n        description: '...',\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        id: '...'\n      }],\n      info: {\n        content: [\n          '...',\n          '...'\n        ],\n        name: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        }, \n        id: '...'\n      },\n      projects: [\n        {\n          description: '...',\n          githubUrl: '',\n          name: '...',\n          owner: {\n            created: new Date('2020-01-13T13:18:58.111Z'),\n            name: '...',\n            username: '...',\n            id: '...'\n          }, \n          showcaseUrl: '...',\n          thumbnailUrl: '',\n          id: '...'\n        }\n      ],\n      reference: [],\n      skills: {\n          content: [\n            '...'\n          ],\n          name: '...',\n          owner: {\n            created: new Date('2020-01-13T13:18:58.111Z'),\n            name: '...',\n            username: '...',\n            id: '...'\n          }, \n        id: '...'\n      },\n      contact: {\n        address: '...',\n        email: '...',\n        firstname: '...',\n        lastname: '...',\n        linkedin: '...',\n        owner: {\n          created: new Date('2020-01-13T13:18:58.111Z'),\n          name: '...',\n          username: '...',\n          id: '...'\n        },\n        phone: '...',\n        phoneAvailable: '...',\n        company: '...',\n        pictureUrl: '',\n        id: '...'\n      },\n      github: '',\n      name: '...',\n      owner: { \n        created: new Date('2020-01-13T13:18:58.111Z'),\n        name: '...',\n        username: '...',\n        id: '...'\n      },\n      profile: {\n        content: [\n          '...',\n          '...'\n        ],\n        name: '...',\n        owner: {\n          created: new Date('...'),\n          name: '...',\n          username: '...',\n          id: '...'\n        }, \n        id: '...'\n      },\n      techlist: '...',\n      id: '...'\n    }\n  ],\n  lastOpened: ''\n}\n\nconst cvReducer = (state: cvState = initState, action: CVAction) => {\n  switch (action.type) {\n    case UPDATE_CVS: {\n      return { cvs:action.data.cvs, lastOpened: action.data.cvs.length > 1 ? action.data.cvs.includes((cv:ICV) => cv.id === state.lastOpened) ? state.lastOpened : '' : ''}\n    }\n    case SET_PREVIOUS_CV: {\n      return { cvs: state.cvs, lastOpened: action.data.id }\n    }\n    case ADD_EMPTY_OBJECT: {\n      const cv = state.cvs.find((cv:ICV) => cv.id === action.data.id )\n      if (!cv) return state\n\n      switch(action.data.field) {\n        case 'experience':\n          return { lastOpened: state.lastOpened, cvs: state.cvs.map((cvObject: ICV) => {\n            const emptyExperience: IExperience = {\n              description: '',\n              name: '',\n              owner: cv.owner,\n              timeFrame: {\n                startDate: new Date(),\n                endDate: new Date(),\n              },\n              id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n            }\n            if ( cvObject.id === cv.id ) {\n              return { ...cv, experience: cv.experience ? cv.experience.concat(emptyExperience) : new Array(emptyExperience) }\n            } else {\n              return cvObject\n            }\n          }) }\n        case 'education':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyExperience: IExperience = {\n                  description: '',\n                  name: '',\n                  owner: cv.owner,\n                  timeFrame: {\n                    startDate: new Date(),\n                    endDate: new Date(),\n                  },\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, education: cv.education ? cv.education.concat(emptyExperience) : new Array(emptyExperience) }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'reference':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyContact: IContact = {\n                  owner: cv.owner,\n                  address: '',\n                  company: '',\n                  email: '',\n                  firstname: '',\n                  lastname: '',\n                  linkedin: '',\n                  phone: '',\n                  phoneAvailable: '',\n                  pictureUrl: '',\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, reference: cv.reference ? cv.reference.concat(emptyContact) : new Array(emptyContact) }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'projects':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyProject: IProject = {\n                  description: '',\n                  githubUrl: '',\n                  name: '',\n                  owner: cv.owner,\n                  showcaseUrl: '',\n                  thumbnailUrl: '',\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, projects: cv.projects ? cv.projects.concat(emptyProject) : new Array(emptyProject) }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'profile':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyProfile: IProfile = {\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, profile: emptyProfile }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'contact':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyContact: IContact = {\n                  owner: cv.owner,\n                  address: '',\n                  company: '',\n                  email: '',\n                  firstname: '',\n                  lastname: '',\n                  linkedin: '',\n                  phone: '',\n                  phoneAvailable: '',\n                  pictureUrl: '',\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, contact: emptyContact }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'communication':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyCommunication: ICommunication = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  languages: [],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, communication: emptyCommunication }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'skills':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyInfo: IInfo = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, skills: emptyInfo }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'info':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyInfo: IInfo = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, info: emptyInfo }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'attachments':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                const emptyInfo: IInfo = {\n                  owner: cv.owner,\n                  name: '',\n                  content: [''],\n                  id: 'temp' + Math.floor((Math.random() * 100000) + 1),\n                }\n                return { ...cv, attachments: emptyInfo }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        default:\n          return state\n      }\n    }\n    case REMOVE_TEMP_OBJECT: {\n      const cv = state.cvs.find((cv: ICV) => cv.id === action.data.id)\n      if (!cv) return state\n\n      switch (action.data.field) {\n        case 'experience':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return {\n                  ...cv, experience: cv.experience\n                  ? cv.experience.filter((experience: IExperience) => experience.id !== action.data.objectId)\n                  : []\n                }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'education':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, education: cv.education ? cv.education.filter((education: IExperience) => education.id !== action.data.objectId) : [] }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'reference':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, reference: cv.reference ? cv.reference.filter((reference: IContact) => reference.id !== action.data.objectId) : [] }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'projects':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, projects: cv.projects ? cv.projects.filter((project: IProject) => project.id !== action.data.objectId) : [] }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'profile':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, profile: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'contact':\n          return state // cannot delete required contact field\n        case 'communication':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, communication: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'skills':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, skills: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'info':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, info: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        case 'attachments':\n          return {\n            lastOpened: state.lastOpened, \n            cvs: state.cvs.map((cvObject: ICV) => {\n              if (cvObject.id === cv.id) {\n                return { ...cv, attachments: undefined }\n              } else {\n                return cvObject\n              }\n            })\n          }\n        default:\n          return state\n      }\n    }\n    default: return state\n  }\n}\n\nexport const updateCVs = (user: UserState) => {\n  return async (dispatch:any) => {\n    const action: CVAction = {\n      type: UPDATE_CVS,\n      data: { cvs: await cvService.getAllCV(user) }\n    }\n    dispatch(action)\n    const loaderAction: loadingReducerAction = {\n      type: SET_LOADING,\n      data: false\n    }\n    console.log('Setting loader false! from cvReducer')\n    dispatch(loaderAction)\n  }\n}\n\nexport const clearCVS = () => {\n  const action: CVAction = {\n    type: UPDATE_CVS,\n    data: { cvs: initState }\n  }\n  return action\n}\n\nexport const addEmptyCVObject = (id:string, field:string) => {\n  const action: CVAction = {\n    type: ADD_EMPTY_OBJECT,\n    data: { id, field }\n  }\n  return action\n}\n\nexport const removeTempCVObject = (id:string, field:string, objectId: string) => {\n  const action: CVAction = {\n    type: REMOVE_TEMP_OBJECT,\n    data: {id, field, objectId}\n  }\n  return action\n}\n\nexport const setPreviousCV = (id:string) => {\n  const action: CVAction = {\n    type: SET_PREVIOUS_CV,\n    data: {id}\n  }\n  return action\n}\n\nexport default cvReducer\n","const SET_USER = 'SET_USER'\nconst LOGOUT_USER = 'LOGOUT_USER'\n\nexport interface UserState {\n  token: string,\n  username: string,\n  name: string,\n}\n\ninterface SetUserAction {\n  type: string\n  data: UserState\n}\n\nconst loggedUserJSON = window.localStorage.getItem('loggedUser') || null\nconst user:UserState = loggedUserJSON ? JSON.parse(loggedUserJSON) : { token: '', username: '', name:'' }\n\nconst userReducer = (state: UserState | undefined = user, action: SetUserAction ) => {\n  switch (action.type) {\n    case SET_USER: {\n      return action.data\n    }\n    case LOGOUT_USER: {\n      window.localStorage.removeItem('loggedUser')\n      return { token: '', username: '', name: '' }\n    }\n    default: return state\n  }\n}\n\nexport const setUser = (user: UserState) => {\n  const action:SetUserAction = {\n    type: SET_USER,\n    data: user\n  }\n  return action\n}\n\nexport const logoutUser = () => {\n  const action = {\n    type: LOGOUT_USER,\n  }\n  return action\n}\n\nexport default userReducer\n","import React from 'react'\nimport './Menu.css'\nimport { clearCVS } from '../reducers/cvReducer'\nimport { Link, useLocation } from 'react-router-dom'\nimport { UserState, logoutUser } from '../reducers/userReducer'\nimport { AppState } from '..'\nimport { connect } from 'react-redux'\n\ninterface OwnProps {\n    showRoutes: boolean\n}\nexport interface StateProps {\n    user: UserState,\n    lastOpenedCV: string,\n    loading: boolean\n}\nexport interface DispatchProps {\n    logoutUser: () => void,\n    clearCVS: () => void\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n    return {\n        user: state.user,\n        lastOpenedCV: state.cv.lastOpened,\n        loading: state.loader.isFetching\n    }\n}\n\nconst mapDispatchToProps:DispatchProps = {\n    logoutUser,\n    clearCVS\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Menu: React.FC<Props> = (props) => {\n\n    const location = useLocation()\n\n    const showLogout = props.user && props.user.token.length > 2\n    const renderLogout = () => {\n        if (showLogout) {\n            return (<Link to='/'><button id='Logout' className='setting-item logout-button' onClick={() => {\n                props.logoutUser()\n                props.clearCVS()\n            }}>\n                <img src='logout.svg' width='17px' height='15px' alt='out'/>\n                logout\n            </button></Link>)\n        }\n        return (<button disabled className='setting-item logout-button'>\n                <img className='icon' src='logout.svg' width='17px' height='15px' alt='out' />\n                <div>logout</div>\n            </button>)\n    }\n    if (!props.showRoutes) {\n        return (\n            <div className='Menu'>\n                <div className='cv-app-logo'>\n                    <img src='./logo.svg' width='38px' height='38px' alt='logo'/>\n                </div>\n                <div className='menu-items'>\n                    <Link id='CurriculumVitae' to='/'>\n                        <div className={location.pathname === '/'\n                        ? 'menu-item selected'\n                        : 'menu-item'}>Curriculum Vitae</div>\n                    </Link>\n                    <Link id='Users' to='/users'>\n                        <div className={location.pathname.includes('/users')\n                        ? 'menu-item selected'\n                        : 'menu-item'}>Users</div>\n                    </Link>\n                    <Link id='MyCV' to={`/mycv${props.lastOpenedCV.length > 1 ? '/' + props.lastOpenedCV : ''}`}>\n                        <div className={location.pathname.includes('/mycv')\n                        ? 'menu-item selected'\n                        : 'menu-item'}>MyCV</div>\n                    </Link>\n                    <Link id='About' to='/about'>\n                        <div className={location.pathname === '/about'\n                        ? 'menu-item selected'\n                        : 'menu-item'}>About</div>\n                    </Link>\n                </div>\n                {/* <div className='loader'>\n                    {props.loading ? 'loading' : ''}\n                </div> */}\n                <div className='settings'>\n                    {renderLogout()}\n                </div>\n            </div>\n        )\n    }\n    return(\n        <div className='Menu'>\n            <div className='cv-app-logo'>\n                <img src='logo.svg' width='38px' height='38px' alt='logo'/>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Menu)\n","import React, { useState } from 'react'\nimport { showNotification, Type } from '../../reducers/notificationReducer'\nimport { connect } from 'react-redux'\nimport { UserState } from '../../reducers/userReducer'\nimport { AppState } from '../..'\nimport { Formik, Form, Field } from 'formik'\nimport usersService from '../../services/usersService'\nimport { UserSchema, IDetails } from '../../utils/validators'\nimport { setLoading } from '../../reducers/loadingReducer'\n\ninterface OwnProps {\n  closeForm: Function,\n  reloadUsers: Function,\n  newUser: boolean,\n  formValues?: {\n    id: string,\n    name: string,\n    username: string,\n    expires?: Date | null\n  }\n}\n\nexport interface StateProps {\n  user: UserState\n}\nexport interface DispatchProps {\n  showNotification: (message: string, type: Type, lifeTime?: number | undefined) => void,\n  setLoading: (loading: boolean) => void\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  showNotification,\n  setLoading\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    user: state.user\n  }\n}\n\nenum CalcDateAfter {\n  TWO_WEEKS = Date.now() + 1000 * 60 * 60 * 24 * 14,\n  ONE_MONTH = Date.now() + 1000 * 60 * 60 * 24 * 30\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst UsersForm: React.FC<Props> = (props) => {\n  const [expires, setExpires] = useState<Date | undefined | null>(undefined)\n  \n  return (\n    <Formik\n      initialValues={ {\n        name: props.formValues?.name || '',\n        username: props.formValues?.username || '',\n        password: '',\n        passwordConfirm: '',\n        oldPassword: ''\n      }}\n      enableReinitialize\n      validate={(values) => {\n        const validationResult = UserSchema.validate(values, true)\n        if (!validationResult.error) return {}\n        const errorArray: [IDetails] = validationResult.error?.details.map((detail: IDetails) => { return {\n          ...detail,\n          message: detail.message.includes('fails to match the required pattern')\n          ? '\"name\" has forbidden characters'\n          : detail.message\n        }})\n        return {\n          name: errorArray.find((error) => error.context.key === 'name')?.message,\n          username: errorArray.find((error) => error.context.key === 'username')?.message,\n          password: errorArray.find((error) => error.context.key === 'password')?.message,\n          passwordConfirm: errorArray.find((error) => error.context.key === 'passwordConfirm')?.message,\n          oldPassword: errorArray.find((error) => error.context.key === 'oldPassword')?.message,\n        }\n      }} \n      onSubmit={(values, { setSubmitting, setValues }) => {\n        props.setLoading(true)\n        if (props.newUser) {\n          if (values.password === values.passwordConfirm) {\n            usersService.createUser(props.user, values.username, values.name, values.password, expires).then(response => {\n              setExpires(undefined)\n              props.showNotification(`User ${response.data.name} was created`, Type.SUCCESS, 4)\n              props.reloadUsers()\n              props.closeForm()\n              setValues({\n                name: '',\n                username: '',\n                password: '',\n                passwordConfirm: '',\n                oldPassword: ''\n              })\n              props.setLoading(false)\n            }).catch((error) => props.showNotification(error.response.data.error, Type.ERROR, 5))\n          } else {\n            props.showNotification('Password and password confirmation does not match', Type.WARNING, 4)\n          }\n        } else {\n          const changes = {\n            name: props.formValues && props.formValues.name !== values.name ? values.name : undefined,\n            username: props.formValues && props.formValues.username !== values.username ? values.username : undefined,\n            password: values.oldPassword.length > 8 ? values.oldPassword : undefined,\n            newPassword: values.passwordConfirm.length > 8 ? values.passwordConfirm : undefined,\n            expires: props.formValues && props.formValues.expires && props.formValues.expires !== expires ? expires : undefined\n          }\n          usersService.modifyUser(\n            props.user,\n            props.formValues?.id || '',\n            changes\n          ).then((response) => {\n            props.reloadUsers()\n            props.closeForm()\n            props.showNotification('User modifications updated successfully', Type.SUCCESS, 5)\n            props.setLoading(false)\n          }).catch((error) => {\n            props.showNotification(error.response.data.error, Type.ERROR, 5) \n          })\n        }\n        setSubmitting(false)\n        props.closeForm()\n      }}\n    >\n      {({ isSubmitting, isValid, errors }) => (\n        <Form>\n          {props.newUser ? 'Create new user' : 'Modify user ' + props.formValues?.username + ':'}\n          <p>Full name</p>\n          <Field id='NewUserFullName' key={'namefield'} className='user-form-input' placeholder='Full Name' type='text' name='name' disabled={isSubmitting} />\n          <div key={'nameerrormessage'} className='form-input-error-message'>{errors?.name}</div>\n          <p>Username</p>\n          <Field id='NewUserName' key={'usernamefield'} className='user-form-input' placeholder='Username' type='text' name='username' disabled={isSubmitting} />\n          <div key={'usernameerrormessage'} className='form-input-error-message'>{errors?.username}</div>\n          {props.newUser ? <p>User is valid</p> : <p>User is valid after changes (admin only)</p>}\n          <div>\n            <input type=\"radio\" name=\"expires\" onClick={() => setExpires(new Date(CalcDateAfter.TWO_WEEKS))} /> a fortnight\n            <input type=\"radio\" name=\"expires\" onClick={() => setExpires(new Date(CalcDateAfter.ONE_MONTH))} /> a month\n            <input type=\"radio\" name=\"expires\" onClick={() => setExpires(null)} /> forever\n          </div>\n          {!props.newUser && <p key='olduserparagraph'>Re-enter old password</p>}\n          {!props.newUser && <Field id='OldPassword' key='oldpasswordfield' className='user-form-input' type='password' name='oldPassword' disabled={isSubmitting} />}\n          <div key={'oldpassworderrormessage'} className='form-input-error-message'>{errors?.oldPassword}</div>\n          {props.newUser ? <p>Password for new user</p> : <p>New password</p>}\n          <Field id='NewPassword' key='passwordfield' className='user-form-input' type='password' name='password' disabled={isSubmitting} />\n          <div key={'passworderrormessage'} className='form-input-error-message'>{errors?.password}</div>\n          {props.newUser ? <p>Confirm password</p> : <p>Confirm new password</p>}\n          <Field id='NewPasswordConfirm' key='confirmpasswordfield' className='user-form-input' type='password' name='passwordConfirm' disabled={isSubmitting} />\n          <div key={'passwordconfirmationerrormessage'} className='form-input-error-message'>{errors?.passwordConfirm}</div>\n          <div style={{ textAlign: 'right', marginTop: '10px' }}>\n            <button className='toolbar-button' onClick={(event) => {\n              event.preventDefault()\n              props.closeForm()\n            }}>Cancel</button>\n            <button id='SubmitUserForm' className='toolbar-button' type='submit' disabled={isSubmitting || !isValid}>\n              {props.newUser ? 'Submit' : 'Submit changes'}\n            </button>\n          </div>\n        </Form>)}\n    </Formik>\n  )\n}\n    \nexport default connect(mapStateToProps,mapDispatchToProps)(UsersForm)","import axios, { AxiosResponse } from 'axios'\nconst baseUrl = '/api/login'\n\ninterface loginResponse extends AxiosResponse {\n  data: {\n    token: string,\n    username: string,\n    name: string\n  }\n}\n\nexport interface loginError {\n  status: number,\n  response: {\n    data:{\n      error: string,\n      cooldownEnd?: number\n    }\n  }\n}\n\nconst login = (username:string, password:string) => {\n  const credentials = { 'username':username, 'password':password }\n  const request = axios.post(baseUrl, credentials)\n  return request.then((response: loginResponse) => response.data)\n}\n\nexport default { login }\n","import React, { useState } from 'react'\nimport './Login.css'\nimport useField, { FieldType } from '../hooks/useField'\nimport loginService, { loginError } from '../services/loginService'\nimport { setUser, UserState } from '../reducers/userReducer'\nimport { showNotification, Type } from '../reducers/notificationReducer'\nimport { updateCVs } from '../reducers/cvReducer'\nimport { connect } from 'react-redux'\nimport { setLoading } from '../reducers/loadingReducer'\n\ninterface OwnProps {}\ninterface StateProps {}\ninterface DispatchProps {\n  showNotification: (message: string, type: Type, lifeTime?: number | undefined) => void,\n  setUser: (user: UserState) => void,\n  updateCVs: (user: UserState) => void,\n  setLoading: (loading: boolean) => void\n}\n\n// const mapStateToProps = {}\nconst mapDispatchToProps: DispatchProps = {\n  showNotification,\n  setUser,\n  updateCVs,\n  setLoading\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Login: React.FC<Props> = (props) => {\n\n  const username = useField( FieldType.TEXT )\n  const password = useField( FieldType.PASSWORD )\n  \n  const [remember, setRemember] = useState(false)\n  const [submitLock, setSubmitLock] = useState(false)\n\n  const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\n    event.persist()\n    event.preventDefault()\n\n    props.setLoading(true)\n\n    if (!submitLock) {\n      loginService.login(username.value, password.value)\n        .then(user => {\n          props.setUser(user)\n          remember && window.localStorage.setItem(\n            'loggedUser', JSON.stringify(user)\n          )\n          props.showNotification('Login successful', Type.SUCCESS, 5)\n          props.updateCVs(user)\n        }).catch((error:loginError) => {\n          if (error.response.data.error) {\n            const cooldown = error.response.data.cooldownEnd && error.response.data.cooldownEnd / 1000\n            if (cooldown) {\n              props.showNotification(`${error.response.data.error}`, Type.WARNING, cooldown)\n              setSubmitLock(true)\n              const lock = setTimeout(() => {\n                setSubmitLock(false)\n                clearTimeout(lock)\n                handleLogin(event)\n              }, cooldown * 1000 + 700)\n            } else {\n              props.showNotification(`${error.response.data.error}`, Type.ERROR, 4) \n            }\n          } else {\n            props.showNotification(`No response from the server`, Type.ERROR, 4)\n          }\n        })\n    }\n  }\n\n  return(<div className='Login'>\n    <form onSubmit={handleLogin} className='loginBox'>\n      <div>\n        Username:\n        <input disabled={submitLock} className='login-input' id='username' name='username' {...username}>\n        </input>\n      </div>\n      <div>\n        Password:\n        <input disabled={submitLock} className='login-input' id='password' name='password' {...password}>\n        </input>\n      </div>\n      <div className='rememberme'>\n        Remember me\n        <input\n          id='RememberMeCheckbox'\n          type='checkbox'\n          defaultChecked={remember}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setRemember(!remember)\n          }}\n        />\n      </div>\n      <button id='login' type='submit' disabled={submitLock} className='login-button'>\n        Login\n      </button>\n    </form>\n  </div>)\n}\nexport default connect(null, mapDispatchToProps)(Login)","import React from 'react'\nimport './Footer.css'\nimport { connect } from 'react-redux'\nimport { UserState } from '../reducers/userReducer'\nimport { AppState } from '..'\n\ninterface OwnProps {}\nexport interface StateProps { user?: UserState }\nexport interface DispatchProps {}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    user: state.user\n  }\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Footer: React.FC<Props> = (props) => {\n  const showUserInfo = props.user && props.user.name.length > 2\n\n  if (showUserInfo && props.user) {\n    return (\n      <div className='Footer'>Logged in as {props.user.name}</div>\n    )\n  }\n  return (\n    <div className='Footer'>You are not logged in</div> \n  )\n}\n\nexport default connect(mapStateToProps,null)(Footer)\n","import React from 'react'\nimport { IUser } from '../../services/usersService'\nimport { Link } from 'react-router-dom'\n\ninterface Props {\n    user: IUser,\n    handleUserDelete: () => void\n}\n\nconst UsersRow: React.FC<Props> = (props) => {\n    const { name, username, id, created, expires } = props.user\n\n    return (\n        <tr key={'usertr' + id}>\n            <td><Link id={`LinkTo${username}`} to={`/users/${username}`}>{username}</Link></td>\n            <td>{name}</td>\n            <td>{created.toString().substring(0, 10)} / {expires ? expires.toString().substring(0, 10) : '-never-'}</td>\n            <td>{username === 'rampemus' ? 'Admin' : 'User'}</td>\n            <td>\n                <button id={`Delete${username}`} onClick={() => props.handleUserDelete()}>\n                    <img className='icon' src='delete.svg' width='17px' height='15px' alt='delete' />\n                    Delete\n                </button>\n            </td>\n        </tr>\n    )\n}\n\nexport default UsersRow","import axios, { AxiosResponse } from 'axios'\nimport { getConfigHeader } from '../utils/serviceHelper'\nimport { UserState } from '../reducers/userReducer'\nconst baseUrl = '/api/users'\n\nexport interface IUser {\n  name: string,\n  username: string,\n  id: string,\n  created: Date,\n  expires?: Date,\n  owner?: string,\n  password?: string\n}\n\ninterface getAllUsersResponse extends AxiosResponse {\n  data: IUser[]\n}\n\ninterface createUsersResponse extends AxiosResponse {\n  data: IUser\n}\n\nexport interface usersError {\n  response: {\n    data: {\n      error: string\n    }\n  }\n}\n\nconst getOwner = (id:string, user: UserState) => {\n  const request = axios.post(baseUrl + '/owner', { id }, getConfigHeader(user))\n  return request.then((response: createUsersResponse) => response.data)\n}\n\nconst getAll = (user: UserState) => {\n  const request = axios.get(baseUrl, getConfigHeader(user))\n  return request.then((response: getAllUsersResponse) => response.data)\n}\n\nconst createUser = (user: UserState, username?: string, name?: string, password?: string, expires?: Date | null) => {\n  const data = username || name || password ? { username, name, password, expires } : {}\n  const request = axios.post(`${baseUrl}`, data, getConfigHeader(user))\n  return request.then((response: createUsersResponse) => response)\n}\n\nconst modifyUser = (user: UserState, id:string, changes: any) => {\n  const request = axios.put(baseUrl, { changes, id }, getConfigHeader(user))\n  return request.then((response: createUsersResponse) => response)\n}\n\nconst deleteUser = (id:string, user: UserState) => {\n  const request = axios.delete(`${baseUrl}/${id}`, getConfigHeader(user))\n  return request.then( response => response)\n}\n\nexport default { getAll, createUser, deleteUser, getOwner, modifyUser }\n","import React from 'react'\nimport './Toolbar.css'\n\nconst Toolbar: React.FC = (props) => {\n  return(\n    <div className='toolbar'>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Toolbar\n","const Joi = require('@hapi/joi')\n\nexport interface IDetails {\n  message: string,\n  path: string[],\n  type: string,\n  context: {\n    limit?: number,\n    value: string,\n    label: string,\n    key: string,\n    encoding: any\n  }\n}\n\nexport interface IJoiError {\n  isJoi: boolean,\n  details: IDetails[],\n  context: {\n    name: string | undefined,\n    regex: RegExp,\n    value: any,\n    label: string,\n    key: string\n  },\n  _object: {\n    username: string,\n    password: string,\n  }\n}\n\nexport interface IFormattedJoiError {\n  message: string,\n  field: string,\n  id: string\n}\n\nconst contentLength = 1000\nconst contentString = Joi.string().regex(/^[a-zA-Z0-9àáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.()!?\"#€$%&@£§|{}'-\\\\$\\n’`´]*$/).max(contentLength).empty('')\nconst nameLenth = 300\nconst nameString = Joi.string().regex(/^[a-zA-Z0-9àáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.()!\"#€$%&@£§|{}'-’`´]*$/).max(nameLenth)\nconst username = Joi.string().alphanum().min(4).max(30)\nconst password = Joi.string().regex(/^[a-zA-Z0-9!#%&]*$/).min(8).max(64)\nconst name = Joi.string().regex(/^[a-zA-Z0-9àáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]*$/).max(100)\n\nexport const CVSchema = Joi.object().keys({\n  id: Joi.any(),\n  github: Joi.string().uri().empty(''),\n  name: nameString,\n  techlist: contentString.empty(''),\n  contact: Joi.any(),\n  profile: Joi.any(),\n  projects: Joi.any(),\n  reference: Joi.any(),\n  experience: Joi.any(),\n  education: Joi.any(),\n  communication: Joi.any(),\n  skills: Joi.any(),\n  info: Joi.any(),\n  attachments: Joi.any(),\n})\n\nexport const InfoSchema = Joi.object().keys({\n  id: Joi.any(),\n  content: contentString,\n  name: nameString,\n})\n\nexport const CommunicationSchema = Joi.object().keys({\n  id: Joi.any(), \n  content: contentString,\n  languages: Joi.array().items(Joi.object()),\n  name: nameString,\n})\n\nexport const ExperienceSchema = Joi.object().keys({\n  id: Joi.any(), \n  description: contentString,\n  name: nameString,\n  timeFrame: Joi.object()\n})\n\nexport const ProfileSchema = Joi.object().keys({\n  id: Joi.any(), \n  content: contentString,\n  name: nameString,\n})\n\nexport const ProjectSchema = Joi.object().keys({\n  id: Joi.any(), \n  description: contentString,\n  githubUrl: Joi.string().uri().empty(''),\n  name: nameString,\n  showcaseUrl: Joi.string().uri().empty(''),\n  thumbnailUrl: Joi.string().uri().empty('')\n})\n\nexport const ContactSchema = Joi.object().keys({\n  id: Joi.any(), \n  address: nameString.empty(''),\n  company: nameString.empty(''),\n  email: Joi.string().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net', 'fi'] } }),\n  firstname: nameString,\n  lastname: nameString,\n  linkedin: Joi.string().uri().empty(''),\n  phone: nameString.empty(''), // TODO: create phone regex\n  phoneAvailable: nameString.empty(''),\n  pictureUrl: Joi.string().uri().empty(''),\n})\n\nexport const UserSchema = Joi.object().keys({\n  expires: Joi.any(),\n  name: name.empty(''),\n  password: password.empty(''),\n  oldPassword: password.empty(''),\n  passwordConfirm: password.empty(''),\n  username: username.empty(''),\n})","import React, { useState, useEffect } from 'react'\n\ninterface OwnProps {\n  initLevel: string,\n  handleChange(newLevel: string): void,\n  id: string\n}\n\nexport enum ILevel {\n  Elementary = 'Elementary',\n  EveryDay = 'Every day proficiency',\n  Working = 'Working proficiency',\n  Advanced = 'Advanced',\n  Professional = 'Professional',\n  Native = 'Native speaker'\n}\n\nconst levels = [ILevel.Elementary, ILevel.EveryDay, ILevel.Working, ILevel.Advanced, ILevel.Professional, ILevel.Native]\n\nconst MyCVFormLanguageLevelSelector: React.FC<OwnProps> = (props) => {\n\n  const [level, setLevel] = useState(props.initLevel)\n\n  useEffect(() => {\n    setLevel(props.initLevel)\n  }, [props.initLevel])\n\n  const handleLevelChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault()\n\n    setLevel(event.target.value)\n    props.handleChange(event.target.value.toString())\n  }\n\n  return(\n    <div>\n      <select id={props.id} onChange={handleLevelChange} value={level} className='language-level-selector'>\n        {levels.map(level => <option key={level} value={level}>{level}</option>)}\n      </select>\n    </div>\n  )\n}\n\nexport default MyCVFormLanguageLevelSelector\n","import React, { useState, useEffect } from 'react'\nimport Toolbar from '../Toolbar'\nimport usersService, { IUser } from '../../services/usersService'\nimport { AppState } from '../..'\nimport { connect } from 'react-redux'\nimport { UserState } from '../../reducers/userReducer'\nimport UsersForm from './UsersForm'\n\ninterface OwnProps {\n  user?: IUser,\n  updateUser: Function\n}\nexport interface StateProps {\n  userForHeaders: UserState\n}\nexport interface DispatchProps {}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n    return {\n        userForHeaders: state.user\n    }\n}\n\n// const mapDispatchToProps: DispatchProps = {\n//     functionName\n// }\n\ntype Props = OwnProps & StateProps & DispatchProps\n\n\nconst User: React.FC<Props> = (props) => {\n  const user = props.user\n\n  const [owner, setOwner] = useState<IUser | null>(null)\n  const [showEditUser, setShowEditUser] = useState(false)\n\n  useEffect(() => {\n    if (user && user.id) {\n      usersService.getOwner(user.id, props.userForHeaders).then(response => {\n        setOwner(response)\n      })\n    }\n    // .catch((error: usersError) => {\n    // })\n    // eslint-disable-next-line\n  }, [user])\n\n  if (!user) {\n    return <div>User not found</div>\n  } else {\n    const timeleftMillisecs:number = user.expires ? (new Date(user.expires).valueOf() - Date.now().valueOf()) : 0\n    const expires = user.expires\n    ? (timeleftMillisecs > 0\n      ? 'User expires after '\n      + Math.floor(timeleftMillisecs / (1000 * 60 * 60 * 24))\n      + ' days '\n      + Math.floor(timeleftMillisecs % (1000 * 60 * 60 * 24) / (1000 * 60 * 60))\n      + ' hours'\n      : 'User is expired')\n    : 'User never expires'\n\n    const created = owner ? new Date(owner.created) : new Date()\n\n    return(\n      <div>\n        <Toolbar>\n          <div>\n            <button disabled className='toolbar-button'>add random user</button>\n            <button disabled className='toolbar-button'>add user...</button>\n            <button id='EditUser' className='toolbar-button' onClick={() => {\n              setShowEditUser(!showEditUser)\n            }}>\n              edit user...\n            </button>\n            <div className='formContainer' style={{ display: showEditUser ? 'block' : 'none' }}>\n              <UsersForm\n                newUser={false}\n                formValues={{\n                  id: props.user ? props.user.id : '',\n                  name: props.user ? props.user.name : '',\n                  username: props.user ? props.user.username : '',\n                  expires: props.user && props.user.expires ? new Date(props.user.expires) : undefined\n                }}\n                closeForm={() => setShowEditUser(false)}\n                reloadUsers={() => {props.updateUser()}}\n              />\n            </div>\n          </div>\n        </Toolbar>\n        <h1>{user.username}</h1>\n        <h3>Information</h3>\n        <p>{user.name}</p>\n        <p>{owner\n          ? 'User created by '\n            + owner.username + ' '\n            + created.getFullYear() + '-'\n            + created.getMonth() + '-'\n            + created.getDay() \n          : 'User has no owner'}</p>\n        <p>{expires}</p>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, null)(User)\n","import React, { useState, useEffect } from 'react'\nimport './Users.css'\nimport UsersRow from './UsersRow'\nimport usersService, { IUser, usersError } from '../../services/usersService'\nimport { showNotification, Type } from '../../reducers/notificationReducer'\nimport { connect } from 'react-redux'\nimport Toolbar from '../Toolbar'\nimport UsersForm from './UsersForm'\nimport { UserState } from '../../reducers/userReducer'\nimport { AppState } from '../..'\nimport { useLocation, Route } from 'react-router-dom'\nimport User from './User'\nimport { setLoading } from '../../reducers/loadingReducer'\n\ninterface OwnProps { }\nexport interface StateProps {\n  user: UserState\n}\nexport interface DispatchProps {\n  showNotification: (message: string, type: Type, lifeTime?: number | undefined) => void,\n  setLoading: (loading: boolean) => void\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  showNotification,\n  setLoading\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    user: state.user\n  }\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Users: React.FC<Props> = (props) => {\n  const [users, setUsers] = useState<IUser[]>([])\n\n  useEffect(()=>{\n    updateUsers()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const updateUsers = () => {\n    usersService.getAll(props.user).then(response => {\n      setUsers(response)\n      props.setLoading(false)\n    }).catch((error: usersError) => {\n      props.showNotification('Request for retrieving users was denied. ' + error.response.data.error, Type.ERROR, 4)\n    })\n  }\n\n  const handleUserDelete = (id: string) => {\n    props.setLoading(true)\n    const user:IUser | undefined = users.find(user => user.id === id)\n    if ( user ) {\n      usersService.deleteUser(id, props.user).then( response => {\n        setUsers(users.filter(user => user.id !== id))\n        props.showNotification(`User ${user.name} was deleted`, Type.SUCCESS, 3)\n        props.setLoading(false)\n      }).catch((error) => props.showNotification(error.response.data.error, Type.ERROR, 5))\n    } else {\n      props.showNotification('User does not exist', Type.ERROR, 5)\n    }\n  }\n\n  const handleAddRandomUser = () => {\n    props.setLoading(true)\n    usersService.createUser(props.user).then(\n      response => {\n        props.showNotification(\n          `User ${response.data.name} created. Username/password is ${response.data.username}/${response.data.password}`,\n          Type.SUCCESS\n        )\n        updateUsers()\n      }\n    ).catch((error) => props.showNotification(error.response.data.error, Type.ERROR, 5))\n  }\n\n  const [showAddUser, setShowAddUser] = useState(false) \n  const location = useLocation()\n  const userSelected = location.pathname.includes('/users') && location.pathname.length > '/users/'.length ? true : false\n\n  if (userSelected) {\n    return <Route exact path=\"/users/:username\" render={({ match }) => \n      <User\n        user={users.find(user => user.username === match.params.username)}\n        userForHeaders={props.user}\n        updateUser={()=>updateUsers()}\n      />\n    }/>\n  }\n  return(\n    <div>\n      <Toolbar>\n        <div>\n          <button id='AddRandomUser' className='toolbar-button' onClick={()=>handleAddRandomUser()}>add random user</button>\n          <button id='AddUser' className='toolbar-button' onClick={()=>{\n            setShowAddUser(!showAddUser)\n          }}>add user...</button>\n          <button disabled className='toolbar-button'>edit user...</button>\n        </div>\n        <div className='formContainer' style={{ display: showAddUser ? 'block' : 'none' }}>\n          <UsersForm newUser closeForm={()=>setShowAddUser(false)} reloadUsers={()=>updateUsers()}/>\n        </div>\n      </Toolbar>\n      <h1>Users</h1>\n      <table>\n        <tbody>\n          <tr>\n            <th>Username</th>\n            <th>Name</th>\n            <th>Created/Expires</th>\n            <th>Status</th>\n            <th></th>\n          </tr>\n          {users.map(user => (\n            <UsersRow\n              key={'usersrow' + user.id}\n              user={user}\n              handleUserDelete={()=>handleUserDelete(user.id)}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Users)\n\n","import React from 'react'\n\nconst About: React.FC = (props) => {\n\n  return(\n    <div>\n      <h1>About this site</h1>\n      <p>This single-page-app will show my CV information and also deliver a simple graphical UI for creating and modifying CV data.</p>\n      <p>Almost everything in this site is crafted from scratch (all the way from user authentication to datePicker-components). \n        To make things more simple I have added ready made libraries to help organize things. \n        Biggest impact was done by Formik to make forms on the page to be a bit less painful.</p>\n      <p>Please take a look of my source code in my <a href='https://github.com/rampemus/cvapp'>github</a></p>\n      <h3>Version 1.1 - 2020/5/21</h3>\n      <p>Firefox bugs fixed and added css to view in mobile devices.</p>\n      <h3>Version 1.0 - 2020/4/12</h3>\n      <p>Bugs fixed, tests added and deployment automation added.</p>\n      <h3>Version 0.4 - 2020/3/6</h3>\n      <p>Validation added and security measures added.</p>\n      <h3>Version 0.3 - 2020/3/1</h3>\n      <p>Notifications and animations added and login logic changed.</p>\n      <h3>Version 0.2 - 2020/2/26</h3>\n      <p>Fixed most of bugs away and bunch tests created for <a href='https://github.com/rampemus/cvapp/tree/master/backend'>backend</a>.</p>\n      <h3>Version 0.1 - 2020/2/5</h3>\n      <p>For now, some of the code is not yet nicely organized but things will get better.\n        Other bigger changes will be that the tests will be implemented in the future for creating a automated pipeline.\n        Many changes will be done for the deployment and for the backend. Therefore, I wish you visit my github for changes.</p>\n    </div>\n  )\n}\n\nexport default About\n","import React from 'react'\n\ninterface DeleteProps {\n  isSubmitting: boolean,\n  handleDelete: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void,\n  id: string\n}\n\nconst DeleteButton: React.FC<DeleteProps> = (props) => {\n  const { id, isSubmitting } = props\n  return(\n    <button id={id} className='form-delete-button form-button' type='submit' onClick={props.handleDelete} disabled={isSubmitting}>\n      Delete\n    </button>\n  )\n}\n\ninterface ClearProps {\n  isSubmitting: boolean,\n  values: any,\n  clearActionValues: any,\n  setValues(values: any): void,\n  id: string\n}\n\nconst ClearButton: React.FC<ClearProps> = (props) => {\n  const { id, isSubmitting, values, clearActionValues, setValues } = props\n  return(\n    <button\n      id={id}\n      className='form-clear-button form-button'\n      type='submit'\n      disabled={isSubmitting}\n      onClick={(event) => {\n        event.preventDefault()\n        setValues({ ...values, ...clearActionValues })\n      }}\n    >\n      Clear\n    </button>\n  )\n}\n\ninterface CancelProps {\n  isSubmitting: boolean,\n  setValues(values: any): void,\n  formValues: any,\n  id: string\n}\n\nconst CancelButton: React.FC<CancelProps> = (props) => {\n  const { id, isSubmitting, setValues, formValues } = props\n  return(\n    <button\n      id={id}\n      className='form-cancel-button form-button'\n      type='submit'\n      disabled={isSubmitting}\n      onClick={(event) => {\n        event.preventDefault()\n        setValues({ ...formValues })\n      }}\n    >\n      Cancel\n    </button>\n  )\n}\n\ninterface SaveProps {\n  isSubmitting: boolean,\n  id: string\n}\n\nconst SaveButton: React.FC<SaveProps> = (props) => {\n  const { id, isSubmitting } = props\n  return(\n    <button\n      id={id}\n      className='form-save-button form-button'\n      type='submit' disabled={isSubmitting}\n    >\n      Save\n    </button>\n  )\n}\n\nexport { DeleteButton, ClearButton, CancelButton, SaveButton}\n","import React, { useState, useEffect } from 'react'\n\ninterface OwnProps {\n  date: Date,\n  handleChange(newDate:Date): void,\n  id: string\n}\n\nconst numbers = (from:number, to:number) => {\n  let result = []\n  for ( let i = 0; i < to-from; i++) {\n    result.push(from+i)\n  }\n  return result\n}\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nconst MyCVFormDateSelector: React.FC<OwnProps> = (props) => {\n\n  const dateProp = new Date(props.date)\n  const id = props.id\n\n  const [year, setYear] = useState(dateProp.getFullYear())\n  const [month, setMonth] = useState(dateProp.getMonth())\n  const [day, setDay] = useState(dateProp.getDate())\n  const [lastDayOfTheMonth, setLastDayOfTheMonth] = useState(31)\n\n  useEffect(()=>{\n    setLastDayOfTheMonth(new Date(year, month + 1, 0).getDate())\n  },[year,month])\n\n  const handleYearChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault()\n    const newYear = parseInt(event.target.value)\n    setYear(newYear)\n    props.handleChange(new Date(newYear,month,day))\n  }\n\n  const handleMonthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault()\n    const newMonth = parseInt(event.target.value)\n    setMonth(newMonth)\n    props.handleChange(new Date(year, newMonth, day))\n  }\n\n  const handleDayChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault()\n    const newDay = parseInt(event.target.value)\n    setDay(newDay)\n    props.handleChange(new Date(year, month, newDay))\n  }\n\n  return(\n    <div>\n      <select id={'Year' + id} onChange={handleYearChange} value={year} className='year-selector'>\n        {numbers(2000,2030).map((yearNumber) => {\n          return (<option key={yearNumber} value={yearNumber}>{yearNumber}</option>)\n        })}\n      </select>\n      <select id={'Month' + id} onChange={handleMonthChange} value={month} className='month-selector'>\n        {numbers(0, 12).map((monthNumber) => {\n          return (<option key={monthNumber} value={monthNumber}>{months[monthNumber]}</option>)\n        })}\n      </select>\n      <select id={'Day' + id} onChange={handleDayChange} value={day} className='day-selector'>\n        {numbers(1, lastDayOfTheMonth+1).map((dayNumber) => {\n          return (<option key={dayNumber} value={dayNumber}>{dayNumber}</option>)\n        })}\n      </select> \n    </div>\n  )\n}\n\nexport default MyCVFormDateSelector\n","import React from 'react'\nimport { Formik, Form, Field, FieldArray } from 'formik'\nimport { DeleteButton, ClearButton, CancelButton, SaveButton } from './MyCVFormPanelButtons'\nimport cvService, { ServiceType } from '../../services/cvService'\nimport { useLocation } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { updateCVs, addEmptyCVObject, removeTempCVObject, CVAction } from '../../reducers/cvReducer'\nimport MyCVFormDateSelector from './MyCVFormDateSelector'\nimport MyCVFormLanguageLevelSelector, { ILevel } from './MyCVFormLanguageLevelSelector'\nimport { UserState } from '../../reducers/userReducer'\nimport { AppState } from '../..'\nimport { \n  ExperienceSchema,\n  IDetails,\n  CommunicationSchema,\n  InfoSchema,\n  ProjectSchema,\n  ContactSchema,\n  ProfileSchema,\n  IFormattedJoiError,\n  CVSchema\n} from '../../utils/validators'\n\ninterface OwnProps {\n  formValues?: Object,\n  field: string,\n  serviceType: ServiceType,\n  children?: any,\n}\nexport interface StateProps {\n  user: UserState\n}\nexport interface DispatchProps {\n  updateCVs: (user: UserState) => any,\n  addEmptyCVObject: (id: string, field: string) => CVAction,\n  removeTempCVObject: (id: string, field: string, objectId: string) => CVAction\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    user: state.user\n  }\n}\n\nconst stringToArray = (data:string) => {\n  return data.split('\\n')\n}\nconst arrayToString = (data:string[]) => {\n  return data.join('\\n')\n}\nconst renderChildren = (id: string, isSubmitting: boolean, errors: IFormattedJoiError | any, values: any, setValues: Function, field:string) => {\n  if (field === 'experience' || field === 'education') return([\n    <div key={id + 'namelabel'} className='form-label'>Name</div>,\n    <Field id={field + 'Name' + id} key={id + 'namefield'} className='form-input' placeholder='Name' type='text' name='name' disabled={isSubmitting} />,\n    <div key={id + 'nameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.name : ''}</div>,\n    <div key={id + 'durationlabel'} className='form-label'>Time duration</div>,\n    <div key={id + 'timeframecontainer'} className='timeFrameContainer'>\n      <div>\n        <MyCVFormDateSelector id={'StartTime'+id} date={values.timeFrame.startDate} handleChange={(newDate) => {\n          setValues({\n            ...values, timeFrame: {\n              startDate: newDate,\n              endDate: values.timeFrame.endDate,\n            }\n          })\n        }} />\n      </div>\n      <div className='time-divider'>-</div>\n      <div>\n        <MyCVFormDateSelector id={'EndTime' + id} date={values.timeFrame.endDate} handleChange={(newDate) => {\n          setValues({\n            ...values, timeFrame: {\n              startDate: values.timeFrame.startDate,\n              endDate: newDate,\n            }\n          })\n        }} />\n      </div>\n    </div>,\n    <div key={id + 'timeframeerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.timeFrame : ''}</div>,\n    <div key={id + 'descriptionlabel'} className='form-label'>Description</div>,\n    <Field id={field + 'Descritpion' + id} key={id + 'descriptionfield'} className='form-textarea' placeholder='Content' as='textarea' type='text' name='description' disabled={isSubmitting} />,\n    <div key={id + 'descriptionerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.description : ''}</div> \n  ])\n  if (field === 'info' || field === 'attachments' || field === 'skills') return ([\n    <div key={id + 'namelabel'} className='form-label'>Name</div>,\n    <Field id={field + 'Name' + id} key={id + 'namefield'} className='form-input' placeholder='Name' type='text' name='name' />,\n    <div key={id + 'nameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.name : ''}</div>,\n    <div key={id + 'contentlabel'}className='form-label'>Content</div>,\n    <Field id={field + 'Content' + id} key={id + 'contentfield'} className='form-textarea' placeholder='Content' as='textarea' type='text' name='content' />,\n    <div key={id + 'contenterrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.content : ''}</div>,\n  ])\n  if (field === 'projects') return ( [\n    <div key={id + 'namelabel'} className='form-label'>Name</div>,\n    <Field id={field + 'Name' + id} key={id + 'namefield'} className='form-input' placeholder='Name' type='text' name='name' />,\n    <div key={id + 'nameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.name : ''}</div>,\n    <div key={id + 'descriptionlabel'} className='form-label'>Description</div>,\n    <Field id={field + 'Description' + id} key={id + 'descriptiontextarea'} className='form-textarea' placeholder='Description' as='textarea' type='text' name='description' />,\n    <div key={id + 'descriptionerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.description : ''}</div>,\n    <div key={id + 'githublabel'} className='form-label'>Github</div>, \n    <Field id={field + 'GithubUrl' + id} key={id + 'githubinput'} className='form-input' placeholder='Github url' type='text' name='githubUrl' />,\n    <div key={id + 'githuberrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.githubUrl : ''}</div>,\n    <div key={id + 'showcaselabel'} className='form-label'>Showcase</div>,\n    <Field id={field + 'ShowcaseUrl' + id} key={id + 'showcaseurlfield'} className='form-input' placeholder='Showcase url' type='text' name='showcaseUrl' />,\n    <div key={id + 'showcaseerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.showcaseUrl : ''}</div>,\n    <div key={id + 'thumbnaillabel'} className='form-label'>Thumbnail</div>,\n    <Field id={field + 'ThumbnailUrl' + id} key={id + 'thumbnailurlfield'} className='form-input' placeholder='Thumbnail url' type='text' name='thumbnailUrl' />,\n    <div key={id + 'thumbnailurlerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.thumbnailUrl : ''}</div>,\n  ])\n  if (field === 'contact' || field === 'reference') return ([\n    <div key={id + 'firstnamelabel'} className='form-label'>Firstname</div>,\n    <Field id={field + 'Firstname' + id} key={id + 'firstnameinput'} className='form-input' placeholder='Firstname' type='text' name='firstname' />,\n    <div key={id + 'firstnameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.firstname : ''}</div>,\n    <div key={id + 'lastnamelabel'} className='form-label'>Lastname</div>,\n    <Field id={field + 'Lastname' + id} key={id + 'lastnamefield'} className='form-input' placeholder='LastName' type='text' name='lastname' />,\n    <div key={id + 'lastnameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.lastname : ''}</div>,\n    <div key={id + 'emaillabel'} className='form-label'>E-mail</div>,\n    <Field id={field + 'Email' + id} key={id + 'emailfield'} className='form-input' placeholder='mailto@mail.com' type='text' name='email' />,\n    <div key={id + 'emailerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.email : ''}</div>,\n    <div key={id + 'linkedinlabel'} className='form-label'>Linkedin</div>,\n    <Field id={field + 'Linkedin' + id} key={id + 'linkedinfield'} className='form-input' placeholder='www.linkedin.com/in/xxxxx-xxxxxx-XXXXXXXXX' type='text' name='linkedin' />,\n    <div key={id + 'linkedinerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.linkedin : ''}</div>,\n    <div key={id + 'phonelabel'} className='form-label'>Phone</div>,\n    <Field id={field + 'Phone' + id} key={id + 'phonefield'} className='form-input' placeholder='+358000000000' type='text' name='phone' />,\n    <div key={id + 'phoneerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.phone : ''}</div>,\n    <div key={id + 'availablelabel'} className='form-label'>Available</div>,\n    <Field id={field + 'PhoneAvailable' + id} key={id + 'availablefield'} className='form-input' placeholder='Available during 9 am -  4 pm' type='text' name='phoneAvailable' />,\n    <div key={id + 'availableerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.phoneAvailable : ''}</div>,\n    <div key={id + 'addresslabel'} className='form-label'>Address</div>,\n    <Field id={field + 'Address' + id} key={id + 'addressfield'} className='form-input' placeholder='Streetname 1 A 1, 00100 Cityname' type='text' name='address' />,\n    <div key={id + 'addresserrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.address : ''}</div>,\n    <div key={id + 'companylabel'} className='form-label'>Company</div>,\n    <Field id={field + 'Company' + id} key={id + 'companyfield'} className='form-input' placeholder='Company name' type='text' name='company' />,\n    <div key={id + 'companyerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.company : ''}</div>,\n    <div key={id + 'picturelabel'} className='form-label'>Picture</div>,\n    <Field id={field + 'PictureUrl' + id} key={id + 'picturefield'} className='form-input' placeholder='Picture Url' type='text' name='pictureUrl' />,\n    <div key={id + 'pictureerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.pictureUrl : ''}</div>,\n  ])\n  if (field === 'profile') return ([\n    <div key={id + 'namelabel'} className='form-label'>Name</div>,\n    <Field id={field + 'Name' + id} key={id + 'namefield'} className='form-input' placeholder='Name' type='text' name='name' />,\n    <div key={id + 'nameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.name : ''}</div>,\n    <div key={id + 'contentlabel'} className='form-label'>Content</div>,\n    <Field id={field + 'Content' + id} key={id + 'contentfield'} className='form-textarea' placeholder='Content' as='textarea' type='text' name='content' />,\n    <div key={id + 'contenterrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.content : ''}</div>,\n  ])\n  if (field === 'communication') return ([\n    <div key={id + 'namelabel'}  className='form-label'>Name</div>,\n    <Field id={field + 'Name' + id} key={id + 'namefield'}className='form-input' placeholder='Name' type='text' name='name' disabled={isSubmitting} />,\n    <div key={id + 'nameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.name : ''}</div>,\n    <div key={id + 'languagesfield'} className='form-label language-label'>Languages</div>,\n    <FieldArray key={id + 'languagesfieldarray'} name=\"languages\" render={() => (\n      <div className='language-panel' key={values.id + 'languagepanel'}>\n        {values.languages && values.languages.map((language: any, index: number) => {\n          return (<div className='language-pair' key={index + 'language-pair'}>\n            <Field id={'LanguageNameField' + id + index} className='form-input' name={`languages.${index}.language`} placeholder='Language name' />\n            <MyCVFormLanguageLevelSelector\n              id={'LanguageLevelSelector' + id + index}\n              initLevel={language.level}\n              handleChange={(newLevel) => {\n                const newValues = {\n                  ...values,\n                  languages: values.languages.map((entry: { language: string, level: string }) =>\n                    entry.language === language.language ? { language: entry.language, level: newLevel } : entry)\n                }\n                setValues(newValues)\n              }\n            }/>\n            <button className='form-button' onClick={(event) => {\n              event.preventDefault()\n              const newValues = {\n                ...values,\n                languages: values.languages.filter((entry: { language: string, level: string }) =>\n                  entry.language !== language.language)\n              }\n              setValues(newValues)\n            }}>delete</button>\n          </div>)\n        })}\n        <button\n          id={'AddLanguage' + id}\n          className='add-language-button form-button'\n          disabled={isSubmitting}\n          onClick={(event) => {\n            event.preventDefault()\n            const newValues = {\n              ...values,\n              languages: values.languages.concat({ language: '', level: ILevel.Elementary })\n            }\n            setValues(newValues)\n          }}\n        >\n        add language\n        </button>\n      </div>\n    )} />,\n    <div key={id + 'languageerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.languages : ''}</div>,\n    <div key={id + 'contentlabel'} className='form-label'>Content</div>,\n    <Field id={field + 'Content' + id} key={id + 'contentfield'} className='form-textarea' placeholder='Content' as='textarea' type='text' name='content' disabled={isSubmitting} />,\n    <div key={id + 'contenterrormessage'} className='form-input-error-message'>{errors.id === id \n      ? errors.content : ''}</div>\n  ])\n  return([\n    <div key={id + 'namelabel'} className='form-label'>Name</div>,\n    <Field id={field + 'Name' + id} key={id + 'namefield'} className='form-input' placeholder='CV name' type='text' name='name' />,\n    <div key={id + 'nameerrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.name : ''}</div>,\n    <div key={id + 'githublabel'} className='form-label'>Github</div>,\n    <Field id={field + 'Github' + id} key={id + 'githubfield'} className='form-input' placeholder='Github url' type='text' name='github' />,\n    <div key={id + 'githuberrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.github : ''}</div>,\n    <div key={id + 'techlistlabel'} className='form-label'>Techlist</div>,\n    <Field id={field + 'Techlist' + id} key={id + 'techlistfield'} className='form-input' placeholder='Java, CSS, Python, ...' type='text' name='techlist' />,\n    <div key={id + 'techlisterrormessage'} className='form-input-error-message'>{errors.id === id\n      ? errors.techlist : ''}</div>,\n  ])\n  \n}\n\nconst mapDispatchToProps: DispatchProps = {\n  updateCVs, addEmptyCVObject, removeTempCVObject\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst MyCVFormPanel: React.FC<Props> = (props) => {\n\n  const formValues = props.formValues ? Object.fromEntries(Object.entries(props.formValues).map(([key, value]) => [key, value ? value : ''])) : null\n  \n  const showPanelId = false\n\n  const serviceType = props.serviceType\n  const location = useLocation()\n  const field = props.field\n  \n  if (formValues) {\n    const clearActionValues = props.formValues\n    ? Object.fromEntries(Object.entries(props.formValues).map(([key, value]) => key === 'id' ? [key, value] : [key, ''])) \n    : null\n    \n    return(\n      <Formik\n        initialValues={Object.fromEntries(\n          Object.entries(formValues)\n            .map(([key, value]) => key === 'content' ? [key, arrayToString(value)] : [key, value])\n        )}\n        enableReinitialize\n        validate={(values) => {\n          let validationResult = null\n          switch(field) {\n            case 'info': { \n              validationResult = InfoSchema.validate(values) \n              break \n            }\n            case 'projects': {\n              validationResult = ProjectSchema.validate(values) \n              break\n            }\n            case 'attachments': {\n              validationResult = InfoSchema.validate(values)\n              break\n            }\n            case 'reference': {\n              validationResult = ContactSchema.validate(values)\n              break\n            }\n            case 'skills': {\n              validationResult = InfoSchema.validate(values)\n              break\n            }\n            case 'contact': {\n              validationResult = ContactSchema.validate(values)\n              break\n            }\n            case 'profile': {\n              validationResult = ProfileSchema.validate(values)\n              break\n            }\n            case 'communication': {\n              validationResult = CommunicationSchema.validate(values)\n              break\n            }\n            case 'experience': {\n              validationResult = ExperienceSchema.validate(values)\n              break\n            }\n            case 'education': {\n              validationResult = ExperienceSchema.validate(values)\n              break\n            }\n            default: {\n              validationResult = CVSchema.validate(values)\n              break\n            }\n          }\n          const errorArray: [IDetails] = validationResult?.error?.details\n          console.log('errorArray before if', errorArray)\n          if (errorArray && errorArray.length > 0) {\n            const key = errorArray[0]?.context?.key\n            return {\n              [key]: errorArray[0].message.includes('fails to match the required pattern')\n                ? '\"' + errorArray[0].context.key + '\" has forbidden characters'\n                : errorArray[0].message,\n              id: formValues.id\n            }\n          }\n          return {}\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          if ( values.id.includes('temp')) {\n            const path = location.pathname\n            const id = path.substring('/myCV/'.length)\n            const newValues = Object.fromEntries(\n              Object.entries(values)\n                .filter(([key, value]) => formValues[key] !== value)\n                .map(([key, value]) => key === 'content' ? [key, stringToArray(value)] : [key, value])\n            )\n            cvService.createObject(serviceType, newValues, id, props.user, field).then(response => {\n              props.updateCVs(props.user)\n              // setSubmitting(false)\n            })\n          } else {\n            const changes = Object.fromEntries(\n              Object.entries(values)\n                .filter(([key, value]) => formValues[key] !== value)\n                .map(([key, value]) => key === 'content' ? [key,stringToArray(value)] : [key, value])\n            )\n            cvService.modifyObject(serviceType, values.id, changes, props.user).then(response => {\n              props.updateCVs(props.user)\n              setSubmitting(false)\n            })\n          }\n        }}\n        key={formValues.id + field }\n      >\n        {({ isSubmitting, isValid, errors, values, setValues }) => (\n          <Form className='form-component'>\n            {showPanelId && values.id}\n\n            {renderChildren(formValues.id, isSubmitting, errors, values, setValues, props.field)}\n\n            <DeleteButton id={field + 'Delete' + formValues.id} isSubmitting={isSubmitting || field === 'contact' || field === ''} handleDelete={(event:any)=>{\n              event.preventDefault()\n              if ( values.id.includes('temp') ) {\n                const path = location.pathname\n                const CVid = path.substring('/myCV/'.length)\n                props.removeTempCVObject(CVid, field, values.id)\n              } else {\n                cvService.deleteObject(serviceType, values.id, props.user)\n                props.updateCVs(props.user)\n              }\n            }}/>\n            <ClearButton id={field + 'Clear' + formValues.id} isSubmitting={isSubmitting} values={values} clearActionValues={clearActionValues} setValues={setValues}/>\n            <CancelButton id={field + 'Cancel' + formValues.id} isSubmitting={isSubmitting} setValues={setValues} formValues={formValues}/>\n            <SaveButton id={field + 'Save' + formValues.id} isSubmitting={isSubmitting || !isValid}/>\n          </Form>\n        )}\n      </Formik>\n    )\n  } else { return (\n    <div\n      className='form-component-empty'\n      key={props.field+'-empty'}\n      onClick={()=>{\n        const path = location.pathname\n        const CVid = path.substring('/myCV/'.length)\n        props.addEmptyCVObject(CVid, field)\n      }}\n    >\n      <img id={props.field + 'Add'} src='plus.svg' width='100px' height='100px' alt='add' />\n    </div>\n  )}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCVFormPanel)\n","import React from 'react'\nimport { ICV, IProfile, ICommunication, IInfo, IContact, IProject, IExperience } from '../../services/cvService'\nimport FormPanel from './MyCVFormPanel'\nimport { ServiceType } from '../../services/cvService'\n\ninterface OwnProps {\n  cv: ICV | undefined\n}\n\nconst renderProfileForm = (profile:IProfile, field: string) => (\n  <FormPanel\n    formValues={{\n      id: profile.id,\n      name: profile.name,\n      content: profile.content,\n    }}\n    serviceType={ServiceType.PROFILE}\n    field={field}\n    key={profile.id}\n  />\n)\n\nconst renderCommunicationForm = (communication:ICommunication, field: string) => (\n<FormPanel\n  formValues={{\n    id: communication.id,\n    name: communication.name,\n    content: communication.content,\n    languages: communication.languages\n  }}\n  field={field}\n  serviceType={ServiceType.COMMUNICATION}\n  key={communication.id}\n  />\n)\n      \nconst renderInfoForm = (info: IInfo, field: string) => (\n  <FormPanel\n    formValues={{\n      id: info.id,\n      name: info.name,\n      content: info.content\n    }}\n    serviceType={ServiceType.INFO}\n    field={field}\n    key={info.id}\n  />\n)\n\nconst renderContactForm = (contact: IContact, field: string) => (\n  <FormPanel\n    formValues={{\n      id: contact.id,\n      address: contact.address,\n      company: contact.company,\n      email: contact.email,\n      firstname: contact.firstname,\n      lastname: contact.lastname,\n      linkedin: contact.linkedin,\n      phone: contact.phone,\n      phoneAvailable: contact.phoneAvailable,\n      pictureUrl: contact.pictureUrl\n    }}\n    serviceType={ServiceType.CONTACT}\n    field={field}\n    key={contact.id}\n  />\n)\n\nconst renderProjectForm = (project: IProject, field: string) => (\n  <FormPanel\n    formValues={{\n      id: project.id,\n      description: project.description,\n      githubUrl: project.githubUrl,\n      name: project.name,\n      showcaseUrl: project.showcaseUrl,\n      thumbnailUrl: project.thumbnailUrl\n    }}\n    serviceType={ServiceType.PROJECT}\n    field={field}\n    key={project.id}\n  />\n)\n\nconst renderExperienceForm = (experience: IExperience, field: string) => (\n  <FormPanel\n    formValues={{\n      id: experience.id,\n      description: experience.description,\n      name: experience.name,\n      timeFrame: experience.timeFrame,\n    }}\n    serviceType={ServiceType.EXPERIENCE}\n    field={field}\n    key={experience.id}\n  /> \n)\nconst MyCVForm: React.FC<OwnProps> = (props) => {\n  \n  const cv = props.cv\n              \n  if (cv) { return (\n    <div className='cvFormContainer'>\n      <div className='form-component-container'>\n        <FormPanel\n          formValues={{\n            id: cv.id,\n            name: cv.name,\n            github: cv.github,\n            techlist: cv.techlist\n          }}\n          serviceType={ServiceType.CV}\n          field=''\n        />\n      </div>\n        \n      <h3>Contact</h3>\n      <div className='form-component-container'>\n        {renderContactForm(cv.contact, 'contact')}\n      </div>\n      <h3>Profile</h3>\n      <div className='form-component-container'>\n        {cv.profile\n        ? renderProfileForm(cv.profile, 'profile')\n        : <FormPanel serviceType={ServiceType.PROFILE} field='profile' />}\n      </div>\n      <h3>Projects</h3>\n      <div className='form-component-container'>\n        {cv.projects && cv.projects.map((project) => renderProjectForm(project, 'projects'))}\n        <FormPanel serviceType={ServiceType.PROJECT} field='projects'/>\n      </div>\n      <h3>References</h3>\n      <div className='form-component-container'>\n        {cv.reference && cv.reference.map((ref) => renderContactForm(ref, 'reference'))}\n        <FormPanel serviceType={ServiceType.CONTACT} field='reference'/>\n      </div>\n      <h3>Work experience</h3>\n      <div className='form-component-container'>\n        {cv.experience && cv.experience.map((exp) => renderExperienceForm(exp, 'experience'))}\n        <FormPanel serviceType={ServiceType.EXPERIENCE} field='experience'/>\n      </div>\n      <h3>Education</h3>\n      <div className='form-component-container'>\n        {cv.education && cv.education.map((edu) => renderExperienceForm(edu, 'education'))}\n        <FormPanel serviceType={ServiceType.EXPERIENCE} field='education'/>\n      </div>\n      <h3>Language skills</h3>\n      <div className='form-component-container'>\n        {cv.communication \n        ? renderCommunicationForm(cv.communication, 'communication') \n        : <FormPanel serviceType={ServiceType.COMMUNICATION} field='communication'/>}\n      </div>\n      <h3>Other skills</h3>\n      <div className='form-component-container'>\n        {cv.skills\n        ? renderInfoForm(cv.skills, 'skills')\n        : <FormPanel serviceType={ServiceType.INFO} field='skills' />}\n      </div>\n      <h3>Info</h3>\n      <div className='form-component-container'>\n        {cv.info\n        ? renderInfoForm(cv.info, 'info')\n        : <FormPanel serviceType={ServiceType.INFO} field='info' />}\n      </div>\n      <h3>Attachments</h3>\n      <div className='form-component-container'>\n        {cv.attachments\n        ? renderInfoForm(cv.attachments, 'attachments')\n        : <FormPanel serviceType={ServiceType.INFO} field='attachments' />}\n        {!cv.attachments && <p style={{height: '110px'}}/>}\n      </div>\n      <div id='EndOfPage'></div>\n    </div>\n  )\n} else {\n    return (\n      <div>CV not found</div>\n    )\n  }\n}\n\nexport default MyCVForm\n","import React, { useEffect } from 'react'\nimport './Preview.css'\nimport { connect } from 'react-redux'\nimport { AppState } from '..'\nimport { ICV, IContact, IExperience, ICommunication } from '../services/cvService'\nimport { setLoading } from '../reducers/loadingReducer'\n\nconst renderTimeFrame = (timeFrame: {startDate: Date, endDate: Date}) => {\n  const { startDate, endDate } = timeFrame\n  const duration = endDate.valueOf() - startDate.valueOf()\n  const month = 1000 * 60 * 60 * 24 * 30\n  const year = 1000 * 60 * 60 * 24 * 365\n  if (duration < month) \n    return <p>\n      {startDate.getFullYear()}/{startDate.getMonth() + 1}/{startDate.getDate()+1}\n      –\n      {endDate.getFullYear()}/{endDate.getMonth() + 1}/{endDate.getDate()+1}\n      </p>\n  if (duration < year) \n    return <p>\n        {startDate.getFullYear()}/{startDate.getMonth()+1}\n        –\n        {endDate.getFullYear()}/{endDate.getMonth()+1}\n      </p>\n  return <p>{startDate.getFullYear()} – {endDate.getFullYear()}</p>\n}\n\ninterface OwnProps {\n  preview?: ICV\n}\nexport interface StateProps {\n  cv?: ICV,\n}\nexport interface DispatchProps {\n  setLoading: (loading: boolean) => void\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    cv: state.cv.cvs[0]\n  }\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  setLoading\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst Home: React.FC<Props> = (props) => {\n  const cv = props.preview || props.cv\n  if (!cv) {\n    return <div>No default cv</div>\n  } \n\n  // for preventing using componentDidUpdate\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useEffect(()=>{\n    props.setLoading(false)\n  },[props])\n\n  const contact = cv.contact\n  const reference: IContact[] | undefined = cv.reference\n  const experience: IExperience[] | undefined = cv.experience\n  const education: IExperience[] | undefined = cv.education\n  const communication: ICommunication | undefined = cv.communication\n\n  return (\n    <div className='cv-container'>\n      <div className='cv-container-item contact-container'>\n        <div>\n          <p id='NameInfo'>{contact.firstname} {contact.lastname}</p>\n          {contact.address && <p>{contact.address}</p>}\n          {contact.phone && <p>Phone num. {contact.phone}</p>}\n          {contact.email && <p>{contact.email}</p>}\n          {contact.linkedin && <p><a id='LinkedinProfile' href={contact.linkedin}>linkedin profile</a></p>}\n        </div>\n        <div>\n          <img id='ContactPicture' src={contact.pictureUrl} width='120px' alt='mypicture' />\n        </div>\n      </div>\n      <h1>Curriculum Vitae</h1>\n      <div className='cv-container-item cv-container-item-first'>\n        {cv.github && <p>Github: <a href={cv.github}>{cv.github}</a></p>}\n        {cv.techlist && <p>{cv.techlist}</p>}\n      </div>\n      {cv.profile && \n        <div className='cv-container-item cv-container-item-left'>\n          <h3><img src='profile.svg' width='45px' height='45px' alt='profileimage'/>Profile</h3>\n          <hr />\n          {cv.profile.content.map((paragraph, index) => <p key={`profile-p-${index}`} >{paragraph}</p>)}\n        </div>}\n      {cv.projects && cv.projects.length > 0 &&\n        <div className='cv-container-item cv-container-item-right'>\n          <h3><img src='project.svg' width='45px' height='40px' alt='icon'/>Projects</h3>\n          <hr />\n          {cv.projects.map((project, index) => \n            <div className='project-card' key={index + 'project'}>\n              <div style={{\n                width: '140px',\n                marginRight: '10px'\n              }}>\n                <img id={'thumbnailImage' + project.id} src={project.thumbnailUrl} width=\"100%\" alt='mypicture' />\n              </div>\n              <div>\n                <h4>{project.name}</h4>\n                <p>{project.description}</p>\n                <p className='project-card-links'>\n                  <a id={'githubLink' + project.id} href={project.githubUrl}>github</a>- <a id={'showcaseLink' + project.id} href={project.showcaseUrl}>showcase</a>\n                </p>\n              </div>\n            </div>\n          )}\n        </div>}\n      {reference && reference.length > 0 &&\n        <div className='cv-container-item'>\n          <h3><img src='reference.svg' width='40px' height='40px' alt='icon'/>References</h3>\n          <hr />\n          <div className='key-value-container'>\n            {reference.map((ref: IContact, index) => [\n              <div className='key-value-container-left' key={index+'-reference-left'}>\n                <p>{ref.firstname} {ref.lastname} {ref.company && '- ' + ref.company}</p> \n              </div>,\n              <div className='key-value-container-right' key={index+'-reference-right'}>\n                <p>Phone num. {ref.phone} ({ref.phoneAvailable})</p>\n                <p>{ref.email}</p>  \n              </div>\n            ])}\n          </div>\n        </div>}\n      {experience && experience.length > 0 &&\n        <div className='cv-container-item'>\n          <h3><img src='work.svg' width='55px' height='55px' alt='icon'/>Work Experience</h3>\n          <hr />\n          <div className='key-value-container'>\n            {experience.sort((a: IExperience, b: IExperience) =>\n              b.timeFrame.endDate.getTime() - a.timeFrame.endDate.getTime()\n            ).map((exp:IExperience, index) => [\n              <div className='key-value-container-left' key={index + '-experience-left'}>\n                {renderTimeFrame(exp.timeFrame)}\n              </div>,\n              <div className='key-value-container-right' key={index + '-experience-right'}>\n                <p>{exp.description}</p>\n              </div>\n            ])}\n          </div>\n        </div>}\n      {education && education.length > 0 &&\n        <div className='cv-container-item'>\n          <h3><img src='education.svg' width='45px' height='45px' alt='icon'/>Education</h3>\n          <hr/>\n          <div className='key-value-container'>\n            {education.sort((a: IExperience, b: IExperience) =>\n              b.timeFrame.endDate.getTime() - a.timeFrame.endDate.getTime()\n            ).map((edu: IExperience, index) => [\n              <div className='key-value-container-left' key={index + '-education-left'}>\n                {renderTimeFrame(edu.timeFrame)}\n              </div>,\n              <div className='key-value-container-right' key={index + '-education-right'}>\n                <p>{edu.description}</p>\n              </div>\n            ])}\n          </div>\n        </div>}\n      {communication &&\n        <div className='cv-container-item'>\n          <h3><img src='communication.svg' width='45px' height='45px' alt='icon' />Language skills</h3>\n          <hr />\n          <div className='language-container'>\n            {communication.languages.map((language,index) =>\n              <div key={index + 'language-container'}><p>{language.language}</p><p>:</p><p>{language.level}</p></div>\n            )}\n          </div>\n          {communication && communication.content.map((skill, index) =>\n            <p key={index + 'skill'}>{skill}</p>\n          )}\n        </div>}\n      {cv.skills &&\n        <div className='cv-container-item'>\n          <h3><img src='skills.svg' width='45px' height='45px' alt='icon'/>Other Skills</h3>\n          <hr />\n          {cv.skills.content.map((skill, index) =>\n            <p key={index + 'skill'}>{skill}</p>\n          )}\n        </div>}\n      {cv.attachments &&\n        <div className='cv-container-item'>\n          <h3><img src='attachment.svg' width='55px' height='45px' alt='icon'/>Attachments</h3>\n          <hr />\n          {cv.attachments.content.map((attachment, index) =>\n            <p key={index + 'attachment'}>{attachment}</p>\n          )}\n        </div>}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n\n","import React from 'react'\nimport Toolbar from '../Toolbar'\nimport { AppState } from '../..'\nimport { connect } from 'react-redux'\nimport './MyCV.css'\nimport cvService, { ICV, ServiceType } from '../../services/cvService'\nimport { Link, Route, useLocation } from 'react-router-dom'\nimport MyCVForm from './MyCVForm'\nimport { UserState } from '../../reducers/userReducer'\nimport { updateCVs, setPreviousCV } from '../../reducers/cvReducer'\nimport Home from '../Home'\nimport { showNotification, Type } from '../../reducers/notificationReducer'\nimport { setLoading } from '../../reducers/loadingReducer'\n\ninterface OwnProps {}\nexport interface StateProps { user: UserState, cvs?: ICV[] }\nexport interface DispatchProps {\n  updateCVs: (user: UserState) => void,\n  setPreviousCV: (id: string) => void,\n  showNotification: (message: string, type: Type, lifeTime?: number) => void,\n  setLoading: (loading: boolean) => void\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    user: state.user,\n    cvs: state.cv.cvs\n  }\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  updateCVs,\n  setPreviousCV,\n  showNotification,\n  setLoading\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst MyCV: React.FC<Props> = (props) => {\n  \n  const location = useLocation()\n  const formActive = location.pathname.includes('/mycv/') ? false : true\n  const myCVs = props.cvs ? props.cvs : []\n  \n  const renderForm = (cvs: ICV[]) => {\n    return (\n      <Route exact path=\"/mycv/:id\" render={({ match }) => \n      <MyCVForm cv={cvs.find(cv => { return cv.id === match.params.id })}/>\n    }/>\n    )\n  }\n  \n  return(\n    <div>\n      <Route exact path=\"/preview/:id\" render={({ match }) => \n        <div>\n          <Toolbar>\n            <div>\n            <Link to={`/mycv/${match.params.id}`}>\n              <button id='ReturnToEditor' className='toolbar-button'>\n                Return to editor\n              </button>\n            </Link>\n          </div>\n        </Toolbar>\n        <Home preview={props.cvs?.find(cv => cv.id + '' === match.params.id)}/>\n        </div>\n      }/>\n      <Route path=\"/mycv\" render={({ match }) =>\n        <div>\n          <Toolbar>\n            <div>\n              <button id='DuplicateDefault' className='toolbar-button' onClick={(event) => {\n                event.preventDefault()\n                props.setLoading(true)\n                myCVs[0] && cvService.duplicateCV(myCVs[0], props.user, props.showNotification)\n                  .then((response) => {\n                    props.updateCVs(props.user)\n                    props.showNotification('Default CV duplicated', Type.SUCCESS, 6)\n                  }).catch((error) => {\n                    if (error.response.data.error) {\n                      props.showNotification(error.response.data.error, Type.ERROR, 12)\n                    } \n                  })\n              }}>Duplicate Default</button>\n              <Route exact path=\"/mycv/:id\" render={({ match }) => [\n                <button\n                  id='SetAsDefaultCV'\n                  key={'toolbarbutton' + match.params.id}\n                  className='toolbar-button'\n                  disabled={formActive}\n                  onClick={(event) => {\n                      event.preventDefault()\n                      props.setLoading(true)\n                      cvService.setCVDefault(match.params.id, props.user)\n                    .then(() => {\n                      props.updateCVs(props.user)\n                      props.showNotification('Default CV updated', Type.SUCCESS, 4)\n                    })\n                    .catch((error) => {\n                      if (error.response.data.error) {\n                        props.showNotification(error.response.data.error, Type.ERROR, 12)\n                      }\n                  })}}\n                >Set As Default CV</button>,\n                <Link key={'toolbarlink' + match.params.id} to={`/preview/${match.params.id}`}>\n                  <button id='Preview' className='toolbar-button'>Preview</button>\n                </Link>\n              ]}/> \n              <Route exact path=\"/mycv\" render={({ match }) => [\n                <button key='toolbar-button-1' className='toolbar-button' disabled> Set As Default CV</button>,\n                <button key='toolbar-button-2' className='toolbar-button' disabled>Preview</button>\n              ]} /> \n            </div>\n          </Toolbar>\n          <h1>My CV's</h1>\n          <div className='cv-selector'>\n            {myCVs && myCVs.length > 0 && myCVs.map((cv:ICV, index:number) => {\n              const locationid = location.pathname.substr(location.pathname.length - cv.id.length)\n              const selected = locationid === cv.id\n              return <div \n                className='cv-item' \n                key={cv.id}\n                style={{\n                  transition: 'margin-top 0.2s ease, margin-bottom 0.2s ease',\n                  marginTop: selected ? '10px' : '2px',\n                  marginBottom: selected ? '2px' : '10px'\n                }}\n              >\n              <Link id={'Select' + cv.id} className='cv-selector-item' to={`/mycv/${cv.id}`} onClick={()=>{props.setPreviousCV(cv.id)}}>\n                <img src='emptycv.svg' width='150px' height='180px' alt='document'/>\n                  {index === 0 && <div className='default-label'>default</div>}\n                <div style={{zIndex: 1}}>\n                  {cv.name}\n                  {Object.entries(cv).map(([key, value]) => value ? <p key={key}>{key + ': ' + value}</p> : '')}\n                </div>\n              </Link> \n              <button\n                id={'Delete' + cv.id}\n                onClick={(event) => {\n                  event.preventDefault()\n                  props.setLoading(true)\n                  cvService.deleteObject(ServiceType.CV, cv.id, props.user)\n                  .then((response) => {\n                    props.updateCVs(props.user)\n                    props.showNotification('CV ' + cv.name + ' deleted', Type.SUCCESS, 4)\n                  })\n                }}\n              >\n                <img className='icon' src='delete.svg' width='17px' height='15px' alt='delete' />\n              </button>\n              </div>\n            })}\n            <img\n              id='CreateEmptyCV'\n              src='emptycvplus.svg'\n              width='150px'\n              height='180px'\n              alt='document'\n              onClick={(event)=>{\n                event.preventDefault()\n                props.setLoading(true)\n                cvService.createEmptyCV(props.user).then(response => {\n                  props.updateCVs(props.user)\n                  props.showNotification('Empty CV created', Type.SUCCESS, 4)\n                })\n              }}\n            /> \n          </div>\n          {renderForm(myCVs)}\n        </div>\n      }/>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCV)\n\n","import React, { useState, useEffect } from 'react'\nimport { Message } from '../reducers/notificationReducer'\n\ninterface Props {\n  message: Message,\n  duration?: number,\n  deleteNotification: Function\n}\n\nconst NotificationMessage: React.FC<Props> = (props) => {\n  const message = props.message\n  const duration = props.duration\n  const [alive, setAlive] = useState(1)\n  const [animation, setAnimation] = useState(true)\n\n  useEffect(()=>{\n    if (duration) {\n      const timer = setTimeout(() => {\n        setAlive(0)\n        clearTimeout(timer)\n      }, 100);\n    }\n  },[duration])\n\n  const closeButton = () => {\n    const r = 9\n    return (\n    <svg version=\"1.1\"\n      id=\"Layer_1\"\n      x=\"0px\" y=\"0px\"\n      style={{\n        width: '20px',\n        height: '20px',\n        position: 'static',\n        transform: 'scale(1.2)'\n      }}\n      viewBox=\"0 0 20 20\"\n      >\n    <g transform=\"translate(10,10)\">\n      <circle\n        className=\"close-circle\"\n        style={{\n          fill: 'none',\n          backgroundColor: 'none',\n          opacity: duration ? '.25' : '0', \n          strokeWidth: r,\n          strokeDasharray: alive * r * 3.14 + ' ' + r * 3.14,\n          transition: 'stroke-dasharray ' + duration + 's linear',\n          transform: 'scale(-1,1) rotate(-135deg)'\n        }}  r={r/2}\n      />\n    </g>\n      <rect \n        x=\"0.81\" y=\"9.29\"\n        transform=\"matrix(-0.7071 0.7071 -0.7071 -0.7071 24.1421 10)\"\n        width=\"18.38\" height=\"1.41\"/>\n      <rect \n        x=\"0.66\" y=\"9.4\"\n        transform=\"matrix(0.7071 0.7071 -0.7071 0.7071 10.038 -4.0285)\"\n        width=\"18.44\" height=\"1.41\"/>\n    </svg>\n  )} \n\n  const deleted = message.id.substr(8) === 'deleted'\n\n  return(\n    <div \n      key={message.id.substr(0,8)} \n      className={`notification ${message.type}`}\n      style={{\n        transition: 'all 0.4s ease',\n        maxHeight: deleted ? '0' : '50px',\n        paddingTop: deleted ? '0' : '10px',\n        paddingBottom: deleted ? '0' : '10px',\n        marginTop: deleted ? '0' : '5px',\n        marginBottom: deleted ? '0' : '4px',\n        overflow: deleted ? 'hidden' : 'auto',\n        display: animation ? 'grid' : 'none',\n      }}\n    >\n      <div className='notification-text'\n        style={{\n          transition: 'all 0.4s ease',\n          opacity: deleted ? '0' : '1'\n        }}\n      >{message.text}</div>\n      <div   \n        className='notification-close-button'\n        style={{\n          // transition: 'all 0.4s ease',\n          opacity: deleted ? '0' : '1',\n          marginTop: '2px',\n          minHeight: '20px',\n          minWidth: '20px'\n        }}\n        onClick={() => {\n          props.deleteNotification()\n          setAnimation(false)\n        }}\n      >{closeButton()}</div>\n    </div>\n  )\n}\n\nexport default NotificationMessage\n","import React, { useState, useEffect } from 'react'\nimport './Notification.css'\nimport { connect } from 'react-redux'\nimport { Message, deleteNotification } from '../reducers/notificationReducer'\nimport NotificationMessage from './NotificationMessage'\nimport { AppState } from '../index'\n\ninterface OwnProps {}\nexport interface StateProps {messages: Message[]}\nexport interface DispatchProps { deleteNotification: Function }\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    messages: state.notification.messages\n  }\n}\n\nconst mapDispatchToProps:DispatchProps = {\n  deleteNotification\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst NotificationArea: React.FC<Props> = (props) => {\n\n  const [messages, setMessages] = useState(props.messages)\n\n  useEffect(()=>{\n    const newMessages = props.messages.filter(\n      propsmessage => messages.findIndex(message => message.id === propsmessage.id) === -1\n    )\n    const newMessagesAndTaggedDeleted = messages.map(message => {\n      const propsMessageIndex = props.messages.findIndex(propsmessage => propsmessage.id === message.id)\n      if (propsMessageIndex === -1) {\n        const tempId = message.id.substr(0, 8) + 'deleted'\n        return { ...message, id: tempId }\n      }\n      return message\n    }).concat(newMessages)\n\n    if (newMessagesAndTaggedDeleted.find(message => {\n      return message.id.substr(8, 15) !== 'deleted'\n    })) {\n      setMessages(newMessagesAndTaggedDeleted)\n    } else {\n      setMessages([])\n    }\n    // adding messages to useEffect dependencies will crash the app\n    // eslint-disable-next-line\n  },[props.messages])\n\n  if ( messages ) {\n    return (\n      <div className='notificationContainer' style={{opacity: messages.length > 0 ? 1 : 0}}>\n        {messages.map( message => {\n          return (<NotificationMessage\n            key={message.id.substr(0,8)}\n            message={message}\n            deleteNotification={() =>\n              props.deleteNotification(message.id)}\n            duration={message.duration}>\n          </NotificationMessage>)\n        })}\n      </div>\n    )\n  }\n  return (\n    <div className='notificationContainer'></div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationArea)\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Background from './background/HexaBackground'\nimport Menu from './components/Menu'\nimport Login from './components/Login'\nimport Footer from './components/Footer'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// import { ReactHeight } from './utils/react-height'\nimport Users from './components/Users/Users'\nimport About from './components/About'\nimport MyCV from './components/MyCVForm/MyCV'\nimport NotificationArea from './components/Notification'\nimport { connect } from 'react-redux'\nimport { AppState } from '.'\nimport { UserState } from './reducers/userReducer'\nimport { updateCVs } from './reducers/cvReducer'\nimport Home from './components/Home'\n\ninterface OwnProps {\n  updateStatus?: () => void\n}\nexport interface StateProps { user: UserState }\nexport interface DispatchProps {\n  updateCVs: (user: UserState) => void\n}\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps: DispatchProps = {\n  updateCVs\n}\n\ntype Props = OwnProps & StateProps & DispatchProps\n\nconst App: React.FC<Props> = (props) => {\n  const { user } = props\n  const hideLogin = user && user.token.length > 2\n  const [ height, setHeight ] = useState(800)\n\n  console.log('running in',process.env.NODE_ENV)\n\n  useEffect(()=>{\n    const content = document.getElementById('content')\n    if ( content ) {\n      setHeight(content.clientHeight)\n    }\n    if (props.user && props.user.token.length > 0) {\n      props.updateCVs(props.user)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n  const content = () => {\n    props.updateStatus && props.updateStatus()\n    if (!hideLogin) {\n      return (\n        <div className='content'>\n          <Login />\n        </div>\n      )\n    }\n    return (\n      <div className='content'>\n        <Route exact path='/'><Home /></Route>\n        <Route path='/users'><Users /></Route>\n        <Route path='/mycv'><MyCV /></Route>\n        <Route path='/preview'><MyCV /></Route> \n        <Route exact path='/about'><About /></Route>\n      </div>\n    )\n  }\n\n  return ( \n    <div className=\"App\" id=\"App\">\n      <Router>\n      <Menu showRoutes={!hideLogin}/>\n      <Background height={height}/>\n        {/* <ReactHeight onHeightReady={(h:any) => setHeight(h)}> */}\n        {content()}\n        {/* </ReactHeight> */}\n      <NotificationArea/>\n      <Footer/>\n      <Background height={height} bottom/>\n      </Router>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\nimport thunk from 'redux-thunk'\nimport cvReducer from './reducers/cvReducer';\nimport loadingReducer from './reducers/loadingReducer';\n\nexport const rootReducer = combineReducers({\n  notification: notificationReducer,\n  user: userReducer,\n  cv: cvReducer,\n  loader: loadingReducer\n})\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nconst store = process.env.NODE_ENV === 'production'\n? createStore(rootReducer, applyMiddleware(thunk))\n: createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\ndeclare var window: any\nwindow.appStatus = false\nwindow.appStore = store\nconst updateStatus = () => {\n  window.appStatus = true\n}\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App updateStatus={updateStatus}/>\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrenderApp()\nstore.subscribe(renderApp)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}